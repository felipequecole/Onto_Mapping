<Ontology><Relations><Relation id="1"><relationName>relatedTo</relationName><humanFormat>arg1 is somehow {related to} arg2</humanFormat><populate>0</populate><visible>0</visible><generalizations /><domain>everyPromotedThing</domain><range>everyPromotedThing</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>0</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives /><inverse>relatedTo</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * related to * arg2</queryString><editDate>200-08-25</editDate><author /><curator /><description>associated; connected (http://dictionary.reference.com/browse/related)</description><freebaseID>/automotive/model/related</freebaseID><comment>Root, most-general-possible relation</comment></Relation><Relation id="2"><relationName>subpartOf</relationName><humanFormat>arg1 is a {subpart} of arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>everyPromotedThing</domain><range>everyPromotedThing</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>mutualProxyFor agentInteractsWithAgent agentControls controlledByAgent itemUsedWithItem agentCreated agentOwns atLocation isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>superpartOf</inverse><seedInstances>{&#8220;NYPD&#8221;, &#8220;NY&#8221;} {&#8220;U . S . Congress&#8221;, &#8220;U . S .&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>a portion or division of a whole that is separate or distinct; piece, fragment, fraction, or section; constituent (http://dictionary.reference.com/browse/part)</description><freebaseID>/music/composition/part of</freebaseID><comment>Expresses that something is part of the composition of something else.  The range need not be the same kind of thing as the domain, unlike for specializationOf.</comment></Relation><Relation id="3"><relationName>specializationOf</relationName><humanFormat>arg1 is a {kind of} arg2</humanFormat><populate>1</populate><visible>0</visible><generalizations>relatedTo</generalizations><domain>everyPromotedThing</domain><range>everyPromotedThing</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>mutualProxyFor agentInteractsWithAgent isTallerThan isShorterThan subjectConcernedByAcademicField</mutexExceptions><knownNegatives /><inverse>generalizationOf</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString /><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>one thing is a more specific kind of another thing</description><freebaseID>/people/profession/specialization of</freebaseID><comment>Unlike subpartOf, the range element is a kind of the domain element</comment></Relation><Relation id="4"><relationName>mutualProxyFor</relationName><humanFormat>arg1 and arg2 are {proxies} for eachother</humanFormat><populate>1</populate><visible>0</visible><generalizations>relatedTo</generalizations><domain>everyPromotedThing</domain><range>everyPromotedThing</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>subpartOf specializationOf agentInteractsWithAgent eventSubEventOf eventSuperEventOf eventCausedEvent eventCausedByEvent itemUsedWithItem agentInvolvedWithItem itemInvolvedWithAgent atLocation isTallerThan</mutexExceptions><knownNegatives /><inverse>mutualProxyFor</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * known as * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>two things can be taken to refer to each other equally</description><freebaseID /><comment>More general case of proxyFor that includes entity pairs that are truely interchangable and synonomous</comment></Relation><Relation id="5"><relationName>proxyFor</relationName><humanFormat>arg1 is a {proxy} for arg2</humanFormat><populate>1</populate><visible>0</visible><generalizations>mutualProxyFor</generalizations><domain>everyPromotedThing</domain><range>everyPromotedThing</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives /><inverse>proxyOf</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR on OR of) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>one thing can be taken to refer to another, but the reverse is not necessarily or equally so</description><freebaseID /><comment>Most general way to link entities that can (unidirectionally) be taken to mean other entities</comment></Relation><Relation id="6"><relationName>agentControls</relationName><humanFormat>arg1 {controls} arg2</humanFormat><populate>1</populate><visible>0</visible><generalizations>relatedTo</generalizations><domain>agent</domain><range>everyPromotedThing</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>agentOwns agentCreated agentInteractsWithAgent agentInvolvedWithItem subpartOf superpartOf agentContributedToCreativeWork isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>controlledByAgent</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>0</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (controls OR control OR controlled OR controling) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>to exercise restraint or direction over; dominate; command (http://dictionary.reference.com/browse/control)</description><freebaseID /><comment /></Relation><Relation id="7"><relationName>agentInteractsWithAgent</relationName><humanFormat>arg1 {interacts} with arg2</humanFormat><populate>0</populate><visible>0</visible><generalizations>relatedTo</generalizations><domain>agent</domain><range>agent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>0</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>subpartOf specializationOf mutualProxyFor agentControls isTallerThan</mutexExceptions><knownNegatives /><inverse>agentInteractsWithAgent</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (interacts OR interact OR interacted OR interacting) with * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>to act one upon another (http://dictionary.reference.com/browse/interact)</description><freebaseID>/astronomy/galaxy/interaction</freebaseID><comment>Most general agent-to-agent relation.  To begin with, we consider existing to be an action.  Therefore, this also captures states of being.  We may want to split this up later, which is a good reason to leave this populate=false.</comment></Relation><Relation id="8"><relationName>agentCollaboratesWithAgent</relationName><humanFormat>arg1 {collaborates} with arg2</humanFormat><populate>1</populate><visible>0</visible><generalizations>agentInteractsWithAgent</generalizations><domain>agent</domain><range>agent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives /><inverse>agentCollaboratesWithAgent</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (collaborates OR collaborate OR collaborated OR collaborating) with * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>to work, one with another; cooperate, as on a literary work (http://dictionary.reference.com/browse/collaborate)</description><freebaseID /><comment>Cooperative interaction.  Primary alternative to agentCompeteswithAgent</comment></Relation><Relation id="9"><relationName>agentHierarchicallyAboveAgent</relationName><humanFormat>arg1 is hierarchically {above} arg2</humanFormat><populate>0</populate><visible>0</visible><generalizations>agentCollaboratesWithAgent, agentControls</generalizations><domain>agent</domain><range>agent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>agentHoldsSharesInCompany companyHasShareholder</mutexExceptions><knownNegatives /><inverse>agentHierarchicallyBelowAgent</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (hierarchically above OR supervise OR supervised OR supervises OR supervising) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description /><freebaseID /><comment>This is for modelling power structures of control, not for arbitrary hierarchies (e.g. families) or things where agents are necessarily subparts of each-other.  Populate=false only because it has many more-interesting specializations.</comment></Relation><Relation id="10"><relationName>agentBelongsToOrganization</relationName><humanFormat>arg1 is an organization {belonging} to arg2</humanFormat><populate>1</populate><visible>0</visible><generalizations>agentHierarchicallyBelowAgent subpartOf</generalizations><domain>humanAgent</domain><range>organization</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>organizationHasAgent</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (belongs OR belong OR belonged OR belonging) to * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>to be in the relation of a member, adherent, inhabitant, etc (http://dictionary.reference.com/browse/belong)</description><freebaseID>/fictional universe/fictional character/organizations</freebaseID><comment>Most general agent-to-organization relation.</comment></Relation><Relation id="11"><relationName>subpartOfOrganization</relationName><humanFormat>arg1 is a {subpart} of the organization arg2</humanFormat><populate>1</populate><visible>0</visible><generalizations>agentBelongsToOrganization</generalizations><domain>organization</domain><range>organization</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>superpartOfOrganization</inverse><seedInstances>{"Patriotic Front", "Zimbabwe African National Union"} {"National People's Congress", "China"} {"Sports Service", "AFP"} {"business school", "Stanford"} {"Center for the Study of Drug Development", "Tufts"} {"Kapalua Bay Hotel", "Maui Land and Pineapple"} {"School of Journalism", "Columbia"} {"The Plain Dealer", "Newhouse newspaper chain"} {"board of trustees", "the March of Dimes"} {"Department of Commerce", "Texas"} {"Office of State-Federal Relations", "Texas"} {"Supreme Court", "Texas"} {"George Bush School of Government and Public Service", "Texas A&amp;M"} {"Department of Housing and Community Affairs", "Texas"} {"Department of Economic Development", "Texas"} {"Law School", "New York University"} {"New York City Council", "the city"} {"Miami-Dade County public schools", "Miami-Dade County"} {"US District Court for the Southern District of New York", "US"} {"Ducca", "Puccini Group"} {"Energy Information Administration", "federal government"} {"Senate Energy and Natural Resources Committee", "Senate"} {"Civil Affairs and Psychological Operations Command", "Army"} {"366th Civil Engineer Squadron", "Air Force"} {"320th Psychological Operations Company", "Army Reserve"} {"Senate Indian Affairs Committee", "Senate"} {"Tampa division", "Florida Middle District Bankruptcy Court"} {"U.S. Senate", "U.S."} {"Tampa division", "Florida Middle District Bankruptcy Court"} {"AL Eastern Division", "AL"} {"AL Eastern Division", "AL"} {"Carl Gustaf Lounge", "The hotel"} {"Rose Hall", "Iberostar Hotels and Resorts"} {"restaurant and bar", "Settlers' Beach Hotel"} {"Asian-Cuban restaurant", "Bacolet Beach Club"} {"Tiara", "Club Med Punta Cana"} {"Grand Palladium Lady Hamilton Resort and Spa", "Grand Palladium"} {"Coqui Water Park", "El Conquistador Resort and Golden Door Spa"} {"Grand Palladium Jamaica Resort and Spa", "Grand Palladium"} {"Reef Atlantis", "Atlantis"} {"Mamora Bay Divers", "St. James' Club and Villas"} {"Viceroy", "Kor Group"} {"Almond Casuarina Beach Resort", "Almond Resorts"} {"the state chamber of commerce", "the state"} {"the bond and taxation committee", "the state chamber of commerce"} {"Changchun", "Jilin Province"} {"Changchun", "Jilin Province"} {"Shenyang", "Liaoning"} {"Harbin", "Heilongjiang"} {"legislature", "the country"} {"Literature Faculty", "Hanoi General University"} {"Economics Affairs and Budget Commission", "NA"} {"Party Construction Department", "the magazine"} {"Political Bureau", "CPVCC"} {"Party Construction Department", "the magazine"} {"Commission for Mass Mobilization", "CPVCC"} {"editing board", "the magazine"} {"Document Department", "Communist Magazine"} {"research institute of economic operation and development", "National Development and Reform Commission"} {"macroeconomy department", "Development Research Center of the State Council"} {"National Security Council", "Republic of Armenia"} {"Law Faculty", "Yerevan State University"} {"National Assembly", "Armenia"} {"Oriental Studies Department", "Yerevan State University"} {"Philological Department", "Yerevan State University"} {"Faculty of Law", "Bar Ilan University"} {"General Armament Department", "People's Liberation Army"} {"No. 8 Aviation College", "PLA Air Force"} {"PLA Air Force", "PLA"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>one organization is a subpart of a larger, controlling organization</description><freebaseID>/business/business location/parent company</freebaseID><comment>Describes organizational hierarchy.  Note that controlling power is implicit.</comment></Relation><Relation id="12"><relationName>agentContributedToCreativeWork</relationName><humanFormat>arg1 {contributed to} the creative work arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>agent</domain><range>creativeWork</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>agentCreated agentControls agentOwns isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>creativeWorkContributedToByAgent</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString /><editDate>2010-12-10</editDate><author>Bryan</author><curator /><description>Specifies that a particular agent contributed to the production or creation of a particular creativeWork.  An actor in a movie contributes to that movie, but agentCreated would probably be to strong an assertion for that.</description><freebaseID /><comment /></Relation><Relation id="13"><relationName>worksFor</relationName><humanFormat>arg1 {works for} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personBelongsToOrganization</generalizations><domain>person</domain><range>organization</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>athletePlaysForTeam musicianInMusicArtist personAttendsSchool</mutexExceptions><knownNegatives /><inverse>worker</inverse><seedInstances>{"Steve Ballmer","Microsoft"}{"Fabrice Tourre","Goldman Sachs"}{"Stephanie Kwolek","DuPont"} {"Tom Brokaw","NBC"} {"Samuel Andrews","Standard Oil"} {"Otto Ambros","IG Farben"} {"William Shockley","Bell Labs"} {"Steve Wozniak","Apple"} {"Les Paul","Epiphone"}{"Albert Hofmann","Sandoz"} {"John Lafferty","Carnegie Mellon University"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (work OR works OR worked OR working) * arg2</queryString><editDate>2010-07-05</editDate><author /><curator /><description>to be employed, esp. as a means of earning one's livelihood (http://dictionary.reference.com/browse/work)</description><freebaseID /><comment>Naming: personWorksForOrganization, organizationEmploysPerson</comment></Relation><Relation id="14"><relationName>acquired</relationName><humanFormat>arg1 has {acquired} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>superpartOfOrganization</generalizations><domain>company</domain><range>company</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> {"Google","Yahoo"} {"Intel","AMD"} {"Microsoft","Google"} {"Microsoft","Yahoo"} {"Yahoo","Google"}</knownNegatives><inverse>acquiredBy</inverse><seedInstances>{"Berkshire Hathaway","NetJets"} {"Ford","Jaguar"} {"General Electric","NBC"} {"GM","Hummer"} {"Google","YouTube"} {"HP","Compaq"} {"Intel","Sarvega"} {"Mattel","The Learning Company"} {"Microsoft","Connectix"} {"News Corp.","Dow Jones"} {"Nokia","Plazes"} {"Oracle","Agile"} {"SAP","Business Objects"} {"Whole Foods","Wild Oats"} {"Yahoo","Overture"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (acquires OR acquire OR acquired OR acquiring) * arg2</queryString><editDate /><author /><curator /><description>to come into possession or ownership of; get as one's own (http://dictionary.reference.com/browse/acquire)</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/business/business operation", "/organization/organization/companies acquired": [{ "/business/acquisition/company acquired": { "name": null, "/common/topic/alias": [], "type": "/business/business operation" } }] }]</freebaseID><comment>We may run into trouble here because acquisition is an event and having a sub-organization is a state of being (Derry: agree, but right now I cannot think of a solution to this - perhaps it is related to the factor that makes an organization a subpart of another organization; whether it is due to acquisition or not) (Naming: companyAcquiredCompany, companyAcquiredByCompany)</comment></Relation><Relation id="15"><relationName>actorStarredInMovie</relationName><humanFormat>arg1 {starred in} the movie arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentContributedToCreativeWork</generalizations><domain>actor</domain><range>movie</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>directorDirectedMovie</mutexExceptions><knownNegatives>{"Jodie Foster", "Fight Club"} {"Brad Pitt", "Star Wars"} {"Harrison Ford", "Pirates of the Carribean"} {"Sigourney Weaver", "Die Hard"} {"Arnold Schwarzenegger", "Ferris Bueller 's Day Off"}</knownNegatives><inverse>movieStarActor</inverse><seedInstances>{"Jodie Foster", "Silence of the Lambs"} {"Brad Pitt", "Fight Club"} {"Harrison Ford", "Star Wars"} {"John Goodman", "Big Lebowski"} {"Johnny Depp", "Pirates of the Carribean"} {"Sigourney Weaver", "Aliens"} {"Roger Moore", "Octopussy"} {"Bruce Willis", "Die Hard"} {"Arnold Schwarzenegger", "Terminator"} {"Matthew Broderick", "Ferris Bueller 's Day Off"} {"Keanu Reeves", "Matrix"} {"Tom Hanks", "Forrest Gump"} {"Al Pacino", "The Godfather"} {"Susan Sarandon", "Witches of Eastwick"} {"Jamie Lee Curtis", "True Lies"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * (stars OR star OR starred OR starring) in * arg2</queryString><editDate /><author /><curator /><description>to perform as an actor (in movie) (http://dictionary.reference.com/browse/act)</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/film/actor", "/film/actor/film": [{ "/film/performance/film": { "name": null, "/common/topic/alias": [], "type": "/film/film" } }] }]</freebaseID><comment>Movie must star actors while actor may not star in a movie, he may star in an advertisement, theatre production, or television show instead and still be an actor</comment></Relation><Relation id="16"><relationName>directorDirectedMovie</relationName><humanFormat>arg1 {directed} the movie arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentContributedToCreativeWork</generalizations><domain>director</domain><range>movie</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>actorStarredInMovie</mutexExceptions><knownNegatives /><inverse>movieDirectedByDirector</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * (directs OR direct OR directed OR directing) * arg2</queryString><editDate>2010-11-01</editDate><author>Bryan</author><curator /><description>to direct a monvie</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/film/director", "/film/director/film": [{ "name": null, "/common/topic/alias": [], "type": "/film/film" }] }]</freebaseID><comment>Added during feedback @ 160 in order to separate actor from director.  Faces issues similar to actor: we're only considering here directors that happen to direct movies</comment></Relation><Relation id="17"><relationName>athleteCoach</relationName><humanFormat>arg1 is an athlete {coached by} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentHierarchicallyBelowAgent</generalizations><domain>athlete</domain><range>coach</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"LeBron James","Phil Jackson"} {"Paul Pierce","Mike Brown"} {"Jim Thome","Tony La Russa"} {"Brian Urlacher","Mike Tomlin"} {"Eli Manning","Lovie Smith"}</knownNegatives><inverse>coachesAthlete</inverse><seedInstances>{"Kobe Bryant","Phil Jackson"} {"LeBron James","Mike Brown"} {"Paul Pierce","Doc Rivers"} {"Albert Pujols","Tony La Russa"} {"Jim Thome","Ozzie Guillen"} {"Ben Roethlisberger","Mike Tomlin"} {"Brian Urlacher","Lovie Smith"} {"Eli Manning","Tom Coughlin"} {"Peyton Manning","Tony Dungy"} {"Freddy Sanchez","John Russell"} {"Alexander Ovechkin","Bruce Boudreau"} {"Ben Gordon","Scott Stiles"} {"Dwight Howard","Stan Van Gundy"} {"Larry Fitzgerald","Ken Whisenhunt"} {"Carson Palmer","Marvin Lewis"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * coached by * arg2</queryString><editDate /><author /><curator /><description>to give instruction or advice to in the capacity of a coach; instruct (http://dictionary.reference.com/browse/coach)</description><freebaseID>/american football/football historical coach position/coach</freebaseID><comment>For a person to be a coach, he must be training an athlete - but must a person have a coach to be considered an athlete? (Naming: athleteCoachedByCoach, coachCoachesAthlete)</comment></Relation><Relation id="18"><relationName>athleteHomeStadium</relationName><humanFormat>the {home stadium of} arg1 is arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentActsInLocation</generalizations><domain>athlete</domain><range>stadiumOrEventVenue</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"Brian Urlacher","Wrigley Field"} {"Paul Pierce","Madison Square Garden"} {"Carson Palmer","Heinz Field"} {"Ben Gordon","Soldier Field"} {"Eli Manning","Lucas Oil Stadium"}</knownNegatives><inverse>stadiumHomeToAthlete</inverse><seedInstances>{"Mickey Mantel","Yankee Stadium"} {"Alex Rodriguez","Yankee Stadium"} {"Brian Urlacher","Soldier Field"} {"Albert Pujols","Busch Stadium"} {"Jim Thome","U.S. Cellular Field"} {"Paul Pierce","TD Banknorth Garden"} {"LeBron James","Quicken Loans Arena"} {"Carson Palmer","Paul Brown Stadium"} {"Larry Fitzgerald","University of Phoenix Stadium"} {"Dwight Howard","Amway Arena"} {"Ben Gordon","United Center"}  {"Eli Manning","Giants Stadium"} {"Peyton Manning","Lucas Oil Stadium"} {"Sidney Crosby","Mellon Arena"} {"Nicklas Lidstrom","Joe Louis Arena"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg2 * home to * arg1</queryString><editDate /><author /><curator /><description>a sports arena, usually oval or horseshoe-shaped, with tiers of seats for spectators (which is home for an athlete) (http://dictionary.reference.com/browse/stadium)</description><freebaseID>/sports/sports team/arena stadium</freebaseID><comment>Naming: athleteHasHomeStadiumOrEventVenue, stadiumOrEventVenueHomeToAthlete</comment></Relation><Relation id="19"><relationName>athletePlaysForTeam</relationName><humanFormat>arg1 {plays for} the team arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personBelongsToOrganization</generalizations><domain>athlete</domain><range>sportsTeam</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>worksFor</mutexExceptions><knownNegatives>{"Alex Rodriguez","Cubs"} {"Alexander Ovechkin","Penguins"} {"Allen Iverson","Bulls"} {"Deron Williams","Magic"} {"Eli Manning","Colts"}</knownNegatives><inverse>teamMember</inverse><seedInstances>{"Alex Rodriguez","Yankees"} {"Alexander Ovechkin","Capitals"} {"Allen Iverson","Pistons"} {"Deron Williams","Jazz"} {"Dwight Howard","Magic"} {"Eli Manning","Giants"} {"Ichiro Suzuki","Mariners"} {"Jim Thome","White Sox"} {"Kevin Garnett","Celtics"} {"Kobe Bryant","Lakers"} {"Martin Brodeur","Devils"} {"Nicklas Lidstrom","Red Wings"} {"Peyton Manning","Colts"} {"Reggie Bush","Saints"} {"Sidney Crosby","Penguins"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * (plays OR play OR played OR playing) for * arg2</queryString><editDate /><author /><curator /><description>to join together in a team (http://dictionary.reference.com/browse/team)</description><freebaseID>/soccer/football team/current roster</freebaseID><comment>Naming: athletePlaysForSportsTeam, sportsTeamHasMemberAthlete</comment></Relation><Relation id="20"><relationName>athletePlaysInLeague</relationName><humanFormat>arg1 {plays} in the league arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personBelongsToOrganization</generalizations><domain>athlete</domain><range>sportsLeague</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"Sidney Crosby","NBA"} {"Sammy Sosa","NFL"} {"Kobe Bryant","NFL"} {"Dustin Pedroia", "NBA"} {"Brian Urlacher","NHL"}</knownNegatives><inverse>leaguePlayers</inverse><seedInstances>{"Sidney Crosby","NHL"} {"Sammy Sosa","MLB"} {"Kobe Bryant","NBA"} {"Dustin Pedroia", "MLB"} {"Brian Urlacher","NFL"} {"Alexander Ovechkin","NHL"} {"Paul Pierce","NBA"} {"Albert Pujols","MLB"} {"Alex Rodriguez","MLB"} {"Deron Williams","NBA"} {"Nicklas Lidstrom","NHL"} {"Allen Iverson","NBA"} {"Eli Manning","NFL"} {"Ben Roethlisberger","NFL"} {"Dwight Howard","NBA"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * (plays OR play Or played OR playing) in * arg2</queryString><editDate /><author /><curator /><description>a group of athletic teams organized to promote mutual interests and to compete chiefly among themselves (http://dictionary.reference.com/browse/league)</description><freebaseID>/sports/sports league participation/league</freebaseID><comment>Naming: athletePlaysInSportsLeague, sportsLeagueHasPlayerAthlete</comment></Relation><Relation id="21"><relationName>athletePlaysSport</relationName><humanFormat>arg1 {plays} the sport arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>athlete</domain><range>sport</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives> {"Brett Favre","baseball"} {"Deron Williams","baseball"} {"Dwayne Wade","hockey"} {"Evander Holyfield","football"} {"Kerry Wood","tennis"}</knownNegatives><inverse>players</inverse><seedInstances>{"Alex Rodriguez","baseball"} {"Alexander Ovechkin","hockey"} {"Allen Iverson","basketball"} {"David Beckham","soccer"} {"Evander Holyfield","boxing"} {"Kobe Bryant","basketball"} {"Kurt Warner","football"} {"LeBron James","basketball"} {"Lennox Lewis","boxing"} {"Pete Sampras","tennis"} {"Peyton Manning","football"} {"Phil Mickelson","golf"} {"Roger Federer","tennis"} {"Sidney Crosby","hockey"} {"Tiger Woods","golf"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * (plays OR play OR played OR playing) * arg2</queryString><editDate /><author /><curator /><description>to engage in (a game, pastime, etc.) (http://dictionary.reference.com/browse/play)</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/sports/pro athlete", "/sports/pro athlete/sports played professionally": [{ "/sports/pro sports played/sport": { "name": null, "/common/topic/alias": [], "type": "/sports/sport" } }] }]</freebaseID><comment>Naming: athletePlaysSport, sportHasPlayerAthlete</comment></Relation><Relation id="22"><relationName>buildingLocatedInCity</relationName><humanFormat>arg1 is a building {located in} the city arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>locationLocatedWithinLocation</generalizations><domain>building</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>aquariumInCity</mutexExceptions><knownNegatives /><inverse>cityContainsBuilding</inverse><seedInstances>{"Louvre","Paris"}{"Empire State Building","New York City"}{"White House","Washington D.C."}{"Sears Tower","Chicago"}{"Chrysler Building","New York City"}{"Warhol Museum","Pittsburgh"}{"Rockefeller Center","New York City"}{"USX Building","Pittsburgh"}{"PPG Place","Pittsburgh"}{"Trump Taj Mahal Casino Resort","Atlantic City"}{"Bolshoi Theatre","Moscow"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate /><author /><curator /><description>specifies that a particular building is located in a particular city</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/architecture/building", "/architecture/structure/address": [{ "/location/mailing address/citytown": { "name": null, "/common/topic/alias": [], "type": "/location/citytown" } }] }]</freebaseID><comment /></Relation><Relation id="23"><relationName>topMemberOfOrganization</relationName><humanFormat>arg1 is a {top member} of arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>worksFor personLeadsOrganization</generalizations><domain>person</domain><range>company</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>organizationHasTopMember</inverse><seedInstances>{&#8220;Julie Gerberding&#8221;, &#8220;United States Centers for Disease Prevention and Control&#8221;} {&#8220;Michael E. Cryor&#8221;, &#8220;Maryland Democratic Party&#8221;} {&#8220;Arthur Garson&#8221;, &#8220;University of Virginia&#8221;} {&#8220;Walter Sheldon Rodman&#8221;, &#8220;University of Virginia Engineering School&#8221;} {&#8220;Ruth Harley&#8221;, &#8220;Screen Australia&#8221;} {&#8220;Ahmed Foruzandeh&#8221;, &#8220;Quds Force&#8221;} {&#8220;Mohamed Elmasry&#8221;, &#8220;Canadian Islamic Congress&#8221;} {&#8220;Robin Bronk&#8221;, &#8220;Creative Coalitiion&#8221;} {&#8220;Alice Scott&#8221;, &#8220;Century Regional Detention Center&#8221;} {&#8220;Aline Isaacson&#8221;, &#8220;GLSEN&#8221;} {&#8220;Dieter Schiessl&#8221;, &#8220;World Meteorological Organization&#8221;} {&#8220;Margaret Carriere&#8221;, &#8220;Halliburton&#8221;} {&#8220;Nathan Bouscher&#8221;, &#8220;CIDI&#8221;} {&#8220;Stan Sigman&#8221;, &#8220;Cingular&#8221;} {&#8220;Omar Minaya&#8221;, &#8220;New York Mets&#8221;} {&#8220;Mike Widomski&#8221;, &#8220;FEMA&#8221;} {&#8220;Michel Sidibe&#8221;, &#8220;UNAIDS&#8221;} {&#8220;Carter Cast&#8221;, &#8220;Walmart&#8221;} {&#8220;Don Hall&#8221;, &#8220;National Center for State Courts&#8221;} {&#8220;Don L. Blankenship&#8221;, &#8220;Massey Energy&#8221;} {&#8220;Mitch Hecht&#8221;, &#8220;International Steel Group&#8221;} {&#8220;Kibamba Kasereka&#8221;, &#8220;Mai-Mai militia&#8221;} {&#8220;Sylvain Abitbol&#8221;, &#8220;Canadian Jewish Congress&#8221;} {&#8220;Odile Roujol&#8221;, &#8220;Lancome&#8221;} {&#8220;Allan Rivlin&#8221;, &#8220;Peter D. Hart Research Associates&#8221;} {&#8220;Chris Severson-Baker&#8221;, &#8220;Pembina Institute&#8221;} {&#8220;Mark Hackard&#8221;, &#8220;Nixon Center&#8221;} {&#8220;Abdul Aziz al-Hakin&#8221;, &#8220;Badr Organization&#8221;} {&#8220;Eddy Hartenstein&#8221;, &#8220;DirecTV&#8221;} {&#8220;Val Christensen&#8221;, &#8220;EnergySolutions&#8221;} {&#8220;John Hill&#8221;, &#8220;FMCSA&#8221;} {&#8220;Abigail Johnson&#8221;, &#8220;FMR Corp.&#8221;} {&#8220;Jane Garvey&#8221;, &#8220;Federal Aviation Administration&#8221;} {&#8220;Trevor Potter&#8221;, &#8220;Federal Election Commission&#8221;} {&#8220;Martin Gilbert&#8221;, &#8220;FirstGroup&#8221;} {&#8220;Jim Flavin&#8221;, &#8220;Fyffes PLC&#8221;} {&#8220;Andrew Kam&#8221;, &#8220;Hong Kong Disneyland&#8221;} {&#8220;David S . Sutherland&#8221;, &#8220;IPSCO&#8221;} {&#8220;Jack Del Rio&#8221;, &#8220;Jacksonville Jaguars&#8221;} {&#8220;Yoshiaki Ando&#8221;, &#8220;Konica Minolta&#8221;} {&#8220;Jay Brown&#8221;, &#8220;MBIA&#8221;} {&#8220;John Kilduff&#8221;, &#8220;MF Global&#8221;} {&#8220;John Dooley&#8221;, &#8220;Markit&#8221;} {&#8220;Juan Carlos Osorio&#8221;, &#8220;Millonarios&#8221;} {&#8220;Charlie King&#8221;, &#8220;National Action Network&#8221;} {&#8220;Phil Waugh&#8221;, &#8220;New South Wales Waratahs&#8221;} {&#8220;Brian Tierney&#8221;, &#8220;Philadelphia Inquirer&#8221;} {&#8220;Theo Epstein&#8221;, &#8220;Red Sox&#8221;} {&#8220;Aubrey Sarvis&#8221;, &#8220;SLDN&#8221;} {&#8220;Luiz Furlan&#8221;, &#8220;Sadia&#8221;} {&#8220;Tim Zagat&#8221;, &#8220;Zagat&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2013-02-15</editDate><author>Bryan</author><curator /><description>Identifies people in high-level, leading positions at organizations.  Applicable positions have authority over the entire organization (e.g. presidents, VPs, directors, and C-level executives), not merely over departments or subsidiaries.</description><freebaseID /><comment>TAC KBP 2012</comment></Relation><Relation id="24"><relationName>ceoOf</relationName><humanFormat>arg1 is the {CEO of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>topMemberOfOrganization</generalizations><domain>ceo</domain><range>company</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"Jeff Bezos","Apple"} {"Paul Allen","Microsoft"} {"Sergey Brin","Google"} {"Larry Page","Google"} {"David Filo","Yahoo"}</knownNegatives><inverse>companyCeo</inverse><seedInstances> {"Alain Belda","Alcoa"} {"David Brown","Owens Corning"} {"Edgar Bronfman","Warner Music Group"} {"Edward Johnson","Fidelity"} {"Eric Schmidt","Google"} {"Jeff Bezos","Amazon"} {"John Antioco","Blockbuster"} {"Mark Zuckerberg","Facebook"} {"Richard Notebaert","Qwest Communications"} {"Stephen Bennett","Intuit"} {"Stephen Bollenbach","Hilton Hotels"} {"Steve Ballmer","Microsoft"} {"Steve Jobs","Apple"} {"Steven Appleton","Micron"} {"Warren Buffett","Berkshire Hathaway"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * ceo of * arg2</queryString><editDate /><author /><curator /><description>specifies that a particular CEO is the CEO of a particular company</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/business/board member", "/business/board member/leader of": [{ "/organization/leadership/title~=": "CEO", "/organization/leadership/organization": { "name": null, "/common/topic/alias": [], "type": "/business/business operation" } }] }]</freebaseID><comment>Should be mutex with personLeadsGeopoliticalOrganization xcept that companies are not yet allowed to be geopolitical organizations</comment></Relation><Relation id="25"><relationName>cityLocatedInGeopoliticalLocation</relationName><humanFormat>arg1 is a city {located in} the geopolitical location arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>locationLocatedWithinLocation</generalizations><domain>city</domain><range>geopoliticalLocation</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>geopoliticalLocationContainsCity</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString /><editDate>2011-10-13</editDate><author>Bryan</author><curator /><description>specifies that a particular city is located in a particular geopolitical location</description><freebaseID /><comment /></Relation><Relation id="26"><relationName>stateLocatedInGeopoliticalLocation</relationName><humanFormat>arg1 is a state or province {located in} the geopolitical location arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>locationLocatedWithinLocation</generalizations><domain>stateOrProvince</domain><range>geopoliticalLocation</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>geopoliticalLocationContainsState</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString /><editDate>2011-10-13</editDate><author>Bryan</author><curator /><description>specifies that a particular state or province is located in a particular geopolitical location</description><freebaseID /><comment /></Relation><Relation id="27"><relationName>countryLocatedInGeopoliticalLocation</relationName><humanFormat>arg1 is a country {located in} the geopolitical location arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>locationLocatedWithinLocation</generalizations><domain>country</domain><range>geopoliticalLocation</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>geopoliticalLocationContainsCountry</inverse><seedInstances>{&#8220;Mexico&#8221;, &#8220;North America&#8221;} {&#8220;Libya&#8221;, &#8220;North Africa&#8221;} {&#8220;Zimbabwe&#8221;, &#8220;Africa&#8221;} {&#8220;Thailand&#8221;, &#8220;Asia&#8221;} {&#8220;Persia&#8221;, &#8220;Central Asia&#8221;} {&#8220;Belgium&#8221;, &#8220;EU&#8221;} {&#8220;France&#8221;, &#8220;Europe&#8221;} {&#8220;Estonia&#8221;, &#8220;Baltics&#8221;} {&#8220;Greece&#8221;, &#8220;Mediteranian&#8221;} {&#8220;Austria&#8221;, &#8220;Eurasia&#8221;} {&#8220;Finland&#8221;, &#8220;Scandinavia&#8221;} {&#8220;Nauru&#8221;, &#8220;Micronesia&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString /><editDate>2011-10-13</editDate><author>Bryan</author><curator /><description>specifies that a particular country is located in a particular geopolitical entity</description><freebaseID /><comment /></Relation><Relation id="28"><relationName>cityCapitalOfCountry</relationName><humanFormat>arg1 is the {capital city of} the country arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>cityLocatedInCountry proxyFor</generalizations><domain>city</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"Manhattan","United States"}{"Toronto","Canada"}{"London","Ireland"}{"Venice","Italy"}</knownNegatives><inverse>countryCapital</inverse><seedInstances>{"Ottawa","Canada"}{"Moscow","Russia"}{"Paris","France"}{"Buenos Aires","Argentina"}{"Tehran","Iran"}{"New Dehli","India"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * capital of * arg2</queryString><editDate /><author /><curator /><description>specifies that a particular city is the capital of a particular country</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/location/citytown", "/type/reflect/any reverse": [{ "link": "/location/country/capital", "name": null, "/common/topic/alias": [] }] }]</freebaseID><comment>switch and rename to countryHasCapitalCity ?</comment></Relation><Relation id="29"><relationName>cityLocatedInCountry</relationName><humanFormat>arg1 is a city {located in} the country arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>cityLocatedInGeopoliticalLocation</generalizations><domain>city</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> {"Antwerp","Argentina"} {"Istanbul","China"} {"New York","Finland"} {"Pittsburgh","Mexico"} {"Toronto","United States"}</knownNegatives><inverse>countryCities</inverse><seedInstances> {"Alexandria","Egypt"} {"Beijing","China"} {"Boston","United States"} {"Chicago","United States"} {"Espoo","Finland"} {"Hamburg","Germany"} {"Havana","Cuba"} {"Istanbul","Turkey"} {"Manchester","United Kingdom"} {"Munich","Germany"} {"New York City","United States"} {"Pittsburgh","United States"} {"Rio de Janeiro","Brazil"} {"Tokyo","Japan"} {"Toronto","Canada"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate /><author /><curator /><description>specifies that a particular city is located in a particular country</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/location/citytown", "/location/location/containedby": [{ "type": "/location/country", "name": null, "/common/topic/alias": [] }] }]</freebaseID><comment /></Relation><Relation id="30"><relationName>cityLocatedInState</relationName><humanFormat>arg1 is a city {located in} the state or province arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>cityLocatedInGeopoliticalLocation</generalizations><domain>city</domain><range>stateOrProvince</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"Philadephia","New York"} {"Pittsburgh","Ohio"} {"Boston","Maine"} {"Salt Lake","Nevada"} {"Denver","Texas"}</knownNegatives><inverse>stateContainsCity</inverse><seedInstances>{"Pittsburgh","Pennsylvania"} {"Boston","Massachusetts"} {"Chicago","Illinois"} {"Albany","New York State"} {"San Francisco","California"} {"Seattle","Washington"} {"Philadelphia","Pennsylvania"} {"Durham","North Carolina"} {"Boston","Massachusetts"} {"Miami","Florida"} {"Morgantown","West Virginia"} {"New Brunswick","New Jersey"} {"Atlantic City","New Jersey"} {"Roanoke","Virginia"} {"Phoenix","Arizona"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate /><author /><curator /><description>specifies that a particular city is located in a particular state or province</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/location/citytown", "/location/location/containedby": [{ "type": "/location/us state", "name": null, "/common/topic/alias": [] }] }]</freebaseID><comment>this FB query is only for the cities in US states, because FB doesn't have a direct mapping for our stateOrProvince category</comment></Relation><Relation id="31"><relationName>coachesInLeague</relationName><humanFormat>arg1 {coaches} in the league arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personBelongsToOrganization</generalizations><domain>coach</domain><range>sportsLeague</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"Phil Jackson","NFL"} {"Mike Brown","NHL"} {"Doc Rivers","NFL"} {"Ozzie Guillen","NBA"} {"Tony La Russa","NFL"}</knownNegatives><inverse>leagueCoaches</inverse><seedInstances>{"Phil Jackson","NBA"} {"Mike Brown","NBA"} {"Doc Rivers","NBA"} {"Ozzie Guillen","MLB"} {"Tony La Russa","MLB"} {"Mike Tomlin","NFL"} {"Frank Beamer","NCAA Football"} {"Jay Triano","NBA"} {"Mike Babcock","NHL"} {"Ron Wilson","NHL"} {"Terry Murray","NHL"} {"Andy Reid","NFL"} {"Bill Belichick","NFL"} {"Eric Mangini","NFL"} {"Ron Zook","NCAA Football"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (coaches OR coach OR coached OR coaching) * arg2</queryString><editDate /><author /><curator /><description>specifies that a particular coach coaches a team that plays in a particular league</description><freebaseID /><comment>rename:coachCoachesInLeague; no general 'coach' in FB.  Note that we're leaving this mutually exclusive with worksFor on assumption; if somebody knows better, please say so.</comment></Relation><Relation id="32"><relationName>coachesTeam</relationName><humanFormat>arg1 {coaches} the team arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>worksFor</generalizations><domain>coach</domain><range>sportsTeam</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"Doc Rivers","Hawks"} {"Eric Wedge","Pittsburgh Pirates"} {"Joe Paterno","Panthers"} {"John Russell","New York Giants"} {"Larry Brown","Celtics"}</knownNegatives><inverse>teamCoach</inverse><seedInstances> {"Bo Pelini","Cornhuskers"} {"Bobby Bowden","Seminoles"} {"Dave Wannstedt","Panthers"} {"Doc Rivers","Celtics"} {"Eric Wedge","Indians"} {"Frank Beamer","Hokies"} {"Jay Triano","Raptors"} {"Joe Paterno","Nittany Lions"}  {"Larry Brown","Bobcats"} {"Lovie Smith","Bears"} {"Mike Shanahan","Giants"} {"Mike Woodson","Hawks"} {"Pete Carroll","USC"} {"Phil Jackson","Lakers"} {"Ron Zook","Illini"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (coaches OR coach OR coached OR coaching) * arg2</queryString><editDate /><author /><curator /><description>specifies that a particular coach coaches a particular team</description><freebaseID>"</freebaseID><comment>rename:coachCoachesTeam</comment></Relation><Relation id="33"><relationName>coachWonTrophy</relationName><humanFormat>the coach arg1 {won} the trophy or tournament arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>coach</domain><range>awardTrophyTournament</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives>{"Phil Jackson","Super Bowl"} {"Bill Cowher","Stanley Cup"} {"Ozzie Guillen","Super Bowl"} {"Tony La Russa","NBA Finals"} {"Tom Coughlin","World Series"}</knownNegatives><inverse>trophyWonByCoaches</inverse><seedInstances>{"Phil Jackson","NBA Championship"} {"Bill Cowher","Super Bowl"} {"Ozzie Guillen","World Series"} {"Tony La Russa","World Series"} {"Tom Coughlin","Super Bowl"} {"Tony Dungy","Super Bowl"} {"Bill Belichick","Super Bowl"} {"Chuck Daly","NBA Championship"} {"Pat Riley","NBA Championship"} {"Joe Torre","World Series"} {"Vince Lombardi","Super Bowl"} {"Tom Landry","Super Bowl"} {"Mike Ditka","Super Bowl"} {"Joe Gibbs","Super Bowl"} {"Mike Holmgren","Super Bowl"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (wins OR win OR won OR winning) * arg2</queryString><editDate /><author /><curator /><description>specifies that a particular coach coaches a team that won a particular award or trophy</description><freebaseID /><comment /></Relation><Relation id="34"><relationName>companyEconomicSector</relationName><humanFormat>arg1 is a company {in the economic sector of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>company</domain><range>economicSector</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan subjectConcernedByAcademicField</mutexExceptions><knownNegatives> {"Adobe","cars"} {"AMD","insurance"} {"Apple","financial services"} {"Canon","drugs"} {"Electronic Arts","hardware"}</knownNegatives><inverse>economicSectorCompany</inverse><seedInstances> {"Adobe","software"} {"AFLAC","insurance"} {"Alcoa","aluminum"} {"AMD","semiconductors"} {"Apple","consumer electronics"} {"Berkshire Hathaway","insurance"} {"Canon","imaging"} {"Electronic Arts","video games"}  {"Ford","automotive"} {"Kimberly-Clark","consumer products"} {"Microsoft","computer software"} {"Morgan Stanley","financial services"} {"Pfizer","pharmaceuticals"} {"Sony","consumer electronics"} {"Toyota","automotive"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * in * arg2</queryString><editDate /><author /><curator /><description>specifies that a particular company does business in a particular economic sector</description><freebaseID>[{ "name": null, "type": "/business/business operation", "/common/topic/alias": [], "/business/business operation/industry": [{ "name": null, "/common/topic/alias": [], "type": "/business/industry" }] }]</freebaseID><comment>rename:companyOperatesInIndustry ?</comment></Relation><Relation id="35"><relationName>competesWith</relationName><humanFormat>the companies arg1 and arg2 {compete with} eachother</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentCompetesWithAgent</generalizations><domain>company</domain><range>company</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives> {"Ford","GE"} {"Google","Citigroup"} {"Microsoft","Roche"} {"Microsoft","Boeing"} {"AMD","Google"}</knownNegatives><inverse>competesWith</inverse><seedInstances> {"AMD","Intel"} {"Blockbuster","Netflix"} {"Citigroup","Morgan Stanley"} {"Ford","Chrysler"} {"Ford","Toyota"} {"Google","Microsoft"} {"Hershey","Nestle"} {"Home Depot","Lowes"} {"Honda","Toyota"} {"HP","Apple"}  {"Microsoft","Yahoo"} {"Nestle","Unilever"} {"Nikon","Canon"} {"Pfizer","Roche"} {"Yahoo","Google"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (competes OR compete OR competed OR competing) * arg2</queryString><editDate /><author /><curator /><description>specifies that a particular company has been in competition with another particular company</description><freebaseID /><comment>rename:companyCompetesWithCompany</comment></Relation><Relation id="36"><relationName>countryCurrency</relationName><humanFormat>the country arg1 {uses the currency} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>country</domain><range>currency</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives> {"United States","euros"} {"United Kingdom","dollars"} {"Germany","pesos"} {"Japan","sheqels"} {"Israel","dinar"}</knownNegatives><inverse>currencyCountry</inverse><seedInstances> {"United States","dollars"} {"Canada","dollars"} {"United Kingdom","pounds"} {"France","euros"} {"Germany","euros"} {"Japan","yen"} {"Israel","sheqels"} {"Russia","rubles"} {"Argentina","pesos"} {"Chile","pesos"} {"Mexico","pesos"} {"India","rupees"} {"Greece","euros"} {"Switzerland","francs"} {"Libya","dinar"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg2 * currency (in OR at OR of) * arg1</queryString><editDate /><author /><curator /><description>specifies that a particular country uses a particular currency</description><freebaseID>[{ "name": null, "type": "/location/country", "/common/topic/alias": [], "/location/country/currency used": [{ "name": null, "/common/topic/alias": [], "type": "/finance/currency" }] }]</freebaseID><comment>rename:countryUsesCurrency</comment></Relation><Relation id="37"><relationName>dateOfEvent</relationName><humanFormat>arg2 {happened on} the date arg1</humanFormat><populate>0</populate><visible>0</visible><generalizations>relatedTo</generalizations><domain>date</domain><range>event</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfDateOfEvent</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain /><requiredForRange /><queryString>arg2 * (happens OR happen OR happened OR happening) * arg1</queryString><editDate>2010-07-05</editDate><author /><curator /><description /><freebaseID /><comment>Removed inverse status now that eventDate has range dateLiteral.  Why was this already populate=FALSE?  Should we just delete this predicate?</comment></Relation><Relation id="38"><relationName>eventDate</relationName><humanFormat>arg1 {happened on} the date arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>atDate</generalizations><domain>event</domain><range>dateLiteral</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"Vietnam War","January 1973"} {"World War II","September 1945"}{"World War II","2009"}</knownNegatives><inverse>dateEvent</inverse><seedInstances>{"World Conference on Human Rights","June 1993"}{"Great War","August 1914"}{"Operation Barbarossa","June 1941"}{"Nazi-Soviet Pact","August 1939"} {"Hurricane Agnes","June 1972"}{"Six-Day War","June 1967"}{"Wannsee Conference","January 1942"}{"potato famine","1846"}{"liquidity crisis","2007"}{"Tsunami Relief","2005"} {"Operation Iraqi Freedom","2005"} {"troop surge","2007"} {"congressional elections","2010"} {"Revolutionary war","1812"} {"D-Day landings", "June 1944"} {"World War II","December 1941"}{"Warsaw Pact","August 1968"}{"Pearl Harbour","December 1941"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (happens OR happen OR happened OR happening) * arg2</queryString><editDate>2010-07-14</editDate><author /><curator /><description>specifies that the duration of a particular event overlapped with a particular date.</description><freebaseID /><comment>Seeds dictated by limited selection of dates in current all-pairs.  It would be good to edit them later.  should make this startDate and endDate?</comment></Relation><Relation id="39"><relationName>organizationHeadquarteredInCity</relationName><humanFormat>arg1 is {headquartered in} the city arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>organizationActsInLocation</generalizations><domain>organization</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>cityOfOrganizationHeadquarters</inverse><seedInstances>{&#8220;Harkat-ul-Mujahadeen&#8221;, &#8220;Islamabad&#8221;} {&#8220;League of Nations&#8221;, &#8220;Geneva&#8221;} {&#8220;CSS&#8221;, &#8220;S&#227;o Paulo&#8221;} {&#8220;Quds Force&#8221;, &#8220;Tehran&#8221;} {&#8220;Free Thinking Film Society&#8221;, &#8220;Ottawa&#8221;} {&#8220;Creative Coalition&#8221;, &#8220;New York&#8221;} {&#8220;Century Regional Detention Center&#8221;, &#8220;Lynwood&#8221;} {&#8220;GLSEN&#8221;, &#8220;New York City&#8221;} {&#8220;World Meteorological Organization&#8221;, &#8220;Geneva&#8221;} {&#8220;Islamic Charity Movement&#8221;, &#8220;Hebron&#8221;} {&#8220;International Steel Group&#8221;, &#8220;Cleveland&#8221;} {&#8220;Pembina Institute&#8221;, &#8220;Calgary&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (headquarter OR HQ) * arg2</queryString><editDate>2013-02-15</editDate><author>Bryan</author><curator /><description>The city where a given organization is headquartered</description><freebaseID /><comment>TAC KBP 2012</comment></Relation><Relation id="40"><relationName>organizationHeadquarteredInStateOrProvince</relationName><humanFormat>arg1 is {headquartered in} the state or province arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>organizationActsInLocation</generalizations><domain>organization</domain><range>stateOrProvince</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>stateOrProvinceOfOrganizationHeadquarters</inverse><seedInstances>{&#8220;Abu Sayyaf&#8221;, &#8220;Basilan&#8221;} {&#8220;Creative Coalition&#8221;, &#8220;New York&#8221;} {&#8220;Century Regional Detention Center&#8221;, &#8220;California&#8221;} {&#8220;GLSEN&#8221;, &#8220;New York&#8221;} {&#8220;New York Mets&#8221;, &#8220;New York&#8221;} {&#8220;Massey Energy&#8221;, &#8220;Virginia&#8221;} {&#8220;International Steel Group&#8221;, &#8220;Ohio&#8221;} {&#8220;Mai-Mai militia&#8221;, &#8220;North and South-Kivu provinces&#8221;} {&#8220;Peter D. Hart Research Associates&#8221;, &#8220;D.C.&#8221;} {&#8220;Pembina Institute&#8221;, &#8220;Alberta&#8221;} {&#8220;AQR Capital Management&#8221;, &#8220;Connecticut&#8221;} {&#8220;EnergySolutions&#8221;, &#8220;Utah&#8221;} {&#8220;FMR Corp.&#8221;, &#8220;Massachusetts&#8221;} {&#8220;IPSCO&#8221;, &#8220;Saskatchewan&#8221;} {&#8220;Jacksonville Jaguars&#8221;, &#8220;Florida&#8221;} {&#8220;Kennedy Space Center&#8221;, &#8220;Florida&#8221;} {&#8220;MBIA&#8221;, &#8220;New York&#8221;} {&#8220;MF Global&#8221;, &#8220;New York&#8221;} {&#8220;National Action Network&#8221;, &#8220;New York&#8221;} {&#8220;New South Wales Waratahs&#8221;, &#8220;New South Wales&#8221;} {&#8220;The Tax Policy Center&#8221;, &#8220;Washington, D.C.&#8221;} {&#8220;Tyco Healthcare&#8221;, &#8220;Massachusetts&#8221;} {&#8220;Tianjin Lions&#8221;, &#8220;Tianjin&#8221;} {&#8220;SAC&#8221;, &#8220;Liaoning Province&#8221;} {&#8220;New York Immigration Coalition&#8221;, &#8220;New York&#8221;} {&#8220;MTCTechnologies&#8221;, &#8220;Ohio&#8221;} {&#8220;Moro National Liberation Front&#8221;, &#8220;Mindanao&#8221;} {&#8220;Focus on the Family&#8221;, &#8220;Colorado&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (headquarter OR HQ) * arg2</queryString><editDate>2013-02-15</editDate><author>Bryan</author><curator /><description>The state or province where a given organization is headquartered</description><freebaseID /><comment>TAC KBP 2012</comment></Relation><Relation id="41"><relationName>organizationHeadquarteredInCountry</relationName><humanFormat>arg1 is {headquartered in} the country arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>organizationActsInLocation</generalizations><domain>organization</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>hasOfficeInCountry</mutexExceptions><knownNegatives /><inverse>countryOfOrganizationHeadquarters</inverse><seedInstances>{&#8220;League of Nations&#8221;, &#8220;Switzerland&#8221;} {&#8220;CSS&#8221;, &#8220;Brazil&#8221;} {&#8220;MECO&#8221;, &#8220;Taiwan&#8221;} {&#8220;Screen Australia&#8221;, &#8220;Australia&#8221;} {&#8220;Quds Force&#8221;, &#8220;Iran&#8221;} {&#8220;Free Thinking Film Society&#8221;, &#8220;Canada&#8221;} {&#8220;Canadian Islamic Congress&#8221;, &#8220;Canada&#8221;} {&#8220;World Meteorological Organization&#8221;, &#8220;Switzerland&#8221;} {&#8220;CIDI&#8221;, &#8220;The Netherlands&#8221;} {&#8220;FEMA&#8221;, &#8220;US&#8221;} {&#8220;UNAIDS&#8221;, &#8220;Switzerland&#8221;} {&#8220;Canadian Jewish Congress&#8221;, &#8220;Canada&#8221;} {&#8220;Lancome&#8221;, &#8220;France&#8221;} {&#8220;Pembina Institute&#8221;, &#8220;Canada&#8221;} {&#8220;AQR Capital Management&#8221;, &#8220;United States&#8221;} {&#8220;Denso&#8221;, &#8220;Japan&#8221;} {&#8220;Federal Aviation Administration&#8221;, &#8220;US&#8221;} {&#8220;Fyffes PLC&#8221;, &#8220;Ireland&#8221;} {&#8220;Hong Kong Disneyland&#8221;, &#8220;China&#8221;} {&#8220;IPSCO&#8221;, &#8220;Canada&#8221;} {&#8220;IRGC-QF&#8221;, &#8220;Iran&#8221;} {&#8220;Konica Minolta&#8221;, &#8220;Japan&#8221;} {&#8220;Le Journal du Dimanche&#8221;, &#8220;France&#8221;} {&#8220;Le Point&#8221;, &#8220;France&#8221;} {&#8220;MBIA&#8221;, &#8220;US&#8221;} {&#8220;Medina hospital&#8221;, &#8220;Somalia&#8221;} {&#8220;Millonarios&#8221;, &#8220;Colombia&#8221;} {&#8220;New South Wales Waratahs&#8221;, &#8220;Australia&#8221;} {&#8220;FirstGroup&#8221;, &#8220;Britain&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (headquarter OR HQ) * arg2</queryString><editDate>2013-02-15</editDate><author>Bryan</author><curator /><description>The country where a given organization is headquartered</description><freebaseID /><comment>TAC KBP 2012</comment></Relation><Relation id="42"><relationName>hasOfficeInCity</relationName><humanFormat>arg1 is a company that {has an office in} the city arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>organizationActsInLocation</generalizations><domain>company</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> {"Google","Detroit"} {"Mondavi","Pittsburgh"} {"Heinz","Milwaukee"} {"AMD","Pittsburgh"} {"Canon","Pittsburgh"}</knownNegatives><inverse>cityHasCompanyOffice</inverse><seedInstances> {"Alcoa","New York"} {"Amazon","Cape Town"} {"Amazon","Seattle"} {"Apple","Chicago"} {"Apple","Cupertino"} {"General Electric","New York"} {"General Motors","Lansing"} {"Google","New York"} {"Google","Pittsburgh"} {"Google","Seattle"} {"Hilton Hotels","Melbourne"} {"Micron","Denver"} {"Microsoft","Cambridge"} {"Microsoft","Redmond"} {"Owens Corning","Sydney"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate /><author /><curator /><description>specifies that a particular company has offices in a particular city</description><freebaseID>[{ "name": null, "type": "/business/business operation", "/common/topic/alias": [], "/organization/organization/locations": [{ "/business/business location/address": [{ "/location/mailing address/citytown": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }] }] }]</freebaseID><comment>rename:companyHasOfficeInCity</comment></Relation><Relation id="43"><relationName>hasOfficeInCountry</relationName><humanFormat>arg1 is a company that {has an office in} the country arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>organizationActsInLocation</generalizations><domain>company</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>organizationHeadquarteredInCountry</mutexExceptions><knownNegatives>{"Heinz","Israel"} {"Greyhound Bus","Egypt"} {"Google","Iran"} {"Yahoo","Germany"} {"Motorola","France"}</knownNegatives><inverse>countryHasCompanyOffice</inverse><seedInstances>{"Alcoa","Iceland"} {"Alcoa","United States"} {"Blockbuster","Canada"} {"Blockbuster","Mexico"} {"Google","China"} {"Google","United States"} {"LG","South Korea"} {"Microsoft","England"} {"Microsoft","United States"} {"Motorola","USA"} {"Nokia","Finland"} {"Research In Motion","Canada"} {"Sabritas","Mexico"} {"Samsung","South Korea"} {"Volkswagen","Germany"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate /><author /><curator /><description>specifies that a particular company has offices in a particular country</description><freebaseID>[{ "name": null, "type": "/business/business operation", "/common/topic/alias": [], "/organization/organization/locations": [{ "/business/business location/address": [{ "/location/mailing address/citytown": [{ "/location/location/containedby": [{ "name": null, "/common/topic/alias": [], "type": "/location/country" }] }] }] }] }]</freebaseID><comment>rename:companyHasOfficeInCountry</comment></Relation><Relation id="44"><relationName>headquarteredIn</relationName><humanFormat>arg1 is a company {headquartered in} the city arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>hasOfficeInCity organizationHeadquarteredInCity</generalizations><domain>company</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>radioStationInCity televisionStationInCity newspaperInCity</mutexExceptions><knownNegatives> {"Micron","Dallas"} {"Microsoft","Espoo"} {"Warner Music Group","Beverly Hills"} {"Google","New York"} {"Canon","Chicago"}</knownNegatives><inverse>companiesHeadquarteredHere</inverse><seedInstances> {"AFLAC","Columbus"} {"Alcoa","Pittsburgh"} {"Amazon","Seattle"} {"Apple","Cupertino"} {"Blockbuster","Dallas"} {"Citigroup","New York"} {"General Electric","Fairfield"} {"General Motors","Detroit"} {"Intel","Santa Clara"} {"LG","Seoul"} {"Micron","Boise"} {"Microsoft","Redmond"} {"Nokia","Espoo"} {"Sabritas","Mexico City"} {"Samsung","Seoul"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (headquarter OR HQ) * arg2</queryString><editDate /><author /><curator /><description>specifies that a particular company is headquartered in a particular city</description><freebaseID>[{ "name": null, "type": "/business/business operation", "/common/topic/alias": [], "/organization/organization/headquarters": [{ "/location/mailing address/citytown": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }] }]</freebaseID><comment>Used to have mutexEx with hasOfficeInCity, but how could it have an HQ without an office?  rename:companyHeadquarteredInCity</comment></Relation><Relation id="45"><relationName>agentHoldsSharesInCompany</relationName><humanFormat>arg1 is a {shareholder} in the company arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentCollaboratesWithAgent</generalizations><domain>agent</domain><range>company</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>agentHierarchicallyAboveAgent agentHierarchicallyBelowAgent</mutexExceptions><knownNegatives /><inverse>companyHasShareholder</inverse><seedInstances>{&#8220;Standard Life Investments&#8221;, &#8220;Royal Dutch Shell&#8221;} {&#8220;Deutsche Lufthansa AG&#8221;, &#8220;Hapag-Lloyd AG&#8221;} {&#8220;Veba AG&#8221;, &#8220;Hapag-Lloyd AG&#8221;} {&#8220;Hamas&#8221;, &#8220;Islamic Charity Movement&#8221;} {&#8220;Lakshmi Mittal&#8221;, &#8220;International Steel Group&#8221;} {&#8220;Affiliated Managers Group Inc.&#8221;, &#8220;AQR Capital Management&#8221;} {&#8220;Toyota Motor&#8221;, &#8220;Denso&#8221;} {&#8220;Liberty Media Corp.&#8221;, &#8220;DirecTV&#8221;} {&#8220;Edward C. Johnson III&#8221;, &#8220;FMR Corp.&#8221;} {&#8220;Abigail P. Johnson&#8221;, &#8220;FMR Corp.&#8221;} {&#8220;DCC PLC&#8221;, &#8220;Fyffes PLC&#8221;} {&#8220;Dreyfus Funds&#8221;, &#8220;Fyffes PLC&#8221;} {&#8220;The Walt Disney Co.&#8221;, &#8220;Hong Kong Disneyland&#8221;} {&#8220;Warburg Pincus&#8221;, &#8220;MBIA&#8221;} {&#8220;The New York Times Co.&#8221;, &#8220;Red Sox&#8221;} {&#8220;General Atlantic LLC&#8221;, &#8220;Zagat&#8221;} {&#8220;Nancy Peretsman&#8221;, &#8220;Zagat&#8221;} {&#8220;Nicholas Negroponte&#8221;, &#8220;Zagat&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (shareholder OR stockholder OR investor) * arg2</queryString><editDate>2013-02-15</editDate><author>Bryan</author><curator /><description>Any organization, person, or geopolitical entity that holds shares (majority or otherwise) of the given company.</description><freebaseID /><comment>TAC KBP 2012</comment></Relation><Relation id="46"><relationName>journalistWritesForPublication</relationName><humanFormat>arg1 is a journalist that {writes for} the publication arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>worksFor</generalizations><domain>journalist</domain><range>publication</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> {"Ron Cook","Rolling Stone"} {"Mark Madden","Rolling Stone"} {"Dave Anderson","Rolling Stone"} {"Ira Berkow","Rolling Stone"} {"Henry Schulman","Rolling Stone"}</knownNegatives><inverse>publicationJournalist</inverse><seedInstances> {"Ron Cook","Pittsburgh Post-Gazette"} {"Mark Madden","Pittsburgh Post-Gazette"} {"Dave Anderson","New York Times"} {"Ira Berkow","New York Times"} {"Henry Schulman","San Francisco Chronicle"} {"Susan Slusser","San Francisco Chronicle"} {"Bill Plaschke","LA Times"} {"T.J. Simers","LA Times"} {"Bill Dwyre","LA Times"} {"Harvey Araton","New York Times"} {"William C. Rhoden","New York Times"} {"George Vecsey","New York Times"} {"Bob Ford","Philadelphia Inquirer"} {"Phil Sheridan","Philadelphia Inquirer"} {"Teddy Greenstein","Chicago Tribune"} {"Chris Kuc","Chicago Tribune"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>newspaper magazine</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * (writes OR write OR wrote OR written OR writing) for * arg2</queryString><editDate /><author /><curator /><description>specifies that a particular journalist writes for a particular publication</description><freebaseID /><comment /></Relation><Relation id="47"><relationName>personChargedWithCrime</relationName><humanFormat>arg1 has been {charged with} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentParticipatedInEvent</generalizations><domain>person</domain><range>crimeOrCharge</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>crimeOrChargeOfPerson</inverse><seedInstances>{&#8220;Abdurrahman Wahid&#8221;, &#8220;corruption&#8221;} {&#8220;Uri Kelman&#8221;, &#8220;trying to fraudulently obtain New Zealand passports&#8221;} {&#8220;Hiram Monserrate&#8221;, &#8220;domestic abuse&#8221;} {&#8220;Hiram Monserrate&#8221;, &#8220;second-degree assault&#8221;} {&#8220;Orly Taitz&#8221;, &#8220;abuse of privilege to practice law&#8221;} {&#8220;Orly Taitz&#8221;, &#8220;Fivolous Lawsuit&#8221;} {&#8220;Clive Davis&#8221;, &#8220;used company funds to pay for his son'sbar mitzvah&#8221;} {&#8220;Arsene Wenger&#8221;, &#8220;improper conduct&#8221;} {&#8220;Arsene Wenger&#8221;, &#8220;bringing the game into disrepute&#8221;} {&#8220;Linda Hogan&#8221;, &#8220;Three counts of negligence&#8221;} {&#8220;George Tiller&#8221;, &#8220;performing illegal late-term abortions&#8221;} {&#8220;George Tiller&#8221;, &#8220;30 misdemeanor counts&#8221;} {&#8220;David Coleman Headley&#8221;, &#8220;12 terrorism related charges&#8221;} {&#8220;Abdul Karim al-Khawinay&#8221;, &#8220;defaming the president&#8221;} {&#8220;Abdul Rahim Noor&#8221;, &#8220;assault&#8221;} {&#8220;Abu Zubaydah&#8221;, &#8220;conspiracy to carry out terror attacks&#8221;} {&#8220;Alberto Gonzales&#8221;, &#8220;misleading Congress&#8221;} {&#8220;Danny Glover&#8221;, &#8220;trespassing&#8221;} {&#8220;Johnny Knoxville&#8221;, &#8220;fraud&#8221;} {&#8220;Remy Ma&#8221;, &#8220;assault&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain /><requiredForRange /><queryString>arg1 * (charged OR convicted) * arg2</queryString><editDate /><author>Bryan</author><curator /><description>Charges or crimes (alleged or convicted) of the given person</description><freebaseID /><comment>TAC KBP 2012.  Also, domain could be criminal, but the definition of that category is too vauge at the moment for our needs here.</comment></Relation><Relation id="48"><relationName>personLeadsGeopoliticalOrganization</relationName><humanFormat>arg1 {leads} the geopolitical organization arg2</humanFormat><populate>1</populate><visible>0</visible><generalizations>personLeadsOrganization</generalizations><domain>person</domain><range>geopoliticalOrganization</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>geopoliticalOrganizationLeadByPerson</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain /><requiredForRange /><queryString /><editDate /><author>Bryan</author><curator /><description>specifies that a particular person plays a leading role in a particular geopolitical organization (which includes the governments of countries)</description><freebaseID /><comment /></Relation><Relation id="49"><relationName>personLeadsCity</relationName><humanFormat>arg1 is the {leader of} the city arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personLeadsGeopoliticalOrganization</generalizations><domain>politician</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>cityLeadByPerson</inverse><seedInstances>{&#8220;Luke Ravenstahl&#8221;, &#8220;Pittsburgh&#8221;} {&#8220;Mayor Michael Bloomberg&#8221;, &#8220;New York City&#8221;} {&#8220;Michael Bear&#8221;, &#8220;City of London&#8221;} {&#8220;Marta Vincenzi&#8221;, &#8220;Genoa&#8221;} {&#8220;Carolyn Goodman&#8221;, &#8220;Vegas&#8221;} {&#8220;Rob Ford&#8221;, &#8220;Toronto&#8221;} {&#8220;Mike Rawlings&#8221;, &#8220;Dallas&#8221;} {&#8220;Olaf Scholz&#8221;, &#8220;Hamburg&#8221;} {&#8220;Sam Katz&#8221;, &#8220;Winnipeg&#8221;} {&#8220;Kevin Johnson&#8221;, &#8220;Sacramento&#8221;} {&#8220;Mark L. Mallory&#8221;, &#8220;Cincinnati&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain /><requiredForRange /><queryString /><editDate /><author>Bryan</author><curator /><description>specifies that a particular person is the leader (e.g. Mayor) of a particular city</description><freebaseID /><comment /></Relation><Relation id="50"><relationName>personLeadsCountry</relationName><humanFormat>arg1 is the {leader of} the country arg2</humanFormat><populate>0</populate><visible>0</visible><generalizations>agentRelatedToLocation proxyFor agentControls</generalizations><domain>politician</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>countryLeadByPerson</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain /><requiredForRange /><queryString>arg2 * leader * arg1</queryString><editDate /><author /><curator /><description>specifies that a particular person is the leader of a particular country</description><freebaseID /><comment /></Relation><Relation id="51"><relationName>leagueStadiums</relationName><humanFormat>the sports leage arg1 {uses} the venue arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>organizationActsInLocation</generalizations><domain>sportsLeague</domain><range>stadiumOrEventVenue</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>organizationHasBuilding</mutexExceptions><knownNegatives>{"NFL","Minute Maid Park"} {"NFL","Air Canada Centre"} {"NBA","RBC Center"} {"MLB","Gillette Stadium"} {"MLB","Qualcomm Stadium"}</knownNegatives><inverse>stadiumHomeToLeague</inverse><seedInstances>{"MLB","PNC Park"} {"NFL","Heinz Field"} {"MLB","Minute Maid Park"} {"NHL","Air Canada Centre"} {"NHL","RBC Center"} {"NFL","Gillette Stadium"} {"NFL","Qualcomm Stadium"} {"NASCAR","Bowman Gray Stadium"} {"NASCAR","Columbus Motor Speedway"} {"NHL","Mellon Arena"} {"NFL","Lucas Oil Stadium"} {"MLB","Wrigley Field"} {"MLB","Safeco Field"} {"NBA","Madison Square Garden"} {"NBA","United Center"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate /><author /><curator /><description>specifies that a particular league uses a particular venue for its games</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/sports/sports league", "/sports/sports league/teams": [{ "/sports/sports league participation/team": [{ "/sports/sports team/arena stadium": [{ "name": null, "/common/topic/alias": [] }] }] }] }]</freebaseID><comment>rename:leagueUsesStadium</comment></Relation><Relation id="52"><relationName>mlAreaExpert</relationName><humanFormat>arg2 is an {expert in} the machine-learning area of arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>mlArea</domain><range>mlAuthor</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives>{"Neural Networks", "Jaime Callan"} {"Artificial Intelligence", "Sunita Sarawagi"} {"Statistical Learning Theory", "William Cohen"} {"Graphical Models", "Jamie Callan"} {"Neural Networks" ,"S . Sudarshan"}</knownNegatives><inverse>mlAuthorExpertIn</inverse><seedInstances>{"Neural Networks", "Tom Mitchell"} {"Information Extraction","Andrew McCallum"} {"Bayesian Inference","Michael Jordan"} {"Conditional Random Fields","William Cohen"} {"Graphical Models","Daphne Koller"} {"statistical machine learning","Yoram Singer"} {"Graphical Models","Nir Friedman"} {"Artificial Intelligence","Sebastian Thrun"} {"Graphical Models","David Heckerman"} {"Conditional Random Fields","Sunita Sarawagi"} {"statistical machine learning","John Lafferty"} {"Neural Networks","Geoffrey Hinton"} {"artificial intelligence","Tom Dietterich"} {"Artificial Intelligence","Stuart Russell"} {"statistical learning theory","Peter Bartlett"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * (expert OR expertise) * arg1</queryString><editDate /><author /><curator /><description>specifies that a particular ML author is an expert in a particular ML area</description><freebaseID /><comment>rename:mlAreaHasExpert</comment></Relation><Relation id="53"><relationName>mlAuthorOfSoftware</relationName><humanFormat>arg1 is a machine-learning author who {wrote} the software arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentInvolvedWithItem, agentCreated</generalizations><domain>mlAuthor</domain><range>mlSoftware</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"Sunita Sarawagi","Minorthird"} {"William Cohen","Weka"} {"Bruce Croft","libsvm"} {"Jamie Callan","datamold"} {"Tom Mitchell","dragon"}   </knownNegatives><inverse>mlSoftwareAuthor</inverse><seedInstances>{"William Cohen","Minorthird"} {"Mark Hall","Weka"} {"Chih-Chung Chang","libsvm"} {"Thorsten Joachims","SVMlight"} {"Sunita Sarawagi","datamold"} {"Sunita Sarawagi","ICube"} {"Jamie Callan","Lemur"} {"Jaime Callan","Indri"} {"Jeff Bilmes","GMTK"} {"Andrew McCallum", "MALLET"} {"Ian H . Witten", "Weka"} {"Eibe Frank", "Weka"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (author OR authors OR authored OR authoring OR create OR creates OR created OR creating OR write OR writes OR wrote OR written OR writing) * arg2</queryString><editDate /><author /><curator /><description>Specifies ML software that is written by a particular ML author</description><freebaseID /><comment /></Relation><Relation id="54"><relationName>musicianPlaysInstrument</relationName><humanFormat>arg1 is a musician who {plays} the arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentInvolvedWithItem</generalizations><domain>musician</domain><range>musicInstrument</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> {"John Lennon","drums"} {"Paul McCartney","cello"} {"Keith Richards","bass"} {"Yo Yo Ma", "electric guitar"} {"Joshua Bell","flute"}</knownNegatives><inverse>instrumentPlayedByMusician</inverse><seedInstances> {"John Lennon","guitar"} {"Paul McCartney","bass"} {"Keith Richards","electric guitar"} {"Sufjan Stevens","guitar"} {"Sufjan Stevens","banjo"} {"Elliott Smith","guitar"} {"Yo Yo Ma", "cello"} {"Joshua Bell","violin"} {"Bob Dylan","harmonica"} {"Bob Dylan","guitar"} {"Elvis Presley","guitar"} {"Ray Charles","piano"} {"Elton John","piano"} {"Feist","guitar"} {"B.B. King","guitar"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (plays OR play OR played OR playing) * arg2</queryString><editDate /><author /><curator /><description>Specifies that a musical instrument is played by a paritcular musician</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/music/group member", "/music/group member/instruments played": [{ "name": null, "/common/topic/alias": [] }] }]</freebaseID><comment /></Relation><Relation id="55"><relationName>musicArtistGenre</relationName><humanFormat>arg1 is a musician in the {genre} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>musicArtist</domain><range>musicGenre</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives> {"Yo Yo Ma","rock"} {"Joshua Bell","punk"} {"Beatles","classical"} {"Outkast","jazz"} {"Bob Dylan","soul"}</knownNegatives><inverse>musicGenreArtist</inverse><seedInstances> {"Yo Yo Ma","classical"} {"Joshua Bell","classical"} {"Beatles","rock"} {"Beatles","pop"} {"Outkast","hip-hop"} {"Outkast","rap"} {"Metallica","heavy metal"} {"Green Day","punk"} {"Elliott Smith","folk"} {"Bob Dylan","folk"} {"Bob Dylan","rock"} {"Nirvana","punk"} {"Pedro the Lion","indie"} {"Jackson Five","soul"} {"Jackson Five","pop"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * (musician OR musicians OR artist OR artists) * arg1</queryString><editDate /><author /><curator /><description>Specifies that a musicArtist performs in a particular genre</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/music/artist", "/music/artist/genre": [{ "name": null, "/common/topic/alias": [] }] }]</freebaseID><comment /></Relation><Relation id="56"><relationName>musicianInMusicArtist</relationName><humanFormat>arg1 is a musician who is {part of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personBelongsToOrganization</generalizations><domain>musician</domain><range>musicArtist</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>worksFor</mutexExceptions><knownNegatives> {"John Lennon","Rolling Stones"} {"Paul McCartney","Lemonheads"} {"Thom Yorke","Beatles"} {"Mick Jagger","Beatles"} {"Keith Richards","Beatles"}</knownNegatives><inverse>musicArtistMusician</inverse><seedInstances>{"John Lennon","Beatles"} {"Paul McCartney","Beatles"} {"Thom Yorke","Radiohead"} {"Evan Dando","Lemonheads"} {"Mick Jagger","Rolling Stones"} {"Keith Richards","Rolling Stones"} {"Kurt Cobain","Nirvana"} {"Dave Grohl","Nirvana"} {"Dave Grohl","Foo Fighters"} {"Bono","U2"} {"David Bazan","Pedro the Lion"} {"Michael Jackson","Jackson Five"} {"Robert Plant","Led Zepplin"} {"Jimmy Page","Led Zepplin"} {"James Hetfield","Metallica"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate /><author /><curator /><description>Specifies that a particular musician has performed as particular musicArtist</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/music/group member", "/music/group member/membership": [{ "/music/group membership/group": [{ "name": null, "/common/topic/alias": [] }] }] }]</freebaseID><comment /></Relation><Relation id="57"><relationName>newspaperInCity</relationName><humanFormat>arg1 is a newspaper {in the city} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentActsInLocation</generalizations><domain>newspaper</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>headquarteredIn</mutexExceptions><knownNegatives> {"Pittsburgh Post-Gazette","New York"} {"New York Times","Chicago"} {"London Times","Houston"} {"Washington Post","SanFrancisco"} {"San Francisco Chronicle","London"}</knownNegatives><inverse>cityNewspaper</inverse><seedInstances>{"Pittsburgh Post-Gazette","Pittsburgh"} {"Pittsburgh Tribune","Pittsburgh"} {"New York Times","New York"} {"London Times","London"} {"Washington Post","Washington DC"} {"San Francisco Chronicle","San Francisco"} {"LA Times","Los Angeles"} {"Philadelphia Enquirer","Philadelphia"} {"New York Post","New York"} {"Herald Tribune","Sarasota"} {"Wall Street Journal","New York"} {"Chicago Tribune","Chicago"} {"Financial Times","London"} {"Toronto Star","Toronto"} {"International Herald Tribune","Paris"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate /><author /><curator /><description>Specifies the city in which a particular newspaper is headquartered</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/book/newspaper", "/book/newspaper/headquarters": [{ "/location/mailing address/citytown": [{ "name": null, "/common/topic/alias": [] }] }] }]</freebaseID><comment>Should we change this to nrOfValues=any and capture all places of circulation instead?</comment></Relation><Relation id="58"><relationName>personWrittenAboutInPublication</relationName><humanFormat>arg1 is a person who was {written about in} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>publication</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>publicationWritesAbout</inverse><seedInstances>{"John Lennon","Rolling Stone"} {"Mick Jagger","Rolling Stone"} {"Sufjan Stevens","Rolling Stone"} {"Alex Rodriguez","Sports Illustrated"} {"Alexander Ovechkin","Sports Illustrated"} {"Allen Iverson","Sports Illustrated"} {"Eric Schmidt","New York Times"} {"Jeff Bezos","New York Times"} {"Bill Gates","New York Times"} {"Barack Obama","Economist"} {"Hillary Clinton","Economist"} {"Jimmy Carter","Economist"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * article * arg2</queryString><editDate /><author /><curator /><description>Specifies that a particular person has been written about in a particular publication</description><freebaseID>none</freebaseID><comment>Maybe this should generalize to agentInteractsWithAgent?</comment></Relation><Relation id="59"><relationName>politicianHoldsOffice</relationName><humanFormat>arg1 is a politician who {holds the office of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>politician</domain><range>politicalOffice</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives>{"Hillary Clinton","President"}{"John McCain","President"}</knownNegatives><inverse>officeHeldByPolitician</inverse><seedInstances>{"Bill Clinton","President"}{"Barack Obama","President"}{"George Bush","President"}{"John Murtha","congressman"}{"Rick Santorum","senator"}{"Hillary Clinton","Senator"}{"Arlen Spector","senator"}{"Nancy Pelosi","congresswoman"}{"Clarence Thomas","Supreme Court Justice"}{"Arnold Schwarzenegger","Governor"}{"Michael Bloomberg","mayor"}{"Antonio Villaraigosa","Mayor"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate /><author /><curator /><description>Specifies that a particular politician holds a particular office</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/government/politician", "/government/politician/government positions held": [{ "/government/government position held/office position or title": [{ "name": null, "/common/topic/alias": [] }] }] }]</freebaseID><comment>freebase uses a CVT for this</comment></Relation><Relation id="60"><relationName>producesProduct</relationName><humanFormat>arg1 is a company that {produces} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentInvolvedWithItem, agentCreated</generalizations><domain>company</domain><range>product</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>agentWorkedOnDrug</mutexExceptions><knownNegatives>{"Activision","PowerShot"} {"Clark","Roomba"} {"Dell","Prius"} {"Ford","Lipitor"} {"Microsoft","Google"}</knownNegatives><inverse>producedBy</inverse><seedInstances>{"Activision","Guitar Hero"} {"Adobe","Photoshop"} {"Apple","iPod"} {"Canon","Rebel"} {"Colgate-Palmolive Company","Colgate"} {"Dell","Latitude"} {"Ford","Explorer"} {"Frito-Lay","Cheetos"} {"Honda","Accord"} {"iRobot","Roomba"} {"Microsoft","Xbox"} {"Nintendo","Wii"} {"PepsiCo","Mountain Dew"} {"Pfizer","Lipitor"} {"Toyota","Prius"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg2 * produced by * arg1</queryString><editDate /><author /><curator /><description>Specifies that a particular compnay produces a particular product</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/business/consumer company", "/business/consumer company/products": [{ "/business/company product relationship/consumer product": [{ "name": null, "/common/topic/alias": [] }] }] }]</freebaseID><comment /></Relation><Relation id="61"><relationName>producesProductType</relationName><humanFormat>arg2 is the kind of product {produced by} the company arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentInvolvedWithItem, agentCreated</generalizations><domain>company</domain><range>item</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>agentWorkedOnDrug</mutexExceptions><knownNegatives /><inverse>typeProducedBy</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (produce OR produces OR produced OR producing) * arg2</queryString><editDate /><author /><curator /><description>Specifies that a particular compnay produces a particular type of product</description><freebaseID /><comment /></Relation><Relation id="62"><relationName>productInstanceOf</relationName><humanFormat>arg1 is a product that is a {kind of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>specializationOf</generalizations><domain>product</domain><range>item</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"Accord","analgesic"} {"Clorox","deodorant"} {"Hoover","spreadsheet"} {"Illustrator","stapler"} {"Listerine","computer"}</knownNegatives><inverse>productInstances</inverse><seedInstances>{"Civic","car"} {"Cheer","laundry detergent"} {"Clorox","bleach"} {"Colgate","toothpaste"} {"Dell Latitude","laptop"} {"Glad","plastic wrap"} {"Adobe Illustrator","software"} {"Kleenex","tissue"} {"Lipitor","drug"} {"Listerine","mouthwash"} {"Microsoft Excel","spreadsheet"} {"Microsoft Office","software"} {"Microsoft Windows","operating system"} {"Old Spice","deodorant"} {"Tylenol","analgesic"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * (is OR are) * arg1</queryString><editDate /><author /><curator /><description>Specifies that a particular product is a particular kind of thing</description><freebaseID /><comment /></Relation><Relation id="63"><relationName>radioStationInCity</relationName><humanFormat>arg1 is a radio station {in the city} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>hasOfficeInCity</generalizations><domain>radioStation</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>headquarteredIn</mutexExceptions><knownNegatives> {"WBUR","Chicago"} {"WGBH","New York"} {"WGN","Lexington"} {"WBEZ","Los Angeles"} {"93.9 Lite FM","Pittsburgh"} {"106.9 The Point","Philadelphia"} {"KSBJ","Denver"} {"WFYI","Boston"} {"WIBC","Chicago"} {"WORD-FM","Atlanta"} {"KDKA","St. Louis"} {"WDVE","Orlando"} {"KEXP","Portland"} {"KUBE-FM","San Fransisco"} {"KMPS-FM","Minneapolis"}</knownNegatives><inverse>cityRadioStation</inverse><seedInstances> {"WBUR","Boston"} {"WGBH","Boston"} {"WGN","Chicago"} {"WBEZ","Chicago"} {"93.9 Lite FM","Chicago"} {"106.9 The Point","Houston"} {"KSBJ","Houston"} {"WFYI","Indianapolis"} {"WIBC","Indianapolis"} {"WORD-FM","Pittsburgh"} {"KDKA","Pittsburgh"} {"WDVE","Pittsburgh"} {"KEXP","Seattle"} {"KUBE-FM","Seattle"} {"KMPS-FM","Seattle"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate /><author /><curator /><description>Specifies that a particular radio station is headquarted in a particular city</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/broadcast/radio station", "/broadcast/broadcast/area served": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]</freebaseID><comment /></Relation><Relation id="64"><relationName>sportsGameAwayTeam</relationName><humanFormat>arg2 was the {away team in} arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>sportsGameTeam</generalizations><domain>sportsGame</domain><range>sportsTeam</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>sportsGameWinner sportsGameLoser </mutexExceptions><knownNegatives>{"1948 World Series","Indians"} {"1997 World Series","Florida Marlins"} {"2002 World Cup","South Korea"} {"Super Bowl XXXIV","Tennessee Titans"} {"2001 Super Bowl","Patriots"} {"2005 Ashes series", "England"} {"2005 Orange Bowl","Oklahoma"} {"2009 Fiesta Bowl","Texas"}</knownNegatives><inverse>awayTeamInGame</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * away game * arg1</queryString><editDate>2010-07-05</editDate><author /><curator /><description>Specifies that a particular team is the away team in a particular sportsGame.</description><freebaseID /><comment>Couldn't find seeds in all-pairs</comment></Relation><Relation id="65"><relationName>sportsGameHomeTeam</relationName><humanFormat>arg2 was the {home team in} arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>sportsGameTeam</generalizations><domain>sportsGame</domain><range>sportsTeam</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>sportsGameWinner sportsGameLoser </mutexExceptions><knownNegatives>{"1948 World Series","Indians"} {"1997 World Series","Florida Marlins"} {"2002 World Cup","South Korea"} {"Super Bowl XXXIV","Tennessee Titans"} {"2001 Super Bowl","Patriots"} {"2005 Ashes series", "England"} {"2005 Orange Bowl","Oklahoma"} {"2009 Fiesta Bowl","Texas"}</knownNegatives><inverse>homeTeamInGame</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * home team * arg2</queryString><editDate>2010-07-05</editDate><author /><curator /><description>Specifies that a particular team is the home team in a particular sportsGame</description><freebaseID /><comment>Couln't find seeds in all-pairs</comment></Relation><Relation id="66"><relationName>sportsGameLoser</relationName><humanFormat>arg2 was the {looser of} arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>sportsGameTeam</generalizations><domain>sportsGame</domain><range>sportsTeam</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>sportsGameAwayTeam sportsGameHomeTeam </mutexExceptions><knownNegatives> {"2001 Super Bowl","Baltimore Ravens"} {"2006 Orange Bowl","Penn State"} {"2002 Stanley Cup","Detroit Red Wings"} {"1999 World Series","New York Yankees"} {"2006 NCAA Basketball Championship","Florida Gators"} {"2000 European Cup","France"} {"2002 World Cup","Brazil"}</knownNegatives><inverse>loserInGame</inverse><seedInstances> {"2001 Super Bowl","New York Giants"} {"2006 Orange Bowl","Florida State"} {"1999 World Series","Atlanta Braves"} {"2006 NCAA Basketball Championship","UCLA"} {"2000 European Cup","Italy"} {"2002 World Cup","Germany"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * (loses OR lose OR lost OR losing) * arg1</queryString><editDate /><author /><curator /><description>Specifies that a particular team that played in a particular sportsGame was the loser thereof.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/sports/sports championship event", "/sports/sports championship event/runner up": [{ "name": null, "/common/topic/alias": [] }] }]</freebaseID><comment>Freebase only has specific game information for championship events, but there are enough of them to warrant the mapping, I think</comment></Relation><Relation id="67"><relationName>sportsGameLoserScore</relationName><humanFormat>the {loosing score of} arg1 was arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>sportsGame</domain><range>nonNegInteger</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives>{"2001 Super Bowl","34"} {"2006 Sugar Bowl","38"} {"2006 Orange Bowl", "26"} {"2002 Stanley Cup","4"} {"Super Bowl XVII","27"} {"Super Bowl XXXVII", "48"} {"Super Bowl XLIII", "27"}</knownNegatives><inverse>losingScoreOfSportsGame</inverse><seedInstances>{"Super Bowl XLIII", "23"} {"Super Bowl XXXVII", "21"} {"Super Bowl XVII", "17"} {"2002 Stanley Cup", "1"} {"2006 Orange Bowl", "23"} {"2006 Sugar Bowl", "35"} {"2001 Super Bowl", "7"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (lose OR loses OR lost OR losing OR loser) * arg2</queryString><editDate>2010-07-05</editDate><author /><curator /><description>Specifies the score with which the loosing team in a particular sportsGame lost.</description><freebaseID /><comment>Changed for use with DARPA NFL ontology</comment></Relation><Relation id="68"><relationName>sportsGameSport</relationName><humanFormat>the sport arg2 was {played at} arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>sportsGame</domain><range>sport</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives> {"2001 Super Bowl","soccer"} {"2002 Stanley Cup","basketball"} {"1999 World Series","golf"} {"2006 NCAA Basketball Championship","hockey"} {"2000 Euro Cup","tennis"}</knownNegatives><inverse>sportSportsGameExample</inverse><seedInstances> {"2001 Super Bowl","football"} {"2006 Sugar Bowl","football"} {"2002 Stanley Cup","hockey"} {"1999 World Series","baseball"} {"2006  Basketball Championship","basketball"} {"2000 Euro Cup","soccer"} {"2002 World Cup","soccer"} {"2005 U.S. Open","tennis"} {"1998 Wimbledon Championship","tennis"} {"2004 PGA Tour","golf"} {"2003 British Open","golf"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * game * such as * arg1</queryString><editDate /><author /><curator /><description>Specifies the sport that was played in a particular sportsGame.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/sports/sports championship event", "/sports/sports championship event/champion": [{ "/sports/sports team/sport": [{ "name": null, "/common/topic/alias": [] }] }] }]</freebaseID><comment /></Relation><Relation id="69"><relationName>sportsGameWinner</relationName><humanFormat>the sports team arg2 was the {winner of} arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>sportsGameTeam</generalizations><domain>sportsGame</domain><range>sportsTeam</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>sportsGameAwayTeam sportsGameHomeTeam </mutexExceptions><knownNegatives> {"2001 Super Bowl","New York Giants"} {"2006 Orange Bowl","Florida State"} {"1999 World Series","Atlanta Braves"} {"2006 NCAA Basketball Championship","UCLA"} {"2000 European Cup","Italy"} {"2002 World Cup","Germany"}</knownNegatives><inverse>winnerInGame</inverse><seedInstances> {"2001 Super Bowl","Baltimore Ravens"} {"2006 Orange Bowl","Penn State"} {"2002 Stanley Cup","Detroit Red Wings"} {"1999 World Series","New York Yankees"} {"2006 NCAA Basketball Championship","Florida Gators"} {"2000 European Cup","France"} {"2002 World Cup","Brazil"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * (win OR wins OR won OR winning OR winner) * arg2</queryString><editDate /><author /><curator /><description>Specifies that a particular team that played in a particular sportsGame was the winner thereof.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/sports/sports championship event", "/sports/sports championship event/champion": [{ "name": null, "/common/topic/alias": [] }] }]</freebaseID><comment /></Relation><Relation id="70"><relationName>sportsGameWinnerScore</relationName><humanFormat>arg2 was the {winning score in} arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>sportsGame</domain><range>nonNegInteger</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives>{"Super Bowl XLIII", "23"} {"Super Bowl XXXVII", "21"} {"Super Bowl XVII", "17"} {"2002 Stanley Cup", "1"} {"2006 Orange Bowl", "23"} {"2006 Sugar Bowl", "35"} {"2001 Super Bowl", "7"}</knownNegatives><inverse>winningScoreOfSportsGame</inverse><seedInstances>{"2001 Super Bowl","34"} {"2006 Sugar Bowl","38"} {"2006 Orange Bowl", "26"} {"2002 Stanley Cup","4"} {"Super Bowl XVII","27"} {"Super Bowl XXXVII", "48"} {"Super Bowl XLIII", "27"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (win OR wins OR won OR winning OR winner) * arg2</queryString><editDate>2010-07-05</editDate><author /><curator /><description>Specifies the score with which the winning team in a particular sportsGame lost.</description><freebaseID /><comment>Changed for use with DARPA NFL ontology</comment></Relation><Relation id="71"><relationName>sportUsesEquipment</relationName><humanFormat>arg2 is a kind of {equipment for} the sport arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>sport</domain><range>sportsEquipment</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives>{"football","bat"} {"tennis","puck"} {"baseball","backboard"} {"football","racket"} {"basketball","shoulder pads"}</knownNegatives><inverse>equipmentUsedBySport</inverse><seedInstances>{"baseball","bat"} {"hockey","puck"} {"basketball","backboard"} {"tennis","racket"} {"football","shoulder pads"} {"football","football"} {"badminton","shuttlecock"} {"golf","golf ball"} {"golf","driver"} {"baseball","glove"} {"baseball","mitt"} {"basketball","basket"} {"football","helmet"} {"golf","putter"} {"soccer","soccer ball"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * used (in OR at OR by) * arg2</queryString><editDate /><author /><curator /><description>Specifies equipment that is used by a particular sport.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/sports/sport", "/sports/sport/related equipment": [{ "name": null, "/common/topic/alias": [], "type": "/sports/sports equipment" }] }]</freebaseID><comment /></Relation><Relation id="72"><relationName>sportUsesStadium</relationName><humanFormat>arg1 is a sport {played in} the venue arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>sport</domain><range>stadiumOrEventVenue</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives>{"football","PNC Park"} {"basketball", "RBC Center"} {"baseball","Heinz Field"} {"football","Arthur Ashe Stadium"} {"baseball","TD Banknorth Garden"}</knownNegatives><inverse>stadiumHomeToSport</inverse><seedInstances>{"baseball","PNC Park"} {"hockey", "RBC Center"} {"football","Heinz Field"} {"tennis","Arthur Ashe Stadium"} {"basketball","TD Banknorth Garden"} {"baseball","Busch Stadium"} {"football","Soldier Field"} {"soccer","Wembley Stadium"} {"basketball","Wachovia Center"} {"hockey","Mellon Arena"} {"football","Giant Stadium"} {"basketball","Madison Square Garden"} {"tennis","Centre Court"} {"baseball","Coors Field"} {"basketball","Bradley Center"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR on OR of) * arg2</queryString><editDate /><author /><curator /><description>Specifies that a particular sport is played in a particular venue</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/sports/sport", "/sports/sport/teams": [{ "/sports/sports team/arena stadium": [{ "name": null, "/common/topic/alias": [] }] }] }]</freebaseID><comment /></Relation><Relation id="73"><relationName>stadiumLocatedInCity</relationName><humanFormat>arg1 is a stadium or event venue {located in} the city arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>buildingLocatedInCity attractionOfCity proxyOf</generalizations><domain>stadiumOrEventVenue</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"PNC Park","Chicago"} {"Wrigley Field","New York"} {"Yankee Stadium","Boston"} {"Wembley Stadium","Paris"} {"TD Banknorth Garden","Philadelphia"}</knownNegatives><inverse>cityStadiums</inverse><seedInstances>{"PNC Park","Pittsburgh"} {"Wrigley Field","Chicago"} {"Yankee Stadium","New York City"} {"Wembley Stadium","London"} {"TD Banknorth Garden","Boston"} {"Minute Maid Park","Houston"} {"Bradley Center","Milwaukee"} {"Wachovia Center","Philadelphia"} {"Air Canada Centre","Toronto"} {"Progressive Field","Cleveland"} {"Coors Field","Denver"} {"Lambeau Field","Green Bay"} {"Qualcomm Stadium","San Diego"} {"Reliant Stadium","Houston"} {"American Airlines Center","Dallas"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate /><author /><curator /><description>The city where a stadium is located</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/sports/sports facility", "/location/location/containedby": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]</freebaseID><comment>rename to stadiumOrEventVenueLocatedInCity</comment></Relation><Relation id="74"><relationName>stateHasCapital</relationName><humanFormat>arg2 is the {capital city of} the state or province arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>stateContainsCity proxyOf</generalizations><domain>stateOrProvince</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"Philadephia","Pennsylvania"} {"Pittsburgh","Pennsylvania"} {"Boston","Massachusetts"} {"Dallas","Texas"} {"Chicago","Illinois"}</knownNegatives><inverse>cityCapitalOfState</inverse><seedInstances>{"Alabama","Montgomery"} {"Ohio","Columbus"} {"Wyoming","Cheyenne"} {"Virginia","Richmond"} {"Michigan","Lansing"} {"Illinois","Springfield"} {"Kansas","Topeka"} {"Baja California","Mexicali"} {"Hidalgo","Pachuca"} {"Quintana Roo","Chetumal"} {"Ontario","Toronto"} {"Manitoba","Winnipeg"} {"Alberta","Edmonton"} {"Assam","Dispur"} {"Goa","Panaji"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * capital of * arg1</queryString><editDate /><author /><curator /><description>The capital city of a state, where the main governing apparatus is located.</description><freebaseID /><comment>rename to stateOrProvinceHasCapitalCity</comment></Relation><Relation id="75"><relationName>stateLocatedInCountry</relationName><humanFormat>arg1 is a sate or province {located in} the country arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>stateLocatedInGeopoliticalLocation</generalizations><domain>stateOrProvince</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"Pennsylvania","New England"} {"North Carolina","Canada"} {"Ontario","United States"} {"Illinois","Canada"} {"Goa","United States"} {"Karnataka","Brazil"}</knownNegatives><inverse>countryStates</inverse><seedInstances>{"Pennsylvania","USA"} {"North Carolina","United States"} {"Ontario","Canada"} {"Illinois","United States"} {"Goa","India"} {"Karnataka","India"} {"Florida","United States"} {"British Columbia","Canada"} {"Texas","United States"} {"Arizona","United States"} {"Baja California","Mexico"} {"Hidalgo","Mexico"} {"Nova Scotia","Canada"} {"Idaho","United States"} {"Indiana","United States"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate /><author /><curator /><description>The country which the state or province is a part of.</description><freebaseID /><comment>rename to stateOrProvinceLocatedInCountry</comment></Relation><Relation id="76"><relationName>isMultipleOf</relationName><humanFormat>arg1 refers to {more than one} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>mutualProxyFor</generalizations><domain>everyPromotedThing</domain><range>everyPromotedThing</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{&#8220;mens&#8221; &#8220;man&#8221;} {&#8220;gooses&#8221; &#8220;goose&#8221;} {&#8220;cheese&#8221; &#8220;chee&#8221;} {&#8220;waters&#8221; &#8220;water&#8221;} {&#8220;mouses&#8221; &#8220;mouse&#8221;} {&#8220;womans&#8221; &#8220;woman&#8221;}</knownNegatives><inverse>isOneOccurrenceOf</inverse><seedInstances>{&#8220;hamsters&#8221;, &#8220;hamster&#8221;} {&#8220;clocks&#8221;, &#8220;clock&#8221;} {&#8220;murder&#8221;, &#8220;crow&#8221;} {&#8220;gaggle&#8221;, &#8220;goose&#8221;} {&#8220;flock&#8221; &#8220;bird&#8221;} {&#8220;flock&#8221; &#8220;sheep&#8221;} {&#8220;mustards&#8221; &#8220;mustard&#8221;} {&#8220;people&#8221; &#8220;person&#8221;} {&#8220;attorneys general&#8221; &#8220;attorney general&#8221;} {&#8220;mice&#8221; &#8220;mouse&#8221;} {&#8220;ladies&#8221; &#8220;lady&#8221;} {&#8220;gentlemen&#8221; &#8220;gentleman&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-09-06</editDate><author>Bryan</author><curator /><description>Specifies the way in which a grouping of individual somethings can be referred to, including but not limited to relating the plural form to the singular.</description><freebaseID /><comment>Added after a suggestion that NELL should learn to relate singluar and plural forms.  Because this relation operates between concepts, we can only approximate here.</comment></Relation><Relation id="77"><relationName>synonymFor</relationName><humanFormat>arg1 is a {synonym for} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>mutualProxyFor</generalizations><domain>everyPromotedThing</domain><range>everyPromotedThing</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives> {"City of Brotherly Love", "Chicago"} {"Big Apple", "Crazy Legs"} {"Charlie Hustle", "Richard Nixon"} {"Honest Abe", "Apple Inc"} {"Buffalo Bill", "Michael Jackson"}</knownNegatives><inverse>synonymFor</inverse><seedInstances> {"City of Brotherly Love", "Philadelphia"} {"Windy City", "Chicago"} {"Big Apple", "New York City"} {"NYC", "New York City"} {"City of Angels", "Los Angeles"} {"Apple Computer", "Apple Inc"}{"PM","private message"} {"SVN","Subversion"} {"Union Flag","Union Jack"} {"Web client","browser"} {"Armistice Day","Remembrance Day"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * known as * arg2</queryString><editDate>2010-07-12</editDate><author /><curator /><description>Two strings are synonyms if both of them frequently refer to the same real-world concept in text.</description><freebaseID /><comment>A few more seeds to help CPL.  These all come from the same "is also known as" pattern, so if we need more seeds then we should probably start by thinking up some other likely patterns.</comment></Relation><Relation id="78"><relationName>teamHomeStadium</relationName><humanFormat>arg2 is the {home venue for} the sports team arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>organizationActsInLocation</generalizations><domain>sportsTeam</domain><range>stadiumOrEventVenue</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>organizationHasBuilding</mutexExceptions><knownNegatives>{"Pittsburgh Steelers","PNC Park"} {"Mets","Yankee Stadium"} {"Pirates","Mellon Arena"} {"White Sox", "Wrigley Field"} {"Boston Red Sox","TD Banknorth Garden"}</knownNegatives><inverse>stadiumHomeTeam</inverse><seedInstances>{"Pittsburgh Pirates","PNC Park"} {"New York Yankees","Yankee Stadium"} {"Pittsburgh Penguins","Mellon Arena"} {"Chicago Cubs", "Wrigley Field"} {"Boston Celtics","TD Banknorth Garden"} {"Chicago Bears","Soldier Field"} {"Fighting Illini","Memorial Stadium"} {"Portland Trail Blazers","Rose Garden"} {"Los Angeles Lakers","Staples Center"} {"Houston Rockets","Toyota Center"} {"Kansas City Royals","Kauffman Stadium"} {"Cincinnati Reds","Great American Ball Park"} {"Green Bay Packers","Lambeau Field"} {"Atlanta Falcons","Georgia Dome"} {"San Diego Chargers","Qualcomm Stadium"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * home to * arg1</queryString><editDate /><author /><curator /><description>The stadium or other sporting venue which a team designates as its "home." Typically, a large percentage of the team's games occur in this location.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/sports/sports team", "/sports/sports team/arena stadium": [{ "name": null, "/common/topic/alias": [] }] }]</freebaseID><comment>rename to sportsTeamHomeStadiumOrEventVenue</comment></Relation><Relation id="79"><relationName>teammate</relationName><humanFormat>arg1 and arg2 are {teammates}</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentCollaboratesWithAgent</generalizations><domain>athlete</domain><range>athlete</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives> {"Brett Favre","Peyton Manning"} {"Dwyane Wade","LeBron James"} {"Dwyane Wade","Paul Pierce"} {"Peyton Manning","Brett Favre"} {"Peyton Manning","Eli Manning"}</knownNegatives><inverse>teammate</inverse><seedInstances>{"Ben Roethlisberger","Willie Parker"} {"Derek Jeter","Johnny Damon"} {"Dwyane Wade","Michael Beasley"} {"Dwyane Wade","Shawn Marion"} {"Evgeni Malkin","Jordan Staal"} {"Jason Giambi","Derek Jeter"} {"Jason Giambi","Johnny Damon"} {"Jason Varitek","Tim Wakefield"} {"Paul Pierce","Kevin Garnett"} {"Paul Pierce","Ray Allen"} {"Peyton Manning","Dallas Clark"} {"Peyton Manning","Joseph Addai"} {"Ray Allen","Kevin Garnett"} {"Sidney Crosby","Evgeni Malkin"} {"Troy Polamalu","Larry Foote"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (with OR and)  * arg2</queryString><editDate /><author /><curator /><description>Two athletes are teammates if they play on the same team.</description><freebaseID /><comment>rename to athleteTeammateOfAthlete</comment></Relation><Relation id="80"><relationName>teamPlaysAgainstTeam</relationName><humanFormat>arg1 is a sports team that {plays against} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentCompetesWithAgent</generalizations><domain>sportsTeam</domain><range>sportsTeam</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives> {"Astros","Texans"} {"Blackhawks","Bulls"} {"Boston Celtics","Boston Bruins"} {"Chicago Bears","Chicago Cubs"}  {"White Sox","Steelers"}</knownNegatives><inverse>teamPlaysAgainstTeam</inverse><seedInstances>{"Pittsburgh Steelers","Baltimore Ravens"} {"Astros","Devil Rays"} {"Blackhawks","Penguins"} {"Boston Celtics","Chicago Bulls"} {"Brewers","Cubs"} {"Browns","Steelers"} {"Capitals","Red Wings"} {"Chicago Bears","Green Bay Packers"} {"Chicago Bulls","Detroit Pistons"} {"Chicago Fire","Columbus Crew"} {"Chicago White Sox","Detroit Tigers"} {"Cleveland Cavaliers","Miami Heat"} {"Colts","Patriots"} {"Crew","Revolution"} {"Derby County","Manchester United"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>TRUE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * against * arg2</queryString><editDate /><author /><curator /><description>Teams that play against each other competitively</description><freebaseID /><comment>rename to sportsTeamPlaysAgainstSportsTeam</comment></Relation><Relation id="81"><relationName>teamPlaysInCity</relationName><humanFormat>arg2 is the {home city of} the sports team arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>organizationActsInLocation proxyOf</generalizations><domain>sportsTeam</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> {"Yankees","Boston"} {"Celtics","New York"} {"Steelers","Baltimore"} {"Bears","Green Bay"} {"Cubs","Minnesota"}</knownNegatives><inverse>citySportsTeams</inverse><seedInstances>{"Astros","Houston"} {"Blackhawks","Chicago"} {"Boston Celtics","Boston"} {"Brewers","Milwaukee"} {"Browns","Cleveland"} {"Capitals","Washington"} {"Colts","Indianapolis"} {"Devil Rays","Tampa Bay"} {"Hornets","Charlotte"} {"Magic","Orlando"}  {"Mavericks","Dallas"} {"Pittsburgh Steelers","Pittsburgh"} {"Red Wings","Detroit"} {"San Francisco Giants","San Francisco"} {"Tampa Bay Lightning","Tampa Bay"} </seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * home to * arg1</queryString><editDate /><author /><curator /><description>The home city of a sports team, typically a location where the team frequently competes.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/sports/sports team", "/sports/sports team/location": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]</freebaseID><comment>rename to sportsTeamPlaysInCity</comment></Relation><Relation id="82"><relationName>teamPlaysInLeague</relationName><humanFormat>arg1 is a sports team that {plays in} the league arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>subpartOfOrganization</generalizations><domain>sportsTeam</domain><range>sportsLeague</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> {"Yankees","NBA"} {"Celtics","MLB"} {"Steelers","NHL"} {"Cubs","NFL"} {"Rockets","NFL"}</knownNegatives><inverse>leagueTeams</inverse><seedInstances>{"Yankees","MLB"} {"Pirates","MLB"} {"Spurs","NBA"} {"Penguins","NHL"} {"Red Wings","NHL"} {"Ravens","NFL"} {"Packers","NFL"} {"Bulls","NBA"} {"Celtics","NBA"} {"Brewers","MLB"} {"Cubs","MLB"} {"Hornets","NBA"} {"Blackhawks","NHL"} {"Red Sox","MLB"} {"Patriots","NFL"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate /><author /><curator /><description>The league that a team plays in.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/sports/sports team", "/sports/sports team/league": [{ "/sports/sports league participation/league": [{ "name": null, "/common/topic/alias": [] }] }] }]</freebaseID><comment>rename to sportsTeamPlaysInSportsLeague</comment></Relation><Relation id="83"><relationName>teamPlaysSport</relationName><humanFormat>arg1 is a sports team that {plays} the sport arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>sportsTeam</domain><range>sport</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives> {"Derby County","baseball"} {"Giants","basketball"} {"Suns","football"} {"Penguins","basketball"} {"Pirates","football"}</knownNegatives><inverse>sportTeam</inverse><seedInstances>{"Astros","baseball"} {"Blackhawks","hockey"} {"Celtics","basketball"} {"Brewers","baseball"} {"Browns","football"} {"Capitals","hockey"} {"Bears","football"} {"Bulls","basketball"} {"Cavaliers","basketball"} {"Colts","football"} {"Los Angeles Lakers","basketball"} {"Magic","basketball"} {"Pirates","baseball"} {"Steelers","football"} {"Rangers","hockey"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * team * such as * arg1</queryString><editDate /><author /><curator /><description>The sport that a team plays.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/sports/sports team", "/sports/sports team/sport": [{ "name": null, "/common/topic/alias": [] }] }]</freebaseID><comment>rename to sportsTeamPlaysSport</comment></Relation><Relation id="84"><relationName>teamWonTrophy</relationName><humanFormat>arg1 is a sports team that {won} the arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>sportsTeam</domain><range>awardTrophyTournament</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives>{"Knicks","Super Bowl"} {"Bucks","NBA Championship"} {"Chargers","Super Bowl"} {"Falcons","Super Bowl"} {"Padres","World Series"}</knownNegatives><inverse>trophyWonByTeam</inverse><seedInstances>{"Steelers","Super Bowl"} {"Red Wings","Stanley Cup"} {"White Sox","World Series"} {"Celtics","NBA Championship"} {"Red Sox","World Series"} {"Marlins","World Series"} {"Lakers","NBA Championship"} {"Ducks","Stanley Cup"} {"Colts","Super Bowl"} {"Giants","Super Bowl"} {"Patriots","Super Bowl"} {"White Sox","American League Pennant"} {"Bulls","NBA Championship"} {"Spurs","NBA Championship"} {"Heat","NBA Championship"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (win OR wins OR won OR winning OR winner) * arg2</queryString><editDate /><author /><curator /><description>Trophies that a team has won</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/sports/sports team", "/sports/sports team/championships": [{ "/sports/sports championship event/championship": [{ "name": null, "/common/topic/alias": [] }] }] }]</freebaseID><comment>The mapping to the Freebase concept is a little off, but it's close. Rename to sportsTeamWonAwardTrophyTournament</comment></Relation><Relation id="85"><relationName>televisionStationAffiliatedWith</relationName><humanFormat>arg1 is a {TV affiliate of} the network arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>subpartOfOrganization</generalizations><domain>televisionStation</domain><range>televisionNetwork</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> {"WHDH","Independent"} {"WGBH","ABC"} {"WBZ-TV","NBC"} {"WLS","Fox"} {"WFLD-TV","CBS"}</knownNegatives><inverse>televisionCompanyAffiliate</inverse><seedInstances>{"WHDH","NBC"} {"WGBH","PBS"} {"WBZ-TV","CBS"} {"WLS","ABC"} {"WFLD-TV","Fox"} {"WGN-TV","CW"} {"WNET","PBS"} {"WWOR","CW"} {"KONG","NBC"} {"KCPQ","Fox"} {"KVOS","Independent"} {"KDKA","CBS"} {"WXPI","NBC"} {"WTHR","NBC"} {"WISH TV","CBS"} {"KTRK","ABC"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (affiliated OR affiliates OR affiliate OR affiliating) * arg2</queryString><editDate /><author /><curator /><description>The network that a TV station gets its programming from</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/broadcast/tv station", "/broadcast/tv station/affiliations": [{ "/broadcast/tv affiliation duration/network": [{ "name": null, "/common/topic/alias": [] }] }] }]</freebaseID><comment>Rename to televisionStationAffiliatedWithTelevisionNetwork</comment></Relation><Relation id="86"><relationName>televisionStationInCity</relationName><humanFormat>arg1 is a {TV station in} the city arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>hasOfficeInCity</generalizations><domain>televisionStation</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>headquarteredIn</mutexExceptions><knownNegatives> {"WHDH","New York"} {"WLS","Boston"} {"WNET","Chicago"} {"KONG","Pittsburgh"} {"WXPI","Seattle"}</knownNegatives><inverse>cityTelevisionStation</inverse><seedInstances>{"WHDH","Boston"} {"WGBH","Boston"} {"WBZ-TV","Boston"} {"WLS","Chicago"} {"WFLD-TV","Chicago"} {"WGN-TV","Chicago"} {"WNET","New York"} {"WWOR","New York"} {"KONG","Seattle"} {"KCPQ","Seattle"} {"KVOS","Seattle"} {"KDKA","Pittsburgh"} {"WPXI","Pittsburgh"} {"WTHR","Indianapolis"} {"WISH TV","Indianapolis"} {"KTRK","Houston"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate /><author /><curator /><description>The city where a TV station is located or broadcasts to.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/broadcast/tv station", "/broadcast/broadcast/area served": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]</freebaseID><comment /></Relation><Relation id="87"><relationName>visualArtistArtForm</relationName><humanFormat>arg1 is a visual artist {in the field of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>visualArtist</domain><range>visualArtForm</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives> {"Henry Moore", "painting"} {"Cindy Sherman", "drawing"} {"Leonardo da Vinci", "photography"} {"Edvard Munch", "sculpture"} {"Vincent van Gogh", "installation art"}</knownNegatives><inverse>visualArtFormArtist</inverse><seedInstances> {"Leonardo da Vinci", "painting"} {"Leonardo da Vinci", "drawing"} {"Pablo Picasso", "painting"} {"Pablo Picasso", "sculpture"} {"Vincent van Gogh", "painting"} {"Cindy Sherman", "photography"} {"Jasper Johns", "printmaking"} {"Andy Warhol", "printmaking"} {"Man Ray", "photography"} {"Man Ray", "collage"} {"Edgar Degas", "drawing"} {"Edvard Munch", "drawing"} {"Edvard Munch", "painting"} {"Damien Hirst", "installation art"} {"Henry Moore", "sculpture"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * (of OR by) * arg1</queryString><editDate /><author /><curator /><description>The type of visual art that a visualArtist produces. Also known as an artist's medium.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/visual art/visual artist", "/visual art/visual artist/art forms": [{ "name": null, "/common/topic/alias": [] }] }]</freebaseID><comment>rename to visualArtistCreatesVisualArtForm</comment></Relation><Relation id="88"><relationName>visualArtistArtMovement</relationName><humanFormat>arg1 is {part of} the visual art movement arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>visualArtist</domain><range>visualArtMovement</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives> {"Leonardo da Vinci","Surrealism"} {"Salvado Dali","Italian Renaissance"} {"Andy Warhol","Expressionism"} {"Claude Monet","Pop Art"} {"Vincent van Gogh","Cubism"}</knownNegatives><inverse>visualArtMovementArtist</inverse><seedInstances> {"Leonardo da Vinci","Italian Renaissance"} {"Pablo Picasso","Cubism"} {"Vincent van Gogh","Impressionism"} {"Vincent van Gogh","Expressionism"} {"Robert Rauschenberg","Postmodernism"} {"Frida Kahlo","Surrealism"} {"Claude Monet","Impressionism"} {"Ren&#233; Magritte","Surrealism"} {"Andy Warhol","Pop Art"} {"Jasper Johns","Pop Art"} {"Jasper Johns","Neo-Dada"} {"Salvado Dali","Surrealism"} {"Salvado Dali","Cubism"} {"Man Ray","Dada"} {"Edgar Degas","Realism"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * (inspired OR started OR created) * arg2</queryString><editDate /><author /><curator /><description>The art movements or styles that a visualArtist is associated with.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/visual art/visual artist", "/visual art/visual artist/associated periods or movements": [{ "name": null, "/common/topic/alias": [] }] }]</freebaseID><comment>rename to visualArtistPartOfVisualArtMovement</comment></Relation><Relation id="89"><relationName>cityLiesOnRiver</relationName><humanFormat>arg1 is a city that {lies on} the river arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>atLocation</generalizations><domain>city</domain><range>river</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>locationLocatedWithinLocation</mutexExceptions><knownNegatives>{"linz","hudson river"}{"San Francisco","Sacramento"}{"Pittsburgh","Hudson River"}</knownNegatives><inverse>riverFlowsThroughCity</inverse><seedInstances>{"linz","danube"}{"tikrit","tigris"}{"vienna","danube"}{"pisa","arno"}{"varanasi","ganges"}{"florence","arno"}{"drogheda","boyne"}{"tarragona","ebro"}{"nassau","lahn"}{"schaffhausen","rhine"}{"prague","elbe"}{"trier","moselle"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * (in OR at OR of OR through) * arg1</queryString><editDate>2010-06-17</editDate><author>Tom Mitchell</author><curator /><description>Rivers that flow or through or immediately adjacent to the city.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/location/citytown", "/type/reflect/any reverse": [{ "link": "/geography/river/cities", "name": null, "/common/topic/alias": [] }] }]</freebaseID><comment>Freebase has the inverse relation: /geography/river/cities</comment></Relation><Relation id="90"><relationName>animalPreysOn</relationName><humanFormat>arg1 is an animal that {preys on} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentCompetesWithAgent</generalizations><domain>animal</domain><range>animal</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>0</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"rodents","pythons"}{"deer","bobcats"}{"rabbits","bobcats"}{"mice","copperheads"}{"crayfish","cranes"}{"insects","dragonflies"}{"mice","hawks"}{"chipmunks","weasels"}{"ants","anteaters"}{"birds","badgers"}{"rodents","barn owls"}{"ants","birds"}{"earthworms","birds"}{"birds","foxes"}</knownNegatives><inverse>animalPredators</inverse><seedInstances>{"pythons","rodents"}{"bobcats","deer"}{"bobcats","rabbits"}{"copperheads","mice"}{"cranes","crayfish"}{"dragonflies","insects"}{"hawks","mice"}{"praying mantids","insects"}{"weasels","chipmunks"}{"anteaters","ants"}{"badgers","birds"}{"barn owls","rodents"}{"birds","ants"}{"birds","earthworms"}{"foxes","birds"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (preys OR prey OR preyed OR preying) on * arg2</queryString><editDate>2010-06-17</editDate><author>Tom Mitchell</author><curator /><description>Animals that are hunted and eaten by this animal.</description><freebaseID>none</freebaseID><comment>rename to animalPreysOnAnimal</comment></Relation><Relation id="91"><relationName>attractionOfCity</relationName><humanFormat>arg1 is a tourist attraction {in the city} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>locationLocatedWithinLocation</generalizations><domain>attraction</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>hotelInCity restaurantInCity airportInCity shoppingMallInCity trainStationInCity</mutexExceptions><knownNegatives>{"circus maximus","constantinople"} {"trevi fountain","tel aviv"} {"the london eye","chicago"} {"national gallery","florence"} {"Tate Modern","dublin"} {"Statue of Liberty","washington"} {"Empire State Building","garden city"} {"rockerfeller center","london"} {"Staten Island Ferry", "trenton"}</knownNegatives><inverse>cityAttractions</inverse><seedInstances>{"Circus Maximus", "rome"},{"Arch of Titus","rome"},{"Colosseum","rome"},{"Trevi Fountain","rome"},{"Brandenburger Gate","rome"},{"Museum Island","Berlin"},{"Brookfield Zoo","chicago"},{"Lincoln Park Zoo", "chicago"},{"Millennium Park","chicago"},{"Union Station","chicago"},{"Empire State Building","new york"},{"Statue of Liberty","new york"},{"Grand Central Terminal","new york"},{"Rockefeller Center", "new york"},{" Ellis Island Immigration Museum","new york"},{" Staten Island Ferry","new york"},{"American Museum of Natural History","new york"},{"Central Park","new york"},{"British Museum","london"},{"Tate Modern","london"},{"National Gallery","london"},{"Natural History Museum","london"},{"The London Eye","london"},{"Science Museum","london"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-06-18</editDate><author>Medhi (via Bryan)</author><curator /><description>The city that an attraction is located in</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/travel/tourist attraction", "/travel/tourist attraction/near travel destination": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]</freebaseID><comment /></Relation><Relation id="92"><relationName>museumInCity</relationName><humanFormat>arg1 is a museum {in the city} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>attractionOfCity buildingLocatedInCity</generalizations><domain>museum</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"The Andy Warhol Museum", "new york"} {"Toronto's Historic Museums", "berlin"} {"Bata Shoe Museum","los angeles"} {"Hollywood Wax Museum","tulsa"} {"Royal Ontario Museum","mexico city"} {"Carnegie Museum of Art","austin"} {"Austin Children Museum","houston"} {"Berlin Museum","moscow"} {"Boston Science Museum","springfield"}</knownNegatives><inverse>cityMuseums</inverse><seedInstances>{"American Indian Museum","new york"},{"Museum of Sex","new york"},{"New York City Police Museum","new york"},{"Museum of Jewish Heritage","new york"},{"Heritage Square Museum","los angeles"},{"Museum of Neon Art","los angeles"},{"Grammy Museum","los angeles"},{"Hollywood Wax Museum","los angeles"},{"Austin Museum of Art","austin"},{"Blanton Museum of Art","austin"},{"Austin Children Museum","austin"},{"Carnegie Museum of Art", "pittsburgh"},{"The Andy Warhol Museum","pittsburgh"},{"Boston Science Museum","boston"},{"Boston Children's Museum","boston"},{"Royal Ontario Museum", "toronto"},{"Toronto's Historic Museums","toronto"},{"Gardiner Museum","toronto"},{"Bata Shoe Museum","toronto"},{"Museum f&#252;r Naturkunde", "berlin"},{"Berlin Museum","berlin"}{"Museum of Modern Art","New York"},{"Melbourne Museum","Melbourne"},{"British Museum","London"},{"Natural History Museum","London"},{"Louvre Museum","Paris"},{"Anacostia Museum","Washington , D . C ."},{"National Museum of Iran","Tehran"},{"Gotoh Museum","Tokyo"},{"National Palace Museum","Taipei"},{"Zigong Dinosaur Museum","Zigong"},{"New York Transit Museum","New York"},{"Michigan Firehouse Museum","Ypsilanti"},{"Shanghai Museum","Shanghai"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-06-18</editDate><author>Medhi (via Bryan)</author><curator /><description>The city that a museum is located in</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/architecture/museum", "/location/location/containedby": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]</freebaseID><comment /></Relation><Relation id="93"><relationName>zooInCity</relationName><humanFormat>arg1 is a zoo {in the city} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>attractionOfCity</generalizations><domain>zoo</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>aquariumInCity</mutexExceptions><knownNegatives>{"Austin Zoo","London"} {"Battersea Park Zoo", "Chicago"} {"Licoln Park Zoo","Boston"} {"Riverdale Zoo", "Ottawa"} {"ZSL London Zoo","Washington"} {"Woodland Park Zoo", "Redmond"} {"Central Park", "Washington"}</knownNegatives><inverse>cityZoos</inverse><seedInstances>{"Austin Zoo","austin"},{"Riverdale Zoo","toronto"},{"Central Park", "new york"},{"Barking Zoo","new york"},{"Friends of the National Zoo","washington"},{"Smithsonian National Zoological Park","washington"},{"Woodland Park Zoo","seattle"},{"Woodland Park Zoo","seattle"},{"Battersea Park Zoo","london"},{"ZSL London Zoo","london"},{"London Sea Life Aquarium","london"},{"Lincoln Park Zoo","chicago"},{"Lincoln Park Zoo","chicago"},{"Pueblo&#160;Zoo","Pueblo"},{"Belfast Zoo","Belfast"},{"Bronx Zoo","New York"},{"Folsom Zoo","Folsom"},{"Kansas City Zoo","Kansas"},{"Bristol Zoo","Bristol"},{"Taronga Zoo","Sydney"},{"Zoo Basel","Basel"},{"Giza Zoo","Cairo"},{"Calgery Zoo","Calgery"},{"Toronto Zoo","Toronto"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-06-18</editDate><author>Medhi (via Bryan)</author><curator /><description>The city a zoo is located in</description><freebaseID>/zoos/zoo/location</freebaseID><comment>Freebase mapping not quite an exact match.</comment></Relation><Relation id="94"><relationName>parkInCity</relationName><humanFormat>arg1 is a park {in the city} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>attractionOfCity</generalizations><domain>park</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>aquariumInCity</mutexExceptions><knownNegatives>{"frick park","carnegie"} {"washington square park","washington"} {"grant park","vienna"} {"central park","london"} {"battersea park","paris"} {"piers park sailing center","portland"} {"treptower park","munich"} {"holland park","holland"},{"Queen Elizabeth&#160;Park","Vancouver"},{"Sunset Park","New York"},{"Stanley Park","Vancouver"},{"Chinese Garden","Vancouver"},{"Edwards Gardens","Toronto"},{"Auburn Botanical Gardens","Auburn"},{"Moore Park","Sydney"},{"GuildWood Park","Toronto"},{"James Gardons","Toronto"},{"Waterfall Garden","Seattle"},{"Flagstaff Gardens","Melbourne"},{"Fitzroy Gardens","Melbourne"}</knownNegatives><inverse>cityParks</inverse><seedInstances>{"Central Park", "new york"},{"Madison Square Park Conservancy","new york"},{"Washington Square Park","new york"},{"Millenium Park","chicago"},{"Grant Park","chicago"},{"Piers Park Sailing Center","boston"},{"Peters Park","boston"},{"Charlesbank Park","boston"},{"Villa Borghese","rome"},{"Treptower Park","berlin"},{"Saint James's Park","london"},{"Hyde Park","london"},{"Battersea Park","london"},{"Holland Park","london"},{"Brockwell Park","london"},{"Vauxhall Park","london"},{"Schenley Park","pittsburgh"},{"Frick Park","pittsburgh"},{"Saint James Park","toronto"},{"High Park","toronto"},{"Christie Pits Park","toronto"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-06-18</editDate><author>Medhi (via Bryan)</author><curator /><description>The city a park is located in.</description><freebaseID>/location/location/containedby</freebaseID><comment>Freebase mapping not quite an exact match.</comment></Relation><Relation id="95"><relationName>hotelInCity</relationName><humanFormat>arg1 is a hotel {in the city} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>buildingLocatedInCity</generalizations><domain>hotel</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>attractionOfCity</mutexExceptions><knownNegatives>{"chelsea hotel","washington"} {"congress plaza hotel","washington"} {"delta chelsea downtown","new york"} {"sheraton centre","chicago"} {"hudson hotel","hudson"} {"metro plaza hotel","london"} {"swissotel","zurich"} {"hotel mirage","los angeles"} {"paramount hotel","las vegas"}</knownNegatives><inverse>cityHotels</inverse><seedInstances>{"New York Marriott Downtown", "new york"},{"Paramount Hotel", "new york"},{"Chelsea Hotel","new york"},{"Hudson Hotel","new york"},{"The Blackstone Hotel","chicago"},{"Congress Plaza Hotel","chicago"},{"Swissotel","chicago"},{"Hotel Adlon Kempinski","berlin"},{"Estrel Hotel","berlin"},{"Hotel Mirage","las vegas"},{"Downtown Marriott Hotel","los angeles"},{"Metro Plaza Hotel","los angeles"},{"holiday inn","new york"},{"Hollywood Roosevelt","los angeles"},{"Figueroa Hotel","los angeles"},{"Delta Chelsea Downtown","toronto"},{"Sheraton Centre","toronto"},{"Metropolitan Hotel","toronto"},{"The Drake Hotel","toronto"},{"The Fairmont Royal York", "toronto"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-06-18</editDate><author>Medhi (via Bryan)</author><curator /><description>The city a hotel is located in.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/travel/accommodation", "/location/location/containedby": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]</freebaseID><comment /></Relation><Relation id="96"><relationName>restaurantInCity</relationName><humanFormat>arg1 is a restaurant {in the city} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>buildingLocatedInCity</generalizations><domain>restaurant</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>attractionOfCity</mutexExceptions><knownNegatives>{"Eiffel Tower Restauant","paris"} {"Fleur De Lys","los angeles"} {"Mooo Restaurant","harvrad"} {"Lucca Restaurant","rome"} {"White Trash Fast Food","new york"} {"Tojo's Restaurant","toronto"} {"Bridges Restaurant" "pittsburgh"} {"Boathouse Restaurants","new york"} {"Mistal Restaurant","las vegas"} {"Pecking Duck House Restaurant","berlin"} {"Mon Ami Gabi Restaurant","paris"} {"Threadgills Restaurant","houston"} {"Carmelo's Restaurant","las vegas"} {"Bonaparte Restaurant","paris"} {"Restaurant Globe","new york"}</knownNegatives><inverse>cityRestaurants</inverse><seedInstances>{"Eiffel Tower Restaurant","las vegas"},{"TAO Restaurant","las vegas"},{"Rosemary's Restaurant","las vegas"},{"Mon Ami Gabi Restaurant","las vegas"},{"Fleur De Lys", "las vegas"},{"Cicada Restaurant","los angeles"},{"J Restaurant and Lounge","los angeles"},{"Roy's Restaurant","los angeles"},{"Delmonico's Restaurant","los angeles"},{"Peking Duck House Restaurant","los angeles"},{"Joe's Shanghai Restaurant","los angeles"},{"Tom's Restaurant","los angeles"},{"Mooo Restaurant","boston"},{"Union Oyster House","los angeles"},{"Mistral Restaurant","los angeles"},{"Lucca Restaurant","los angeles"},{"Stella Restaurant","los angeles"},{"Threadgills Restaurant","austin"},{"Carmelo's Restaurant","austin"},{"Zur letzten Instanz Restaurant","berlin"},{"Restaurant Lafil","berlin"},{"White Trash Fast Food","berlin"},{"Vij's Restaurant","vancouver"},{"Boathouse Restaurants","vancouver"},{"Tojo's Restaurant","vancouver"},{"Bridges Restaurant","vancouver"},{"Restaurant Toqu&#233;","montreal"},{"Bonaparte Restaurant","montreal"},{"Restaurant Globe","montreal"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-06-18</editDate><author>Medhi (via Bryan)</author><curator /><description>The city a restaurant is located in.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/dining/restaurant", "/business/business location/address": [{ "/location/mailing address/citytown": [{ "name": null, "/common/topic/alias": [] }] }] }]</freebaseID><comment /></Relation><Relation id="97"><relationName>universityInCity</relationName><humanFormat>arg1 is a university {in the city} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>organizationActsInLocation</generalizations><domain>university</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>cityUniversities</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-09-06</editDate><author>Mehdi (via Bryan)</author><curator /><description>The city a university is located in.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/education/university", "/education/educational institution/campuses": [{ "/location/location/containedby": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }] }]</freebaseID><comment /></Relation><Relation id="98"><relationName>hospitalInCity</relationName><humanFormat>arg1 is a hospital {in the city} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>buildingLocatedInCity</generalizations><domain>hospital</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>cityHasHospital</inverse><seedInstances>{"The Vancouver Clinic","Vancouver"},{"BC Children's&#160;Hospital","Vancouver"},{"Vancouver General Hospital","Vancouver"},{"Swedish Medical Center","Seattle"},{"Virginia Mason Medical Center","Seattle"},{"Bridgepoint Health","Toronto"},{"St. Joseph's Health Centre","Toronto"},{"Highlands Hospital","London"},{"Sydney Hospital","Sydney"},{"New York Presbyterian&#160;Hospital","New York"},{"Allegheny General&#160;Hospital","Pittsburgh"},{"Children's Hospital","Pittsburgh"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-09-06</editDate><author>Mehdi (via Bryan)</author><curator /><description>The city a hostpital is located in.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/medicine/hospital", "/location/location/containedby": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]</freebaseID><comment>Freebase mapping not quite an exact match.</comment></Relation><Relation id="99"><relationName>lakeInState</relationName><humanFormat>arg1 is a lake {in the state or province} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>locationLocatedWithinLocation</generalizations><domain>lake</domain><range>stateOrProvince</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>stateHasLake</inverse><seedInstances>{"Emerald Lake","British Columbia"},{"Kootenay Lake","British Columbia"},{"Wollaston Lake","Saskatchewan"},{"Cree Lake","Saskatchewan"},{"Lake Merritt","California"},{"Lake Granby","Colorado"},{"Lake Burton","Georgia"},{"Blue Lake","South Australia"},{"Lake District","North West England"},{"Stockton Lake","Missouri"},{"Angle Lake","Nevada"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-09-06</editDate><author>Mehdi (via Bryan)</author><curator /><description>The state/province a river is in.</description><freebaseID>/location/location/containedby</freebaseID><comment>Freebase mapping not quite an exact match.</comment></Relation><Relation id="100"><relationName>trainStationInCity</relationName><humanFormat>arg1 is  a train station {in the city} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>locationLocatedWithinLocation</generalizations><domain>trainStation</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>attractionOfCity</mutexExceptions><knownNegatives /><inverse>cityHasTrainStation</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-09-06</editDate><author /><curator /><description>The city a train station is in.</description><freebaseID>/location/location/containedby</freebaseID><comment>Freebase mapping not quite an exact match.</comment></Relation><Relation id="101"><relationName>languageOfCountry</relationName><humanFormat>arg1 is the {language of} the country arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>language</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>countryLanguage</inverse><seedInstances>{"Arabic","Egypt"},{"English","United State"},{"English","Canada"},{"Chinese","Singapore"},{"French","France"},{"German","Austria"},{"German","Switzerland"},{"Greek","Greece"},{"Persian","Iran"},{"Polish","Poland"},{"English","Australia"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * spoken in * arg2</queryString><editDate>2010-09-06</editDate><author>Mehdi (via Bryan)</author><curator /><description>Typical language spoken in a country (official or otherwise)</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/language/human language", "/language/human language/countries spoken in": [{ "name": null, "/common/topic/alias": [], "type": "/location/country" }] }]</freebaseID><comment /></Relation><Relation id="102"><relationName>languageOfCity</relationName><humanFormat>arg1 is {spoken in} the city arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>language</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>languageSchoolInCity isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>cityLanguage</inverse><seedInstances>{"French","Montreal"},{"German","Zurich"},{"French","Paris"},{"English","Pittsburgh"},{"English","Toronto"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * spoken in * arg2</queryString><editDate>2010-09-06</editDate><author>Mehdi (via Bryan)</author><curator /><description>Typical language spoken in a city (official or otherwise)</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/language/human language", "/language/human language/region": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]</freebaseID><comment>Freebase mapping not quite an exact match.</comment></Relation><Relation id="103"><relationName>airportInCity</relationName><humanFormat>arg1 is an airport {in the city} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>buildingLocatedInCity</generalizations><domain>airport</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>attractionOfCity</mutexExceptions><knownNegatives /><inverse>cityHasAirport</inverse><seedInstances>{"London City Airport","London"},{"Manchester Airport&#8206;","Manchester"},{"London Heathrow Airport","London"},{"London Luton Airport","London"},{"Bremen Airport","Bremen"},{"Edinburgh Airport","Edinburgh"},{"Copenhagen Airport","Copenhagen"},{"Birmingham International Airport","Birmingham"},{"Vienna International&#8206; airport","Vienna"},{"Chicago O'Hare International Airport","Chicago"},{"Los Angeles International Airport","Los Angeles"},{"McCarran International Airport","Las Vegas"},{"LaGuardia Airport","New York City"},{"John F. Kennedy International Airport","New York"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-09-06</editDate><author>Mehdi (via Bryan)</author><curator /><description>The city an airport is located in.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/aviation/airport", "/aviation/airport/serves": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]</freebaseID><comment /></Relation><Relation id="104"><relationName>shoppingMallInCity</relationName><humanFormat>arg1 is a shopping mall {in the city} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>buildingLocatedInCity</generalizations><domain>shoppingMall</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>attractionOfCity</mutexExceptions><knownNegatives /><inverse>cityHasShoppingMall</inverse><seedInstances>{"Manhattan Mall Shopping Center","New York"},{"Canal Shopping Center","New York"},{"Beverly Center Shopping Mall","Los Angeles"},{"California Market Center","Los Angeles"},{"Del Amo Fashion Center","Los Angeles"},{"Lakewood Center","Los Angeles"},{"Oaks Mall","Los Angeles"},{"Franklin Mills Mall","Philadelphia"},{"Roosevelt Mall Shopping Center","Philadelphia"},{"Toronto Eaton Centre","Toronto"},{"Shops at Don Mills","Toronto"},{"Dufferin Mall","Toronto"},{"Atrium Mall","Chicago"},{"The 900 Shops","Chicago"},{"Water Tower Place","Chicago"},{"West Edmonton Mall","Edmonton"},{"Potsdamer Platz Arkaden","Berlin"},{"Schloss Charlottenburg","Berlin"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-09-06</editDate><author>Mehdi (via Bryan)</author><curator /><description>The city a shopping mall is located in.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/business/shopping center", "/business/shopping center/address": [{ "/location/mailing address/citytown": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }] }]</freebaseID><comment>Freebase mapping not quite an exact match.</comment></Relation><Relation id="105"><relationName>aquariumInCity</relationName><humanFormat>arg1 is an aquarium {in the city} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>attractionOfCity</generalizations><domain>aquarium</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>buildingLocatedInCity zooInCity parkInCity</mutexExceptions><knownNegatives /><inverse>cityAquariums</inverse><seedInstances>{"Georgia Aquarium","Atlanta"},{"Shedd Aquarium","Chicago"},{"New York Aquarium","New York"},{"Kyoto Aquarium","Los Angeles"},{"National Aquarium","Washington DC"},{"Aquarium und Zoologischer Garten","Berlin"},{"Aquarium Berlin","Berlin"},{"New England Aquarium Home","Boston"},{"Dallas Aquarium","Dallas"},{"Dallas World Aquarium","Dallas"},{"Spadina Aquarium","Toronto"},{"Vancouver Aquarium","Vancouver"},{"National Aquarium, Baltimore","Baltimore"},{"L'aquarium De Barcelona","barcelona"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-09-06</editDate><author>Mehdi (via Bryan)</author><curator /><description>The city an aquarium is located in.</description><freebaseID>/zoos/zoo/location</freebaseID><comment>Freebase mapping not quite an exact match.</comment></Relation><Relation id="106"><relationName>mountainInState</relationName><humanFormat>arg1 is a mountain {in the state or province} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>locationLocatedWithinLocation</generalizations><domain>mountain</domain><range>stateOrProvince</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>stateHasMountain</inverse><seedInstances>{"Cheaha Mountain","Alabama"},{"Red Mountain","Alabama"},{"Mount McKinley","Alaska"},{"South Peak","Alaska"},{"Sierra Nevada","California"},{"White Mountains","California"},{"Alachua","Florida"},{"Sugarloaf Mountain","Florida"},{"Charles Mound","Illinois"},{"Benton Mound"," Illinois"},{"Sugarloaf Mountain","Maryland"},{"Mount Arvon","Michigan"},{"Mount Carwood","Michigan"},{"Campbell Hill","Ohio"},{"Mount Miserable","Ohio"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-09-06</editDate><author>Mehdi (via Bryan)</author><curator /><description>State/province a mountain is located in.</description><freebaseID>/location/location/containedby</freebaseID><comment>Freebase mapping not quite an exact match.</comment></Relation><Relation id="107"><relationName>languageOfUniversity</relationName><humanFormat>arg1 is a language {used in} the university arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>language</domain><range>university</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>universityOperatesInLanguage</inverse><seedInstances>{"French", "Sorbonne University"},{"Lithuanian", "Vilnius University"},{"German", "Basel University"},{"English", "McGill University"},{"French","EPFL"},{"English","University of Washington"},{"English","University of Hong kong"},{"Arabic","Birzeit University"},{"German","University of Munich"},{"French","University of Geneva"},{"German","University of Zurich"},{"German","University of Bern"},{"Finnish","University of Helsinki"},{"English", "University of Florida"},{"English","University of Michigan"},{"Finnish", "University of Turku"}, {"English","Harvard University"},{"English","University of California, Berkeley"},{"English","Stanford"},{"English","Cornell"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * (teaches OR teach OR taught OR teaching) in * arg1</queryString><editDate>2010-09-06</editDate><author>Mehdi (via Bryan)</author><curator /><description>Language spoken at a college/university.</description><freebaseID /><comment /></Relation><Relation id="108"><relationName>transportationInCity</relationName><humanFormat>arg1 is a transportation system {located in} the city arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>attractionOfCity</generalizations><domain>transportation</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>cityHasTransportation</inverse><seedInstances>{"commuter rail"&#160;,"Washington, DC"},{"commuter rail","southern Vancouver Island"},{"commuter rail","Toronto"},{"commuter rail","&#160;Montr&#233;al"},{"Commuter rail","Los Angeles"},{"Metrolink","Los Angeles"},{"commuter rail","Tacoma"},{"Commuter rail","Auckland"},{"Melbourne&#160;-&#160;Commuter rail","Melbourne"},{"commuter rail","London"},{"Metro","Paris"},{"commuter rail","Paris"},{"light rail","Z&#252;rich"},{"light rail","Paris"},{"tram lines","Paris"},{"Suburban&#160;Light Rail","Paris"},{"light rail","downtown Vancouver"},{"Skytrain&#160;light rail", "Vancouver"},{"Airtrain&#160;Light Rail","New York"},{"Light Rail ","Los Angeles"},{"Light Rail","Sydney"},{"Monorail services","Sydney"},{"monorail","Melbourne"},{"Tram","Melbourne"},{"light rail","Melbourne"},{"Light Rail","Toronto"},{" MetroSubway","Washington DC"},{"Metro&#160;system","Montreal"},{"MetroRail","Los Angeles"},{"metropolitan rail","Toronto"}{"metropolitan rail","New York"}{"metropolitan rail","Sydney"},{"metropolitan rail","Paris"},{&#160;"metropolitan rail","Melbourne"},{"Metra rail","Chicago"}{"Metropolitan Rail","Naperville"},{"metropolitan rail&#160;","Brisbane"},{"Metro","Kaula Lumpur"}{"SkyTrain","Vancouver"},{"Skytrain","Bangkok"},{"suburban rail","London"},{"commuter rail","Helsinki "},{"Suburban Rail","Belfast"},{"Regional Rail","Philadelphia"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-09-06</editDate><author>Mehdi (via Bryan)</author><curator /><description>City of a transportation system.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/metropolitan transit/transit system", "/metropolitan transit/transit system/area served": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]</freebaseID><comment>This has nrOfValues=1 because its generalization, attractionOfCity, does.  If we wind up wanting to capture intercity transporation instances, then we'll need an intermediate generalization with nrOfValues=any generalization of attractionInCity.</comment></Relation><Relation id="109"><relationName>animalIsTypeOfAnimal</relationName><humanFormat>arg1 is an animal that is a {kind of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>specializationOf</generalizations><domain>animal</domain><range>animal</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"crayfish","annelids"}{"bass","social insects"}{"herons","bream"}{"loons","echinoderms"}{"impala","monkeys"}</knownNegatives><inverse>animalTypeHasAnimal</inverse><seedInstances>{"crayfish","crustaceans"}{"grubs","invertebrates"}{"amphipods","crustaceans"}{"trilobites","arthropods"}{"copepods","invertebrates"}{"sea anemones","cnidarians"}{"honey bees","social insects"}{"starfish","echinoderms"}{"water fleas","zooplankton"}{"leatherjackets","grubs"}{"grubs","insect larvae"}{"earthworms","annelids"}{"sea squirts","bryozoans"}{"honeybees","social insects"}{"copepods","zooplankton"}{"termites","social insects"}{"insect larvae","crustaceans"}{"horseshoe crabs","arthropods"}{"crustacea","arthropods"}{"crayfish","arthropods"}{"zoanthids","corals"}{"chimps","primates"}{"chimpanzees","primates"}{"kangaroos","marsupials"}{"chimpanzees","apes"}{"cetaceans","marine mammals"}{"chimpanzee","primates"}{"gorillas","great apes"}{"orangutans","primates"}{"great apes","primates"}{"baboons","primates"}{"sea otters","marine mammals"}{"jaguars","mammals"}{"bison","herbivores"}{"walrus","marine mammals"}{"walruses","marine mammals"}{"hyenas","carnivores"}{"wildebeest","herbivores"}{"porpoises","marine mammals"}{"jaguars","big cats"}{"llamas","camelids"}{"otters","marine mammals"}{"donkeys","farm animals"}{"manatees","marine mammals"}{"chimps","apes"}{"orangutans","apes"}{"kangaroo","marsupials"}{"beaver","furbearers"}{"donkeys","equines"}{"eland","antelopes"}{"harbor seals","marine mammals"}{"pumas","big cats"}{"chimpanzee","apes"}{"tigers","felines"}{"wallabies","marsupials"}{"muskrat","furbearers"}{"raccoons","carnivores"}{"colobus monkeys","primates"}{"impala","antelopes"}{"lemurs","primates"}{"bowhead whales","marine mammals"}{"hens","farm animals"}{"camels","ruminants"}{"chinchillas","herbivores"}{"koalas","marsupials"}{"caribou","ungulates"}{"killer whales","marine mammals"}{"macaques","monkeys"}{"raccoon","furbearers"}{"monkeys","apes"}{"kudu","antelopes"}{"warblers","songbirds"}{"herons","water birds"}{"waterfowl","water birds"}{"gulls","seabirds"}{"loons","waterfowl"}{"pheasant","game birds"}{"egrets","wading birds"}{"waterfowl","waterbirds"}{"pheasants","game birds"}{"waterfowl","game birds"}{"flamingoes","water birds"}{"plovers","shorebirds"}{"herons","waterbirds"}{"cormorants","seabirds"}{"bluebirds","cavity nesters"}{"shorebirds","waterfowl"}{"petrels","seabirds"}{"loons","water birds"}{"thrushes","songbirds"}{"snow geese","waterfowl"}{"boobies","seabirds"}{"loons","waterbirds"}{"crows","corvids"}{"shorebirds","waterbirds"}{"grebes","waterfowl"}{"albatrosses","seabirds"}{"cockatoos","parrots"}{"egrets","waterfowl"}{"egrets","water birds"}{"cormorants","water birds"}{"mergansers","waterfowl"}{"partridge","game birds"}{"pheasants","upland game birds"}{"teal","waterfowl"}{"egrets","shorebirds"}{"sparrows","songbirds"}{"amazons","parrots"}{"macaws","parrots"}{"warblers","passerines"}{"grouse","game birds"}{"kittiwakes","seabirds"}{"herons","shorebirds"}{"chickadees","songbirds"}{"gulls","water birds"}{"gulls","waterbirds"}{"cormorants","waterbirds"}{"storks","water birds"}{"finches","songbirds"}{"sandpipers","shorebirds"}{"egrets","waterbirds"}{"marlin","billfish"}{"perch","panfish"}{"crappie","panfish"}{"bluegill","panfish"}{"bluegill","sunfish"}{"crappies","panfish"}{"bluegills","panfish"}{"perch","pan fish"}{"swordfish","billfish"}{"barracuda","pelagics"}{"manta rays","pelagics"}{"guppies","livebearers"}{"whale sharks","pelagics"}{"mackerel","pelagics"}{"smallmouth bass","game fish"}{"crappie","pan fish"}{"hammerheads","pelagics"}{"rainbow trout","salmonids"}{"lake trout","salmonids"}{"neons","tetras"}{"bluegill","pan fish"}{"sailfish","billfish"}{"mantas","pelagics"}{"northern pike","game fish"}{"crappie","sunfish"}{"sunfish","panfish"}{"mantas","rays"}{"rock bass","panfish"}{"marlin","pelagics"}{"yellowfin","tunas"}{"bull trout","salmonids"}{"tetras","characins"}{"swordfish","tunas"}{"yellow perch","panfish"}{"marlins","game fish"}{"brook trout","salmonids"}{"albacore","tunas"}{"carp","cyprinids"}{"lingcod","bottomfish"}{"stingrays","rays"}{"shad","minnows"}{"largemouth bass","panfish"}{"manta rays","rays"}{"crappie","bream"}{"carp","minnows"}{"lingcod","rockfish"}{"tiger barbs","barbs"}{"bluegills","sunfish"}{"cutthroat trout","salmonids"}{"bluegill","bream"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (is OR are) * arg2</queryString><editDate>2010-06-28</editDate><author>Burr</author><curator /><description>Type-specific generalization of animals.</description><freebaseID /><comment /></Relation><Relation id="110"><relationName>vehicleIsTypeOfVehicle</relationName><humanFormat>arg1 is a vehicle that is a {kind of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>specializationOf</generalizations><domain>vehicle</domain><range>vehicle</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"fire trucks","buggies"}{"dump trucks","ATVs"}{"ambulances","merchant ships"}{"forklifts","emergency vehicles"}{"golf carts","terrain vehicles"}</knownNegatives><inverse>vehicleTypeHasVehicle</inverse><seedInstances>{"ambulances","emergency vehicles"}{"fire trucks","emergency vehicles"}{"police cars","emergency vehicles"}{"fire apparatus","emergency vehicles"}{"tankers","merchant ships"}{"ambulance","emergency vehicles"}{"dump trucks","construction equipment"}{"battleships","warships"}{"graders","construction equipment"}{"ambulances","fire trucks"}{"bombers","aircrafts"}{"police cars","ambulances"}{"buggies","farm equipment"}{"farm machinery","farm equipment"}{"forklifts","construction equipment"}{"golf carts","buggies"}{"phevs","evs"}{"snowmobiles","terrain vehicles"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (is OR are) * arg2</queryString><editDate>2010-06-29</editDate><author>Burr</author><curator /><description>Type-specific generalization of vehicles.</description><freebaseID /><comment /></Relation><Relation id="111"><relationName>professionIsTypeOfProfession</relationName><humanFormat>arg1 is a profession that is a {kind of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>specializationOf</generalizations><domain>profession</domain><range>profession</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"portfolio managers","craftsmen"}{"sales managers","government employees"}{"special educators","stylists"}{"copywriters","classroom teachers"}</knownNegatives><inverse>professionTypeHasProfession</inverse><seedInstances>{"portfolio managers","investment professionals"}{"goldsmiths","craftsmen"}{"oncologists","cancer specialists"}{"illustrators","creative professionals"}{"pathologists","medical experts"}{"superintendents","school leaders"}{"cabinetmakers","craftsmen"}{"goldsmiths","artisans"}{"dispatchers","support personnel"}{"glassblowers","artisans"}{"pathologists","laboratory professionals"}{"shoemakers","artisans"}{"special education teachers","school personnel"} {"silversmiths","craftsmen"}{"cabinetmakers","artisans"}{"jewelry designers","artisans"}{"silversmiths","artisans"}{"school psychologist","school personnel"}{"sales managers","sales professionals"}{"civil servants","government employees"}{"artisans","craftsmen"}{"music teachers","music professionals"}{"copywriters","creative professionals"}{"music teachers","classroom teachers"} {"classroom teachers","teaching artists"}{"school psychologists","school personnel"} {"special educators","paraprofessionals"}{"makeup artists","stylists"}{"shoemakers","craftsmen"}{"fashion designers","stylists"}{"artisans","craftspeople"}{"fabricators","craftsmen"}{"watchmakers","artisans"}{"archivists","conservators"}{"watchmakers","craftsmen"}{"illustrators","graphic artists"}{"insurance professionals","industry experts"}{"school principals","district administrators"}{"district administrators","school personnel"}{"craftsmen","tradesmen"}{"decorators","craftsmen"} {"website designers","web developers"}{"state employees","government employees"}{&#8220;artisans&#8221;,"craftspeople"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (is OR are) * arg2</queryString><editDate>2010-06-30</editDate><author>Burr</author><curator /><description>Type-specific generalization of professions.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/people/profession", "/people/profession/specialization of": [{ "name": null, "/common/topic/alias": [], "type": "/people/profession" }] }]</freebaseID><comment /></Relation><Relation id="112"><relationName>chemicalIsTypeOfChemical</relationName><humanFormat>arg1 is a chemical that is a {kind of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>specializationOf</generalizations><domain>chemical</domain><range>chemical</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>chemicalTypeHasChemical</inverse><seedInstances>{"greenhouse gases","pollutants"}{"nitrogen oxides","pollutants"}{"dioxins","pollutants"}{"greenhouse gas emissions","pollutants"}{"formaldehyde","pollutants"}{"dioxin","pollutants"}{"benzene","pollutants"}{"greenhouse gases","air pollutants"}{"arsenic","pollutants"}{"sulfur dioxide","air pollutants"}{"particulate matter","pollutants"}{"particulates","air pollutants"}{"water vapor","greenhouse gases"}{"chlorine","pollutants"}{"carbondioxide","greenhouse gases"}{"nitrogen dioxide","pollutants"}{"particulate matter","air pollutants"}{"chlorine","oxidizers"}{"greenhouse gasses","pollutants"}{"particulates","pollutants"}{"benzene","air pollutants"}{"norepinephrine","catecholamines"}{"greenhouse gas emissions","air pollutants"}{"serotonin","monoamines"}{"nitrogen oxide","pollutants"}{"adrenaline","catecholamines"}{"histamine","amines"}{"dioxins","organochlorines"}{"dopamine","catecholamines"}{"halocarbons","chlorine"}{"histamine","biogenic amines"}{"cadmium","pollutants"}{"dopamine","monoamines"}{"formaldehyde","air pollutants"}{"norepinephrine","monoamines"}{"water vapor","trace gases"}{"sulfur oxides","pollutants"}{"sulfur dioxide","pollutants"}{"cyanide","pollutants"}{"dioxin","organochlorines"}{"serotonin","neurotransmitter"}{"dopamine","neurotransmitter"}{"serotonin","amines"}{"greenhouse gas","pollutants"}{"sulfates","pollutants"}{"chlorofluorocarbons","pollutants"}{"serotonin","monoamine neurotransmitters"}{"epinephrine","catecholamines"}{"chlorofluorocarbons","greenhouse gases"}{"trichloroethylene","pollutants"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * such as * arg1</queryString><editDate>2010-06-31</editDate><author>Burr</author><curator /><description>"indicates that one chemical is special case of another chemical"</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="113"><relationName>streetInCity</relationName><humanFormat>arg1 is a street {in the city} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>locationLocatedWithinLocation</generalizations><domain>street</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>cityHasStreet</inverse><seedInstances>{"washington road","augusta"}{"kalakaua avenue","honolulu"}{"st . charles avenue","new orleans"}{"princes street","edinburgh"}{"peachtree street","atlanta"}{"west broadway","vancouver"}{"temple street","new haven"}{"middlesex turnpike","bedford"}{"princess street","edinburgh"}{"king street","charleston"}{"west street","annapolis"}{"high street","edinburgh"}{"piedmont road","atlanta"}{"auburn avenue","atlanta"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-06-32</editDate><author>Burr</author><curator /><description>"this street is at least partly inside this city"</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="114"><relationName>academicProgramAtUniversity</relationName><humanFormat>arg1 is an academic program {at the university} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>academicField</domain><range>university</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan academicFieldConcernsSubject</mutexExceptions><knownNegatives /><inverse>universityHasAcademicProgram</inverse><seedInstances>{"environmental education","antioch new england graduate school"}{"graphic design","art center college of design"}{"physical education","brock university"}{"exercise physiology","st . scholastica"}{"fisheries","uaf"}{"organizational management","ashford university"}{"special education","unc"}{"physical therapy","chatham university"}{"international business","columbia business school"}{"special education","grand canyon university"}{"physical therapy","long island university"}{"graphic design","california college"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * program * arg2</queryString><editDate>2010-06-32</editDate><author>Burr</author><curator /><description>"this academic program is offered by this university"</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/education/university", "/education/university/departments": [{ "/education/department/field": [{ "name": null, "/common/topic/alias": [], "type": "/education/field of study" }] }] }]</freebaseID><comment /></Relation><Relation id="115"><relationName>professionUsesTool</relationName><humanFormat>arg2 is a tool {used in} the profession arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>profession</domain><range>tool</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives>{"project managers","scalpels"}{"therapists","power drills"}{"surgeons","web browsers"}{"hair stylists","project management software"}</knownNegatives><inverse>toolUsedByProfession</inverse><seedInstances>{"surgeons","scalpels"}{"project managers","project management software"}{"instructors","discussion board"}{"instructors","rubrics"}{"home buyers","calculator"}{"web designers","web browser"}{"therapists","checklists"}{"instructors","discussion boards"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * used by * arg1</queryString><editDate>2010-06-32</editDate><author>Burr</author><curator /><description>"those who practice this profession use this tool"</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="116"><relationName>bodypartContainsBodypart</relationName><humanFormat>arg2 is a {subpart} of the body within arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>superpartOf</generalizations><domain>bodypart</domain><range>bodypart</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>bodypartWithinBodypart</inverse><seedInstances>{"temporal lobe","auditory cortex"}{"temporal lobe","hippocampus"}{"medial temporal lobe","hippocampus"}{"occipital lobe","visual cortex"}{"parietal lobe","postcentral gyrus"}{"hippocampus","dentate gyrus"}{"ear canal","ear drum"}{"nephron","glomerulus"}{"external ear","auricle"}{"left atrium","mitral valve"}{"frontal lobe","prefrontal cortex"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-06-32</editDate><author>Burr</author><curator /><description>"indicates that one body part is contained inside another"</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="117"><relationName>autoMakerProducesModel</relationName><humanFormat>arg1 {makes} the automobile arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>producesProduct</generalizations><domain>automobileMaker</domain><range>automobileModel</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"Volkswagen","Corolla"}{"Toyota","Escort"}{"Ford","Accord"}{"Honda","Caprice"}{"Chevrolet","Passat"}</knownNegatives><inverse>autoModelProducedByMaker</inverse><seedInstances>{"Toyota","Corolla"}{"Toyota","Camry"}{"Ford","Escort"}{"Ford","F150"}{"Honda","Accord"}{"Honda","Civic"}{"Chevrolet","Caprice"}{"Chevrolet","Nova"}{"Honda","CR-V"}{"Volkswagen","Passat"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (produces OR produce OR produced OR producing) * arg2</queryString><editDate>2010-06-32</editDate><author>Burr</author><curator /><description>"this automobile manufacturer produces this particular automobile make or model"</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/automotive/company", "/automotive/company/make s": [{ "/automotive/make/model s": [{ "name": null, "/common/topic/alias": [], "type": "/automotive/model" }] }] }]</freebaseID><comment /></Relation><Relation id="118"><relationName>organizationCreatedAtDate</relationName><humanFormat>arg1 is an organization {created} at the date arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>atDate</generalizations><domain>organization</domain><range>date</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>organizationDissolvedAtDate</mutexExceptions><knownNegatives /><inverse>dateOfOrganizationCreation</inverse><seedInstances>{&#8220;Abu Sayyaf&#8221;, &#8220;the early 1990s&#8221;} {&#8220;National Rifle Association&#8221;, &#8220;1871&#8221;} {&#8220;Free Thinking Film Society&#8221;, &#8220;2007&#8221;} {&#8220;Creative Coalition&#8221;, &#8220;1989&#8221;} {&#8220;Century Regional Detention Center&#8221;, &#8220;1994&#8221;} {&#8220;New York Mets&#8221;, &#8220;1962&#8221;} {&#8220;FEMA&#8221;, &#8220;1979&#8221;} {&#8220;UNAIDS&#8221;, &#8220;1995&#8221;} {&#8220;International Steel Group&#8221;, &#8220;2002&#8221;} {&#8220;Peter D. Hart Research Associates&#8221;, &#8220;1971&#8221;} {&#8220;NFC South&#8221;, &#8220;2002&#8221;} {&#8220;Red Sox&#8221;, &#8220;1901&#8221;} {&#8220;Zagat&#8221;, &#8220;1979&#8221;} {&#8220;Tianjin Lions&#8221;, &#8220;2002&#8221;} {&#8220;Scorpions&#8221;, &#8220;1999&#8221;} {&#8220;Safe Passage&#8221;, &#8220;1999&#8221;} {&#8220;SAC&#8221;, &#8220;1951&#8221;} {&#8220;Moro National Liberation Front&#8221;, &#8220;1972&#8221;} {&#8220;International Monetary Fund&#8221;, &#8220;1944&#8221;} {&#8220;Focus on the Family&#8221;, &#8220;1977&#8221;} {&#8220;China National Aviation Corporation&#8221;, &#8220;2002&#8221;} {&#8220;Barnes Foundation&#8221;, &#8220;1922&#8221;} {&#8220;Asian Development Bank&#8221;, &#8220;1966&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (created OR founded) * arg2</queryString><editDate /><author>Bryan</author><curator /><description>The date on which a given organization was founded</description><freebaseID /><comment>TAC KBP 2012</comment></Relation><Relation id="119"><relationName>organizationDissolvedAtDate</relationName><humanFormat>arg1 is an organization {dissolved} at the date arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>atDate</generalizations><domain>organization</domain><range>date</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>organizationCreatedAtDate</mutexExceptions><knownNegatives /><inverse>dateOfOrganzationDissolution</inverse><seedInstances>{&#8220;Compaq&#8221;, &#8220;2002&#8221;} {&#8220;League of Nations&#8221;, &#8220;1946&#8221;} {&#8220;Daily News&#8221;, &#8220;2003&#8221;} {&#8220;American Basketball Association&#8221;, &#8220;1976&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * dissolved * arg2</queryString><editDate /><author>Bryan</author><curator /><description>The date on which a given organization was dissolved</description><freebaseID /><comment>TAC KBP 2012</comment></Relation><Relation id="120"><relationName>personBirthDate</relationName><humanFormat>arg1 is a person {born on} the date arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>atDate</generalizations><domain>person</domain><range>dateLiteral</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"Mark Twain","1967"} {"Christ","1957"} {"Willam Howard Taft","1909"} {"Levi Strauss","1853"}{"Brad Pitt","2008"}{"Condi Rice","2008"} {"Aaron Burr","1807"} {"FDR","1945"}{"Mahatma Gandhi","1947"}{"Jonas Salk","1995"} {&#8220;Hank Williams&#8221;, &#8220;September 17&#8221;} {&#8220;Augustus II&#8221;, &#8220;1727&#8221;}</knownNegatives><inverse>dateOfPersonBirth</inverse><seedInstances>{"McCain","1936"}{"Mother Teresa","1910"} {"Obama","1961"} {"Princess Margaret","1930"} {"Queen Victoria","1819"}{"Johannes Brahms","1833"} {"Charles Darwin","1809"}{"Adolf Hitler","1889"}{"Rembrandt","1606"}{"John Quincy Adams","1825"} {&#8220;Emile Lahoud&#8221;, &#8220;1936&#8221;} {&#8220;Corey Bohan&#8221;, &#8220;1982&#8221;} {&#8220;Amy MacDonald&#8221;, &#8220;1987&#8221;} {&#8220;Barry Goldwater&#8221;, &#8220;1909&#8221;} {&#8220;Ospel&#8221;, &#8220;1950&#8221;} {&#8220;Hank Williams&#8221; , &#8220;September 17&#8221;} {&#8220;Augustus II&#8221;, &#8220;May 12&#8221;} {&#8220;William Verity&#8221;, &#8220;1917&#8221;} {&#8220;Vernon Bellecourt&#8221;, &#8220;1931&#8221;} {&#8220;Theodor Kollek&#8221;, &#8220;1911&#8221;} {&#8220;Robert McNair&#8221;, &#8220;1923&#8221;} {&#8220;Richmond Flowers&#8221;, &#8220;1918&#8221;} {&#8220;Randall Forsberg&#8221;, &#8220;1943&#8221;} {&#8220;Pamela Ahearn&#8221;, &#8220;1954&#8221;} {&#8220;Oscar Peterson&#8221;, &#8220;1925&#8221;} {&#8220;Michael Deaver&#8221;, &#8220;1938&#8221;} {&#8220;Lorraine Rothman&#8221;, &#8220;1932&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * born * arg2</queryString><editDate>2010-07-05</editDate><author>Bryan</author><curator /><description>"the date on which this person was born"</description><freebaseID>/people/person/date of birth</freebaseID><comment>Added for DARPA NFL &amp; IC ontologies.  Seed with better dates when all-pairs gets better dates.</comment></Relation><Relation id="121"><relationName>personDeathDate</relationName><humanFormat>arg1 is a person who {died on} the date arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>atDate</generalizations><domain>person</domain><range>dateLiteral</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"Sarah Palin","2008"}{"Michael Schumacher","2006"}{"Condi Rice","2008"}{"Lincoln","1962"} {"William Howard Taft","1909"} {"John Quincy Adams","1825"}{"Rembrandt","1606"}{"Adolf Hitler","1889"}{"Charles Darwin","1809"}{"Johannes Brahms","1833"} </knownNegatives><inverse>dateOfPersonDeath</inverse><seedInstances>{"FDR","1945"}{"Franklin D . Roosevelt","1945"} {"Mahatma Gandhi","1947"}{"John Bonham","1980"}{"Kim Il Sung","1994"}{"Emperor Meiji","1912"}{"Jonas Salk","1995"}{"Pope John Paul II","April 2005"} {&#8220;Hank Williams&#8221;, &#8220;1953&#8221;} {&#8220;Ahmed Shah Massoud&#8221;, &#8220;September 2001&#8221;} {&#8220;Barry Goldwater&#8221;, &#8220;1998&#8221;} {&#8220;Fraser Robinson&#8221;, &#8220;1990&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * (dies OR die OR died OR dying) * arg2</queryString><editDate>2010-07-05</editDate><author>Bryan</author><curator /><description>"the date on which this person died"</description><freebaseID>/person/deceased person/date of death</freebaseID><comment>Added for DARPA NFL &amp; IC ontologies.  Seed with better dates when all-pairs gets better dates.</comment></Relation><Relation id="122"><relationName>sportsGameDate</relationName><humanFormat>arg1 is a sports game that {took place on} the date arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>eventDate</generalizations><domain>sportsGame</domain><range>dateLiteral</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"1967 World Series", "2006"} {"2002 World Cup","2008"}{"Super Bowl XLIII","1983"}{"2006 FA Cup","2008"}</knownNegatives><inverse>dateOfSportsGame</inverse><seedInstances>{"Paralympic Games","2010"} {"World Cup","2008"}{"All-Star Game","2006"}{"Hollywood Bowl","2005"}{"Tournament","2002"}{"first playoff","2002"}{"Super Bowl XXXVII","2002"}{"Super Bowl XLIII","February 1,2009"} {"Super Bowl XVII","January 30,1983"}{"2006 World Series","October 2006"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR on) * arg2</queryString><editDate>2010-07-05</editDate><author>Bryan</author><curator /><description>"the date on which this game occurred"</description><freebaseID>none</freebaseID><comment>Added for DARPA NFL &amp; IC ontologies</comment></Relation><Relation id="123"><relationName>personHasAge</relationName><humanFormat>arg1 is a person who {has age} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>nonNegInteger</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives>{"Mozart","14"} {"Buddha","18"} {"Bono","2"} {"President Bush","25"} {"George Washington", "26"} {"Barack Obama","27"}{"Hillary Clinton","28"} {"George Lucas","10"} {"Jesus Christ", "40"} {"Paris Hilton","50"} {"Roger Federer","10"} {"Michael Jackson","80"} {"Snoop Dog", "50"} {"Sting","50"}</knownNegatives><inverse>ageOfPerson</inverse><seedInstances>{"John McCain", "72"} {"Kobe Bryant", "30"} {"Barack Obama", "47"} {"Arizona senator","72"} {"Federer","27"}{"Farve","39"}{"Benedict","81"}{"President","48"}{"Chelsea","28"}{"Nelson Mandela","90"}{"Abreu","35"}{"Moyer","46"} {&#8220;Megawati Sukarnoputri&#8221;, &#8220;49&#8221;} {&#8220;Michael Jackson&#8221;, &#8220;50&#8221;} {&#8220;Tom Lehman&#8221;, &#8220;fifty&#8221;} {&#8220;Hiram Monserrate&#8221;, &#8220;41&#8221;} {&#8220;Jared Cotter&#8221;, &#8220;25&#8221;} {&#8220;Diane Olson&#8221;, &#8220;54&#8221;} {&#8220;Emile Lahoud&#8221;, &#8220;71&#8221;} {&#8220;Alli Sims&#8221;, &#8220;26&#8221;} {&#8220;Annise Parker&#8221;, &#8220;52&#8221;} {&#8220;Clive Davis&#8221;, &#8220;76&#8221;} {&#8220;Arsene Wenger&#8221;, &#8220;60&#8221;} {&#8220;Amy MacDonald&#8221;, &#8220;21&#8221;} {&#8220;Danny Moder&#8221;, &#8220;38&#8221;} {&#8220;Kurt Westergaard&#8221;, &#8220;75&#8221;} {&#8220;Levi Johnston&#8221;, &#8220;18&#8221;} {&#8220;Holly Madison&#8221;, &#8220;28&#8221;} {&#8220;Linda Hogan&#8221;, &#8220;46&#8221;} {&#8220;David Coleman Headley&#8221;, &#8220;49&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (is OR are OR was OR were) * arg2</queryString><editDate>2010-07-13</editDate><author>Bryan</author><curator /><description>"the age of this person"</description><freebaseID>none</freebaseID><comment>Added for DARPA NFL &amp; IC ontologies.  The value of this relation will be different next year, so should be deleted from the ontology?</comment></Relation><Relation id="124"><relationName>personDiedAtAge</relationName><humanFormat>arg1 is a person who {died at the age of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>nonNegInteger</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives>{"Mozart","14"} {"Buddha","18"} {"Bono","2"} {"President Bush","25"} {"George Washington", "26"} {"Barack Obama","27"}{"Hillary Clinton","28"} {"George Lucas","10"} {"Jesus Christ", "40"} {"Paris Hilton","50"} {"Roger Federer","10"} {"Michael Jackson","80"} {"Snoop Dog", "50"} {"Sting","50"}</knownNegatives><inverse>deathAgeOfPerson</inverse><seedInstances>{"Anna Nicole Smith","39"}{"Mary Shelley","19"}{"Michael Crichton","66"}{"Patrick McGoohan","80"}{"Yves Saint Laurent","71"}{"Gerald Ford","93"}{"Bernie Mac","50"}{"Richard Pryor","65"}{"George Carlin","71"}{"Heath Ledger","28"}{"Tim Russert","58"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (dies OR die OR died OR dying) * arg2</queryString><editDate>2010-07-13</editDate><author>Bryan</author><curator /><description>"the age at which this person died"</description><freebaseID>none</freebaseID><comment>Added for pre-emptive bounding of personHasAge</comment></Relation><Relation id="125"><relationName>sportsGameScore</relationName><humanFormat>the {final score of} the sports game arg1 was arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>sportsGame</domain><range>gameScore</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives>{"conference","16-19"} {"halftime","17-15"} {"conference","2005-2006"} {"Conference","21-23"} {"half","24-7"} {"event","27-30"} {"first half","28-16"}</knownNegatives><inverse>scoreOfSportsGame</inverse><seedInstances>{"season opener", "0-1"} {"finals","0-2"} {"match" "15-11"} {"Athletic Conference", "2-4"} {"championship","8-6"} {"final game","0-15"} {"Eastern Conference", "3-2"} {"Wembley", "3-2"} {"first game", "4-2"} {"semi-finals","6-1"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * final score * arg2</queryString><editDate>2010-07-05</editDate><author>Bryan</author><curator /><description>"the score of this game"</description><freebaseID>/american football/football game score</freebaseID><comment>Added for DARPA NFL &amp; IC ontologies.  I couldn't find better seeds, but these should produce on-target extractionPatterns for micro-reading.</comment></Relation><Relation id="126"><relationName>latitudeLongitude</relationName><humanFormat>the {lattitude and longitude} of arg1 is arg2</humanFormat><populate>0</populate><visible>0</visible><generalizations>relatedTo</generalizations><domain>everyPromotedThing</domain><range>llCoordinate</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>latitudeLongitudeOf</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-09-29</editDate><author>Bryan</author><curator /><description>"the latitude and longitude of this location, or the latitude and longitude typically associated with this thing"</description><freebaseID>/location/location/geolocation</freebaseID><comment>Populated only by the LatLong tinker toy.  We might change the format etc. in the future.</comment></Relation><Relation id="127"><relationName>organizationAlsoKnownAs</relationName><humanFormat>arg1 is an organization {also known as} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>synonymFor</generalizations><domain>organization</domain><range>organization</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives /><inverse>organizationAlsoKnownAs</inverse><seedInstances>{&#8220;Quds Force&#8221;, &#8220;Quds Army&#8221;} {&#8220;Quds Force&#8221;, &#8220;IRCG-QF&#8221;} {&#8220;Quds Force&#8221;, &#8220;al-Quds Brigade&#8221;} {&#8220;Cingular&#8221;, &#8220;Cingular Wireless LLC&#8221;} {&#8220;Cingular&#8221;, &#8220;AT&amp;T Mobility LLC&#8221;} {&#8220;New York Mets&#8221;, &#8220;Mets&#8221;} {&#8220;New York Mets&#8221;, &#8220;Amazin' Mets&#8221;} {&#8220;Harkat-ul-Mujahideen&#8221;, &#8220;Movement of Holy Warriors&#8221;} {&#8220;Medecins Sans Frontieres&#8221;, &#8220;Doctors Without Borders&#8221;} {&#8220;Zagat&#8221;, &#8220;Zagat Survey&#8221;} {&#8220;Walmart&#8221;, &#8220;Wal-Mart&#8221;} {&#8220;Tyco Healthcare&#8221;, &#8220;Covidien&#8221;} {&#8220;Safe Passage&#8221;, &#8220;Camino Seguro&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * known as * arg1</queryString><editDate>2013-02-15</editDate><author>Bryan</author><curator /><description>&#8220;this is another name for this organization&#8221;</description><freebaseID>/common/topic/alias</freebaseID><comment>TAC KBP 2012</comment></Relation><Relation id="128"><relationName>organizationAcronymHasName</relationName><humanFormat>arg2 is an organization {known by the acronym} arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>organizationAlsoKnownAs</generalizations><domain>organization</domain><range>organization</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>companyAlsoKnownAs teamAlsoKnownAs</mutexExceptions><knownNegatives>{"IBM","Google"}{"HP","Epson"}{"CMU","MIT"}{"Google","IBM"}{"Epson","HP"}{"MIT","CMU"}{"Stanford","Harvard"}{"Stanford","MIT"}</knownNegatives><inverse>organizationNameHasAcronym</inverse><seedInstances>{"FDA","Federal Drug Administration"}{"IRS","Internal Revenue Service"}{"IBM", "International Business Machines"}{"GM","General Motors"}{"NBC","National Broadcasting Corporation"}{"HP","Hewlett Packard"}{"GE","General Electric"}{"NFL","National Football League"}{"UCLA","University of California Los Angeles"}{"CMU","Carnegie Mellon University"}{"BP","British Petroleum"}{"DARPA","Defense Advanced Research Projects Agency"}{"FAA","Federal Aviation Administration"}{"MIT","Massachusetts Institute of Technology"} {&#8220;CIC&#8221;, &#8220;Canadian Islamic Congress&#8221;} {&#8220;CRDF&#8221;, &#8220;Century Regional Detention Center&#8221;} {&#8220;WMO&#8221;, &#8220;World Meteorological Organization&#8221;} {&#8220;CJC&#8221;, &#8220;Canadian Jewish Congress&#8221;} {&#8220;FEMA&#8221;, &#8220;Federal Emergency Management Agency&#8221;} {&#8220;FMCSA&#8221;, &#8220;Federal Motor Carrier Safety Administration&#8221;} {&#8220;MSF&#8221;, &#8220;Medecins Sans Frontieres&#8221;} {&#8220;TACC&#8221;, &#8220;Technical Assistance and Cooperation Committee&#8221;} {&#8220;SLDN&#8221;, &#8220;Servicemembers Legal Defense Network&#8221;} {&#8220;UNC&#8221;, &#8220;United National Congress&#8221;}</seedInstances><seedExtractionPatterns>"arg1 is an acronym for arg2", "arg1 is short for arg2"</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * known as * arg1</queryString><editDate>2010-07-07</editDate><author>Tom Mitchell</author><curator /><description>"this short name or acronym refers to this organization"</description><freebaseID>/common/topic/alias</freebaseID><comment>Clearly in need of an acronym category.  In order to play nice with requiredForDomain and requiredForRange, I suppose we'd need specifically an organizationAcronym subcategory to use here.</comment></Relation><Relation id="129"><relationName>teamAlsoKnownAs</relationName><humanFormat>arg1 is a sports team {also known as} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>organizationAlsoKnownAs</generalizations><domain>sportsTeam</domain><range>sportsTeam</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>organizationAcronymHasName</mutexExceptions><knownNegatives>{"Yankees","Red Sox"}{"Mets","Yankees"}{"Giants","Jets"}{"USC","UCLA"}</knownNegatives><inverse>teamAlsoKnownAs</inverse><seedInstances>{"New York Mets","Mets"}{"New York Yankees","Yankees"}{"New York Giants","Giants"}{"Steelers","Pittsburgh Steelers"}{"Cubs","Cubbies"}{"Cubs","Chicago Cubs"}{"LA Lakers","Lakers"}{"Celtics","Boston Celtics"}{"Bruins","UCLA Bruins"}{"Tarheels","UNC Tarheels"}{"Blue Devils","Duke Blue Devils"}{"Green Bay Packers","Packers"}{"Chicago Bulls","Bulls"} {&#8220;Jacksonville Jaguars&#8221;, &#8220;Jags&#8221;} {&#8220;Red Sox&#8221;, &#8220;Olde Towne Team&#8221;}</seedInstances><seedExtractionPatterns>"arg2 is short for arg1", "arg1 is short for arg2"</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * known as * arg2</queryString><editDate>2010-07-07</editDate><author>Tom Mitchell</author><curator /><description>"this is another name for this team"</description><freebaseID>/common/topic/alias</freebaseID><comment>synonyms for team name</comment></Relation><Relation id="130"><relationName>companyAlsoKnownAs</relationName><humanFormat>arg1 is a company {also known as} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>organizationAlsoKnownAs</generalizations><domain>company</domain><range>company</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>organizationAcronymHasName</mutexExceptions><knownNegatives>{"General Motors", "Ford"}{"Adobe", "Apple"}{"Dell", "Cisco"}{"United Airlines", "American Airlines"}{"American Airlines", "Southwest Airlines"}</knownNegatives><inverse>companyAlsoKnownAs</inverse><seedInstances>{"General Motors","GM"}{"Adobe Systems", "Adobe"}{"Apple","Apple Computer"}{"Dell", "Dell Computer"}{"Cisco", "Cisco Systems"}{"Southwest Airlines","Southwest"}{"Biogen","Biogen IDEC"}{"Dow Chemical Company","Dow Chemical"}{"United", "United Airlines"}{"Shell", "Shell Oil"} {&#8220;AQR Capital Management&#8221;, &#8220;AQR&#8221;} {&#8220;BNC Mortgage&#8221;, &#8220;BNC&#8221;} {&#8220;Defensor Sporting&#8221;, &#8220;Defensor&#8221;} {&#8220;Denso&#8221;, &#8220;NipponDenso&#8221;} {&#8220;DirecTV&#8221;, &#8220;DirecTV Group&#8221;} {&#8220;EnergySolutions&#8221;, &#8220;Envirocare of Utah&#8221;} {&#8220;FMR Corp.&#8221;, &#8220;Fidelity Management and Resarch Co.&#8221;} {&#8220;Fyffes PLC&#8221;, &#8220;Fyffes&#8221;} {&#8220;Highland Capital Partners&#8221;, &#8220;Highland&#8221;} {&#8220;Hindalco Industries&#8221;, &#8220;Hindalco&#8221;} {&#8220;Hong Kong Disneyland&#8221;, &#8220;HK Disneyland&#8221;} {&#8220;Konica Minolta&#8221;, &#8220;Konica Minolta Holding Inc&#8221;} {&#8220;MF GLobal&#8221;, &#8220;MF Global LLC&#8221;} {&#8220;Markit&#8221;, &#8220;Markit Group&#8221;} {&#8220;NEC Corp.&#8221;, &#8220;NEC&#8221;} {&#8220;Philadelphia Inquirer&#8221;, &#8220;The Inquirer&#8221;} {&#8220;Royal Caribbean&#8221;, &#8220;RCCL&#8221;} {&#8220;Tyco Healthcare&#8221;, &#8220;Covidien&#8221;} {&#8220;Zagat&#8221;, &#8220;Zagat Survey&#8221;} {&#8220;Philadelphia Inquirer&#8221;, &#8220;PhillyInquirer&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * known as * arg2</queryString><editDate>2010-08-18</editDate><author>Jayant</author><curator /><description /><freebaseID>/common/topic/alias</freebaseID><comment /></Relation><Relation id="131"><relationName>cityAlsoKnownAs</relationName><humanFormat>arg1 is a city {also known as} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>synonymFor</generalizations><domain>city</domain><range>city</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives>{"Pittsburgh", "Philadelphia"}{"St. Petersburg", "St. Louis"}{"Los Angeles", "New York City"}{"Fort Lauderdale", "Miami"}{"Paris","Madrid"}</knownNegatives><inverse>cityAlsoKnownAs</inverse><seedInstances>{"New York City","New York"}{"Los Angeles","L.A."}{"Philadelphia","Philly"}{"Rio de Janeiro","Rio"}{"Mumbai","Bombay"}{"Washington D.C.", "D.C."}{"Salt Lake", "Salt Lake City"}{"St. Petersburg", "St Petersburg"}{"St Louis","St. Louis"}{"Fort Lauderdale", "Ft. Lauderdale"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * known as * arg2</queryString><editDate>2010-08-18</editDate><author>Jayant</author><curator /><description>"this is another name for this city"</description><freebaseID>/common/topic/alias</freebaseID><comment /></Relation><Relation id="132"><relationName>personAlsoKnownAs</relationName><humanFormat>arg1 is a person {also known as} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>synonymFor</generalizations><domain>person</domain><range>person</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives /><inverse>personAlsoKnownAs</inverse><seedInstances>{&#8220;the Donald&#8221;, &#8220;Donald Trump&#8221;} {&#8220;Oprah&#8221;, &#8220;Oprah Winfrey&#8221;} {&#8220;Abdurrahman Wahid&#8221;, &#8220;Gus Dur&#8221;} {&#8220;Rudolf Wanderone&#8221;, &#8220;Minnesota Fats&#8221;} {&#8220;Bob Wilson&#8221;, &#8220;Bob Primrose Wilson&#8221;} {"Charlie Hustle", "Pete Rose"} {"Tricky Dick", "Richard Nixon"} {"Honest Abe", "Abraham Lincoln"} {"Doctor Death", "Jack Kevorkian"} {"Buffalo Bill", "William Cody"} {"Sarko", "Nicolas Sarkozy"} {"King of Pop", "Michael Jackson"} {&#8220;Hiram Monserrate&#8221;, &#8220;Hiram Slasher Monserrate&#8221;} {&#8220;Steve Schalchlin&#8221;, &#8220;Steve Shalchlin&#8221;} {&#8220;Steve Schalchlin&#8221;, &#8220;Steve Schlachlin&#8221;} {&#8220;Kimora Lee Simmons&#8221;, &#8220;Kimora Lee Perkins&#8221;} {&#8220;Linda Hogan&#8221;, &#8220;Linda Marie Bollea&#8221;} {&#8220;David Coleman Headley&#8221;, &#8220;Dawood Jilani&#8221;} {&#8220;David Coleman Headley&#8221;, &#8220;Daood Gilani&#8221;} {&#8220;Abdul Rahim Noor&#8221;, &#8220;Abdul Rahim&#8221;} {&#8220;Abu Zubaydah&#8221;, &#8220;Abu Zubeidah&#8221;} {&#8220;Al Hubbard&#8221;, &#8220;Allan Hubbard&#8221;} {&#8220;Alberto Gonzales&#8221;, &#8220;Al Gonzales&#8221;} {&#8220;Barry Goldwater&#8221;, &#8220;Mr . Conservative&#8221;} {&#8220;Barry Goldwater&#8221;, &#8220;Uncle Barry&#8221;} {&#8220;Bill McAllister&#8221;, &#8220;William McAllister&#8221;} {&#8220;Christopher Bentley&#8221;, &#8220;Christ Bentley&#8221;} {&#8220;Hu Sheng&#8221;, &#8220;Hu Sheng-cheng&#8221;} {&#8220;Hussein Kamel&#8221;, &#8220;Hussein Kamel Hassan&#8221;} {&#8220;James B . Stewart&#8221;, &#8220;James Stewart&#8221;} {&#8220;Jerome Robbins&#8221;, &#8220;Jerome Wilson Rabinowitz&#8221;} {&#8220;John Kerry&#8221;, &#8220;John F . Kerry&#8221;} {&#8220;Juliette Binoche&#8221;, &#8220;La Binoche&#8221;} {&#8220;Yolanda King&#8221;, &#8220;Yoki&#8221;} {&#8220;William Verity&#8221;, &#8220;Calvin Verity Jr .&#8221;} {&#8220;Vernon Bellecourt&#8221;, &#8220;Daybreak&#8221;} {&#8220;Thomas Meskill&#8221;, &#8220;Tough Tommy&#8221;} {&#8220;Theodor Kollek&#8221;, &#8220;Teddy Kollek&#8221;} {&#8220;Robert McNair&#8221;, &#8220;Robert M . Flowers&#8221;} {&#8220;Remy Ma&#8221;, &#8220;Remy Martin&#8221;} {&#8220;Paavo Nurmi&#8221;, &#8220;Flying Finn&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * known as * arg2</queryString><editDate>2013-02-15</editDate><author>Bryan</author><curator /><description>&#8220;this is another name for this person&#8221;</description><freebaseID>/common/topic/alias</freebaseID><comment>TAC KBP 2012</comment></Relation><Relation id="133"><relationName>athleteAlsoKnownAs</relationName><humanFormat>arg1 is an athlete {also known as} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personAlsoKnownAs</generalizations><domain>athlete</domain><range>athlete</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives>{"Arnold Palmer","Tiger Woods"}{"David Ortiz", "Manny Ramirez"}{"Ken Griffey Jr.","Barry Bonds"}{"Ben Rothlisberger","Brett Favre"}{"Shaq","Kobe Bryant"}</knownNegatives><inverse>athleteAlsoKnownAs</inverse><seedInstances>{"Ken Griffey Jr", "Ken Griffey Jr."}{"O.J. Simpson", "O J Simpson"}{"Arnold Palmer", "legendary Arnold Palmer"}{"Cabell Robinson", "Cabell B. Robinson"}{"Catcher Ivan Rodriguez", "Ivan Rodriguez"}{"Herrera Craig Brazell", "Craig Brazell"}{"Luis G Rivera", "Luis Rivera"}{"Marion Barber III", "Marion Barber"}{"Mr. Travis Tobaben", "Travis Tobaben"}{"Shaq","Shaquille O&#8217;Neal"} {"Elroy Hirsch", "Crazy Legs"} {"Hands of Stone", "Roberto Duran"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * known as * arg2</queryString><editDate>2010-08-18</editDate><author>Jayant</author><curator /><description>"this is another name for this athlete"</description><freebaseID>/common/topic/alias</freebaseID><comment /></Relation><Relation id="134"><relationName>coachAlsoKnownAs</relationName><humanFormat>arg1 is a sports coach {also known as} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personAlsoKnownAs</generalizations><domain>coach</domain><range>coach</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives /><inverse>coachAlsoKnownAs</inverse><seedInstances>{"Bobby Johnson","Coach Johnson"}{"Mike Mularkey","Coach Mularkey"}{"Gary Kubiak","Head Coach Gary Kubiak"}{"Bill Parcells","Parcells"}{"Chris Thompson","Coach Thompson"}{"Coach Wooden","John Wooden"}{"Phil Garner","Manager Phil Garner"}{"Dusty Baker","Manager Dusty Baker"}{"Bobby Williams","Bob Williams"}{"Bob Stoops","Head Coach Bob Stoops"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * known as * arg2</queryString><editDate>2010-08-18</editDate><author>Jayant</author><curator /><description>"this is another name for this coach"</description><freebaseID>/common/topic/alias</freebaseID><comment /></Relation><Relation id="135"><relationName>stadiumAlsoKnownAs</relationName><humanFormat>arg1 is a stadium or event venue {also known as} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>synonymFor</generalizations><domain>stadiumOrEventVenue</domain><range>stadiumOrEventVenue</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives /><inverse>stadiumAlsoKnownAs</inverse><seedInstances>{"Navasota Rattler Stadium", "Rattler Stadium"}{"TD Waterhouse Center", "TD Waterhouse Centre"}{"Lake Charles Civic Center Arena", "Lake Charles Civic Center"}{"Meadowlands Complex","Meadowlands Sports Complex"}{"Mile High Stadium","Invesco Field at Mile High"}{"Classic Center Theatre","Classic Center"}{"Kimbrough Memorial Stadium","Kimbrough Stadium"}{"Shubert Theatre", "Shubert Theater"}{"Dodger Stadium", "Dodgers Stadium"}{"Brown Stadium", "Browns Stadium"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * known as * arg2</queryString><editDate>2010-08-18</editDate><author>Jayant</author><curator /><description>"this is another name for this stadium or event venue"</description><freebaseID>/common/topic/alias</freebaseID><comment /></Relation><Relation id="136"><relationName>countryAlsoKnownAs</relationName><humanFormat>arg1 is a country {also known as} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>synonymFor</generalizations><domain>country</domain><range>country</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives>{"United States", "United Kingdom"}{"North Korea", "South Korea"}{"France", "Germany"}{"United States of America", "Canada"}{"Mexico", "Spain"}</knownNegatives><inverse>countryAlsoKnownAs</inverse><seedInstances>{"Dominican Republic", "The Dominican Republic"}{"U.S.A.", "United States of America"}{"Somali Republic","Somalia"}{"Yugoslav Federation", "Yugoslavia"}{"Bosnia", "Bosnia Herzegovina"}{"S Korea", "South Korea"}{"The Philippines","Philippines"}{"Laos", "Laos People&#8217;s Democratic Republic"}{"Tadjikistan", "Tajikistan"}{"The United Kingdom","United Kingdom"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * known as * arg2</queryString><editDate>2010-08-18</editDate><author>Jayant</author><curator /><description>"this is another name for this country"</description><freebaseID>/common/topic/alias</freebaseID><comment /></Relation><Relation id="137"><relationName>atDate</relationName><humanFormat>arg1 {happened at} the date arg2</humanFormat><populate>1</populate><visible>0</visible><generalizations>relatedTo</generalizations><domain>everyPromotedThing</domain><range>date</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>isTallerThan isShorterThan academicFieldConcernsSubject</mutexExceptions><knownNegatives /><inverse>dateOf</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR on) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>assigns dates to things.</description><freebaseID>none</freebaseID><comment>Umbrella relation for assigning dates to things.</comment></Relation><Relation id="138"><relationName>atLocation</relationName><humanFormat>the {location of} arg1 is arg2</humanFormat><populate>1</populate><visible>0</visible><generalizations>relatedTo</generalizations><domain>everyPromotedThing</domain><range>location</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>mutualProxyFor subpartOf isTallerThan isShorterThan academicFieldConcernsSubject</mutexExceptions><knownNegatives /><inverse>locatedAt</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * located (in OR at OR of) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>assigns locations to things.</description><freebaseID>none</freebaseID><comment>Umbrella relation for assigning locations to things.</comment></Relation><Relation id="139"><relationName>agentInvolvedWithItem</relationName><humanFormat>arg1 is an agent that has {something to do with} the item arg2</humanFormat><populate>1</populate><visible>0</visible><generalizations>relatedTo</generalizations><domain>agent</domain><range>item</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>agentCreated agentControls agentOwns mutualProxyFor isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>itemInvolvedWithAgent</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * involved with * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>Most general agent-to-item relation.  As with agentInteractsWithAgent, we'll use this for states of being as well as actions, at least for now.</description><freebaseID>none</freebaseID><comment>Most general agent-to-item relation.  As with agentInteractsWithAgent, we'll use this for states of being as well as actions, at least for now.</comment></Relation><Relation id="140"><relationName>agentRelatedToLocation</relationName><humanFormat>arg1 is an agent that has {something to do with} the location arg2</humanFormat><populate>0</populate><visible>0</visible><generalizations>atLocation</generalizations><domain>agent</domain><range>location</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>locationRelatedToAgent</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>Most general agent-to-location relation</description><freebaseID>none</freebaseID><comment>Most general agent-to-location relation</comment></Relation><Relation id="141"><relationName>agentActsInLocation</relationName><humanFormat>arg1 is an agent that can be {found in or does something in} arg2</humanFormat><populate>1</populate><visible>0</visible><generalizations>agentRelatedToLocation</generalizations><domain>agent</domain><range>location</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>locationActedInByAgent</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>As with agentInteractsWithAgent, we take existing at a location to be an action at that location.</description><freebaseID>none</freebaseID><comment>As with agentInteractsWithAgent, we take existing at a location to be an action at that location, at least for now.</comment></Relation><Relation id="142"><relationName>agentCompetesWithAgent</relationName><humanFormat>arg1 {competes with} arg2</humanFormat><populate>1</populate><visible>0</visible><generalizations>agentInteractsWithAgent</generalizations><domain>agent</domain><range>agent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>0</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives /><inverse>agentCompetesWithAgent</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (competes OR compete OR competed OR competing) with * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>Non-cooperative interaction.  Primary alternative to agentCollaboratesWithAgent.</description><freebaseID>none</freebaseID><comment>Non-cooperative interaction.  Primary alternative to agentCollaboratesWithAgent.</comment></Relation><Relation id="143"><relationName>agentParticipatedInEvent</relationName><humanFormat>arg1 {participated in} the event arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>subpartOf</generalizations><domain>agent</domain><range>event</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>agentCausedEvent</mutexExceptions><knownNegatives /><inverse>eventHasParticipantAgent</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (participates OR participate OR participated OR participating) in * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>identifies participants in events</description><freebaseID>none</freebaseID><comment>Umbrella relation for identifying participants in events</comment></Relation><Relation id="144"><relationName>agentCausedEvent</relationName><humanFormat>arg1 {caused} the event arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentCreated</generalizations><domain>agent</domain><range>event</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>agentParticipatedInEvent</mutexExceptions><knownNegatives /><inverse>eventCausedByAgent</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (causes OR cause OR caused OR causing) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>Companion to agentParticipatedInEvent.  Note that one needn't participate in an event in order to be a causal factor.</description><freebaseID>none</freebaseID><comment>Companion to agentParticipatedInEvent.  Note that one needn't participate in an event in order to be a causal factor.</comment></Relation><Relation id="145"><relationName>agentRepresentsOrganization</relationName><humanFormat>arg1 {represents} the organization arg2</humanFormat><populate>0</populate><visible>0</visible><generalizations>agentBelongsToOrganization proxyFor</generalizations><domain>humanAgent</domain><range>organization</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>personBelongsToOrganization</mutexExceptions><knownNegatives /><inverse>organizationRepresentedByAgent</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (represents OR represent OR represented OR representing) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>Specialization of proxyFor for agent-to-organization relations. populate=false only because presumed to be uninteresting</description><freebaseID>none</freebaseID><comment>Specialization of proxyFor for agent-to-organization relations. populate=false only because presumed to be uninteresting</comment></Relation><Relation id="146"><relationName>agentOwns</relationName><humanFormat>arg1 {owns} arg2</humanFormat><populate>1</populate><visible>0</visible><generalizations>relatedTo</generalizations><domain>humanAgent</domain><range>everyPromotedThing</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>agentControls agentCreated agentInvolvedWithItem subpartOf agentContributedToCreativeWork isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>ownedByAgent</inverse><seedInstances>{"Barak Obama", "Wii"} {"Google", "blogging platform"}</seedInstances><seedExtractionPatterns>"arg1 owns a arg2"</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (owns OR own OR owned OR owning) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>"an agent owns any object, animal, product, company, etc."</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="147"><relationName>agentCreated</relationName><humanFormat>arg1 {created} arg2</humanFormat><populate>1</populate><visible>0</visible><generalizations>relatedTo</generalizations><domain>agent</domain><range>everyPromotedThing</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>agentControls agentOwns agentInvolvedWithItem subpartOf agentContributedToCreativeWork isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>createdByAgent</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (creates OR create OR created OR creating) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>general relation to identify creation and authorships</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="148"><relationName>agentCreatedOrganization</relationName><humanFormat>arg1 {created} the organziation arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentCreated</generalizations><domain>person</domain><range>organization</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>organizationCreatedByPerson</inverse><seedInstances>{&#8220;Abubakar Abdurajak Janjalani&#8221;, &#8220;Abu Sayyaf&#8221;}, {&#8220;Col. William C. Church&#8221;, &#8220;National Rifle Association&#8221;} {&#8220;Gen. George Wingate&#8221;, &#8220;National Rifle Association&#8221;} {&#8220;Ron Silver&#8221;, &#8220;Creative Coalition&#8221;} {&#8220;Alec Baldwin&#8221;, &#8220;Creative Coalition&#8221;} {&#8220;Susan Sarandon&#8221;, &#8220;Creative Coallition&#8221;} {&#8220;Kevin Jennings&#8221;, &#8220;GLSEN&#8221;} {&#8220;Ronny Naftaniel&#8221;, &#8220;CIDI&#8221;} {&#8220;Jimmy Carter&#8221;, &#8220;FEMA&#8221;} {&#8220;Wilbur L. Ross Jr.&#8221;, &#8220;International Steel Group&#8221;} {&#8220;Peter Hart&#8221;, &#8220;Peter D. Hart Research Associates&#8221;} {&#8220;Clifford Asness&#8221;, &#8220;AQR Capital Management&#8221;} {&#8220;Rev. Al Sharpton&#8221;, &#8220;National Action Network&#8221;} {&#8220;Tim Zagat&#8221;, &#8220;Zagat&#8221;} {&#8220;Nina Zagat&#8221;, &#8220;Zagat&#8221;} {&#8220;Cornelius Vander Starr&#8221;, &#8220;The Starr Foundation&#8221;} {&#8220;Percy Sonn&#8221;, &#8220;Scorpions&#8221;} {&#8220;Hanley Denning&#8221;, &#8220;Safe Passage&#8221;} {&#8220;Nur Misuari&#8221;, &#8220;Moro National Liberation Front&#8221;} {&#8220;James Dobson&#8221;, &#8220;Focus on the Family&#8221;} {&#8220;Alec Baldwin&#8221;, &#8220;Creative Coalition&#8221;} {&#8220;Ken Nelson&#8221;, &#8220;Country Music Association&#8221;} {&#8220;Peter Akinola&#8221;, &#8220;Convocation of Anglicans in North America&#8221;} {&#8220;Ted Arison&#8221;, &#8220;Carnival Cruise Lines&#8221;} {&#8220;Ray Daniels&#8221;, &#8220;Anthem Records&#8221;} {&#8220;Kurt Huang&#8221;, &#8220;BitPass&#8221;} {&#8220;Dries Buytaert&#8221;, &#8220;Drupal&#8221;} {&#8220;Silvio Scaglia&#8221;, &#8220;Fastweb&#8221;} {&#8220;Chung Ju-yung&#8221;, &#8220;Hyundai Motor Company&#8221;} {&#8220;Felix Dzerzhinsky&#8221;, &#8220;NKVD&#8221;} {&#8220;Jimmy Lai&#8221;, &#8220;Next Media&#8221;} {&#8220;Phil Knight&#8221;, &#8220;Nike&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (creates OR create OR created OR creating) * arg2</queryString><editDate>2013-02-15</editDate><author>Bryan</author><curator /><description>The person, organization, or geopoiltical entity that founded the given organization</description><freebaseID /><comment>Rename to personCreatedOrganization</comment></Relation><Relation id="149"><relationName>agentLeadsOrganization</relationName><humanFormat>arg1 {leads} the organization arg2</humanFormat><populate>0</populate><visible>0</visible><generalizations>agentRepresentsOrganization, agentControls</generalizations><domain>humanAgent</domain><range>organization</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>organizationLeadByAgent</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * lead by * arg1</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>General relation as with certain political positions, we have an agent that controls the thing that he works for</description><freebaseID>none</freebaseID><comment>As with certain political positions, we have an agent that controls the thing that he works for.  Should we say that he is both hierarchically above and below the organization?  I'm skirting that for now by not saying that he's hierarchically above it.  populate=false because personLeadsOrganization probably captures everything useful.</comment></Relation><Relation id="150"><relationName>locationExistsAtDate</relationName><humanFormat>arg1 {exists at date} arg2</humanFormat><populate>1</populate><visible>0</visible><generalizations>atDate</generalizations><domain>location</domain><range>date</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>dateAtWhichExistsLocation</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR on) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>Most general location-to-date relation.  Note that locations are not eternal.</description><freebaseID>none</freebaseID><comment>Most general location-to-date relation.  Note that locations are not eternal.</comment></Relation><Relation id="151"><relationName>locationLocatedWithinLocation</relationName><humanFormat>arg1 is a location {located within} arg2</humanFormat><populate>1</populate><visible>0</visible><generalizations>atLocation subpartOf</generalizations><domain>location</domain><range>location</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>cityLiesOnRiver</mutexExceptions><knownNegatives /><inverse>locationContainsLocation</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>a location that is a subpart of another location</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/location/location", "/location/location/containedby": [{ "name": null, "/common/topic/alias": [], "type": "/location/location" }] }]</freebaseID><comment /></Relation><Relation id="152"><relationName>itemInvolvedInEvent</relationName><humanFormat>arg1 is an item {involved with} the event arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>subpartOf</generalizations><domain>item</domain><range>event</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>eventInvolvedItem</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * (involves OR involve OR involved OR involving) * arg1</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>Umbrella relation for identifying items in events.</description><freebaseID>none</freebaseID><comment>Umbrella relation for identifying items in events.</comment></Relation><Relation id="153"><relationName>itemExistsAtDate</relationName><humanFormat>arg1 is an item that {existed at} date arg2</humanFormat><populate>1</populate><visible>0</visible><generalizations>atDate</generalizations><domain>item</domain><range>date</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>dateAtWhichExistsItem</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR on) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>a item exists in a determined time (or date)</description><freebaseID>none</freebaseID><comment>See what sticks...</comment></Relation><Relation id="154"><relationName>itemUsedWithItem</relationName><humanFormat>arg1 is an item that is {used with} arg2</humanFormat><populate>0</populate><visible>0</visible><generalizations>relatedTo</generalizations><domain>item</domain><range>item</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>mutualProxyFor subpartOf agriculturalProductContainChemical isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>itemUsedWithItem</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * used with * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>Most general item-to-item relation.</description><freebaseID>none</freebaseID><comment>Most general item-to-item relation.</comment></Relation><Relation id="155"><relationName>itemUsedAtLocation</relationName><humanFormat>arg1 is an item {used at} the location arg2</humanFormat><populate>1</populate><visible>0</visible><generalizations>atLocation</generalizations><domain>item</domain><range>location</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>itemExistsAtLocation</mutexExceptions><knownNegatives /><inverse>locationOfItemUse</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * used (in OR at OR by) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>an item used in a specific place</description><freebaseID>none</freebaseID><comment>Note that this is use rather than existence.  See itemExistsAtLocation</comment></Relation><Relation id="156"><relationName>itemExistsAtLocation</relationName><humanFormat>arg1 is an item {found at} the location arg2</humanFormat><populate>1</populate><visible>0</visible><generalizations>atLocation</generalizations><domain>item</domain><range>location</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>itemUsedAtLocation</mutexExceptions><knownNegatives /><inverse>locationOfItemExistence</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-05-25</editDate><author>Bryan</author><curator /><description>An item that is typically found in a particular place.  While most any item could concievably exist at most any place, the intent for this relation and its children is to capture &#8220;common knowledge&#8221; about what would be expected to be found where.</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="157"><relationName>eventCausedEvent</relationName><humanFormat>arg2 is an event {caused by} the event arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>event</domain><range>event</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>mutualProxyFor isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>eventCausedByEvent</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * caused by * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>Any events that is caused by another event</description><freebaseID>none</freebaseID><comment>Chains of events</comment></Relation><Relation id="158"><relationName>eventSubEventOf</relationName><humanFormat>arg1 is a {sub-event within} the event arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>subpartOf</generalizations><domain>event</domain><range>event</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>mutualProxyFor</mutexExceptions><knownNegatives /><inverse>eventSuperEventOf</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>event that is happened as a sub-event of another event</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/time/event", "/time/event/included in event": [{ "name": null, "/common/topic/alias": [], "type": "/time/event" }] }]</freebaseID><comment>Granularity of events</comment></Relation><Relation id="159"><relationName>eventAtLocation</relationName><humanFormat>arg1 is an event {at the location} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>atLocation</generalizations><domain>event</domain><range>location</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>locationOfEvent</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>the location that an event is happened at</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/time/event", "/time/event/locations": [{ "name": null, "/common/topic/alias": [], "type": "/location/location" }] }]</freebaseID><comment /></Relation><Relation id="160"><relationName>organizationActsInLocation</relationName><humanFormat>arg1 is an organization that {exists or does something} at the location arg2</humanFormat><populate>0</populate><visible>0</visible><generalizations>agentActsInLocation</generalizations><domain>organization</domain><range>location</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>locationActedInByOrganization</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>location of an organization or company</description><freebaseID>none</freebaseID><comment>As with agentActsInLocation, existence is taken to be an action.  populate=false beacuse agentActsInLocation is populate=true</comment></Relation><Relation id="161"><relationName>personBelongsToOrganization</relationName><humanFormat>arg1 is a person who {belongs to} the organization arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentBelongsToOrganization</generalizations><domain>person</domain><range>organization</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>agentRepresentsOrganization</mutexExceptions><knownNegatives /><inverse>organizationHasPerson</inverse><seedInstances>{"Gregory", "Warrington"} {"Mike Gregory", "Great Britain rugby"} {"Labine", "Los Angeles Dodgers"} {"Steve Fenwick", "Cardiff"} {"Manuel Galrinho Bento", "Portugal"} {"Burdette", "Milwaukee Braves"} {"Ian Porterfield", "Sunderland"} {"Sardesai", "India"} {"Ray Gravell", "Wales"}{"Mickey Mantle", "Hall of Fame"} {"New England Patriots defensive end", "New England Patriots"} {"Gregory", "Great Britain"} {"Bruce Hay", "Scotland"} {"Willie Mays", "Hall of Fame"} {"Ray Gravell", "Irish Lions"} {"Sir Stanley Matthews", "Stoke side"} {"Woodruff", "US Army"} {"Dougan", "the midlands club"} {"Alan Ball", "World Cup side"} {"Piquet", "Renault"}{"Heikki Kovalainen", "McLaren"}{"racer", "Sauber"} {"Heidfeld", "Sauber"} {"Kovalainen", "the French team"} {"Rosberg", "team"} {"Coulthard", "Williams"} {&#8220;Jenson Button", "BAR"} {"Barrichello", "Ferrari"} {"Michael Schumacher", "Ferrari"} {"Massa", "Sauber"}{"Heidfeld", "Prost"} {"Massa", "Ferrari"} {"Heikki Kovalainen", "Renault"}{"Sutil", "Midland"} {"Trulli", "Renault"} {"Coulthard", "McLaren"} {"Coulthard", "Red Bull"} {"Webber", "Minardi"}{"Raikkonen", "Sauber"} {"Raikkonen", "Ferrari"} {"Button", "Honda"} {"Fisichella", "Renault"} {"Chris Paul", "New Orleans Hornets"} {"Saitiev", "Russia's national squad"}{"Tishchenko", "Russia's Olympic team"} {"Pau Gasol", "Los Angeles Lakers"} {"Natalia Bessmertnova", "Bolshoi Theatre"} {"Christodoulos", "Greek Orthodox Church"} {"Alexy II", "Russian Orthodox Church"} {"Alexy II", "Russian Orthodox Church"} {"George Habash", "Popular Front for the Liberation of Palestine"} {"Natalia Bessmertnova", "Bolshoi Theatre"} {"Manuel Marulanda Velez", "FARC"} {"Christodoulos", "Greek Orthodox Church"} {"Viso", "Minardi"} {"Briscoe", "Penske Racing"} {"Milka Duno", "SAMAX Motorsports"} {"Justin Wilson", "RuSport team"} {"Perera", "Japanese company"} {"Sebastien Bourdais", "Newman/Haas/Lanigan Racing"} {"Helio Castroneves", "Penske Racing"} {"Oriol Servia", "KV Racing Technology"} {"Jay Howard", "Roth Racing"} {"Marty Roth", "Roth Racing"}{"Scott Dixon", "Target Chip Ganassi Racing"} {"Kanaan", "AGR"} {"Danica Patrick", "Andretti Green Racing"} {"Bruno Junqueira", "Target Chip Ganassi Racing"} {"Enrique Bernoldi", "Conquest Racing"} {"Frank Perera", "Conquest Racing"} {"Bernoldi", "Arrows"} {"Hideki Mutoh", "Andretti Green Racing"} {"Ernesto Jose Viso", "HVM Racing"} {"Bruno Junqueira", "Newman/Haas Racing"} {"Rice", "Rahal Letterman Racing"} {"Marco Andretti", "Andretti Green Racing"} {"Peter Fitzwilliam", "House of Lords"} {"Josh Bolton", "White House"} {"Martinez", "New York Mets"} {"Phyllis Curtin", "City Opera"} {"Sills", "New York City Opera"} {"Sills", "City Opera"} {"Sills", "New York City Opera"} {"Sills", "City Opera"} {"Israel Hernandez", "campaign staff"} {"Clay Johnson", "transition team"} {"Montgomery", "Presidential Inaugural Committee"} {"Brian Montgomery", "gubernatorial campaign"} {"Todd Beyer", "gubernatorial inaugural committee"} {"Lloyd F. MacMahon", "US District Court for the Southern District of New York"} {"Peter F. Vallone Sr.", "Democrat"} {"Mark Green", "Democrat"} {"Wen Jiabao", "China"} {"Wang Xiaofeng", "China's State Council"} {"Hu Jintao", "China"} {"Jones", "Atlanta Braves"} {"Guo", "China"} {"Bardem", "Spanish rugby team"} {"Argentine", "team"} {"GUO JINGJING", "Chinese national team"} {"Gingrich", "Republican Party"} {"Carl Levin", "Democrats"} {"Jesse Helms", "Republicans"} {"Pete V. Domenici", "Senate"} {"Pete V. Domenici", "Republican"} {"Slade Gorton", "Senate"} {"Pete V. Domenici", "Senate Energy and Natural Resources Committee"} {"Newt Gingrich", "House"} {"Richard H. Bryan", "Senate"} {"Joseph A. Jeffries", "320th Psychological Operations Company"} {"Jeffrey D. Kettle", "2nd Battalion, 7th Special Forces Group"} {"Jimmy Carabello", "10th Mountain Division"} {"Dick Tracewski", "Tigers"} {"Ozzie Virgil", "Tigers"} {"Ozzie Virgil", "the Tigers"} {"Armando Galarraga", "Tigers"} {"Marsans", "Yankees"} {"Rick Porcello", "Tigers"} {"Jackie Robinson", "the Brooklyn Dodgers"} {"Rafael Almeida", "Cincinnati"} {"Tony Fernandez", "Blue Jays"} {"Todd Jones", "Tigers"} {"Samuel", "the Phillies"} {"Armando Marsans", "Cincinnati"} {"Samuel", "Tigers"} {"Robinson", "Dodgers"} {"Pudge Rodriguez", "Yankees"} {"Tom DeLay", "House"} {"Sig Rogich", "Republican"} {"McCain", "Senate Indian Affairs Committee"} {"Ralph Reed", "Christian Coalition"} {"Richard F. Velky", "Schaghticokes"} {"G.G. Ware", "the bond and taxation committee of the state chamber of commerce"} {"Trong", "CPVCC"} {"Trong", "Central Theoretical Council"} {"Trong", "Hanoi Party Committee"} {"Trong", "Political Bureau"} {"Trong", "NA"} {"Nguyen Duc Kien", "Economics Affairs and Budget Commission"} {"Nguyen Van An", "NA"} {"Nguyen Phu Trong", "National Assembly (NA) of Vietnam"} {"Tong Thi Phong", "Commission for Mass Mobilization"} {"Baghdasaryan", "National Assembly"} {"Baghdasaryan", "Orinats Yerkir (Rule of Law) Party"} {"Mugabe", "ZANU-PF"} {"Makoni", "ZANU-PF Politburo"} {"Mugabe", "National Democratic Party"} {"He", "Southern African Development Community"} {"Mugabe", "ZANU"} {"Arthur Mutambara", "MDC"} {"Makoni", "ZANU-PF Politburo"} {"Joshua Nkomo", "Zimbabwe African Peoples Union"} {"Herbert Chitepo", "Zimbabwe African National Union"} {"Xiao Haopeng", "Chinese shooting squad"} {"Dichter", "Knesset"} {"Dichter", "Kadima"} {"Sheetrit", "Likud"} {"Sheetrit", "Knesset"} {"Sheetrit", "newly formed party"} {"Yang", "People's Liberation Army"} {&#8220;Aditya Parameswaran&#8221;, &#8220;UIUC&#8221;} {&#8220;Illah Nourbakhsh&#8221;, &#8220;CMU&#8221;} {&#8220;Joel Spencer&#8221;, &#8220;NYU&#8221;} {&#8220;Nadia Heninger&#8221;, &#8220;University of Pennsylvania&#8221;} {&#8220;Jeremiah Blocki&#8221;, &#8220;CMU&#8221;} {&#8220;Noah Snavely&#8221;, &#8220;Cornell&#8221;} {&#8220;Tuomas Sandholm&#8221;, &#8220;CMU&#8221;} {&#8220;Jessica Cantlon&#8221;, &#8220;University of Rochester&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (in OR at OR on OR of) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>organization or company that person is belonged to</description><freebaseID>none</freebaseID><comment>person-specific version of its parent</comment></Relation><Relation id="162"><relationName>personLeadsOrganization</relationName><humanFormat>arg1 is a person who {leads} the organization arg2</humanFormat><populate>1</populate><visible>0</visible><generalizations>agentLeadsOrganization</generalizations><domain>person</domain><range>organization</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>personGraduatedSchool</mutexExceptions><knownNegatives /><inverse>organizationLeadByPerson</inverse><seedInstances>{"Thoraya Obaid", "Population Fund"} {"Al Gore", "US"} {"Slobodan Milosevic", "Yugoslav"} {"Toomas Hendrik Ilves", "Estonia"} {"Hanna Gronkiewicz-Waltz", "Warsaw"} {"Mohammad Khatami", "Iran"} {"Antoinette Batumubwira", "Burundi"} {"Mikhail Gorbachev", "Soviet"} {"Frank-Walter Steinmeier", "German"} {"Philippe Val", "Charlie Hebdo"} {"Ramush Haradinaj", "Kosovo"} {"Robert Mugabe", "Zimbabwe"} {"Zoran Djindjic", "Serbia"} {"batsman", "South Africa"} {"Silvio Berlusconi", "Italian"}{"Derwall", "West Germany"} {"Ski jump guru", "Germany"} {"Nikolai Khromov", "Russia's Olympic team"} {"V.P. Singh", "Indian"} {"Suharto", "Indonesian"} {"Levy Mwanawasa", "Zambian"} {"Alexy II", "Russian Orthodox Church"} {"Hua Guofeng", "Chinese"} {"Archbishop Christodoulos", "Greek Orthodox Church"} {"Christodoulos", "Greek Orthodox Church"} {"V.P. Singh", "Indian"} {"Alexy II", "Russian Orthodox Church"} {"Kanaan", "AGR"} {"Joseph M. Tucci", "EMC"} {"George F. Colony", "Forrester Research"} {"Bill Gates", "Microsoft"} {"Castello", "Xoma"} {"Samuel D. Isaly", "OrbiMed Advisors"} {"John L. Castello", "Xoma"} {"John "Honey Fitz" Fitzgerald", "Boston"} {"Cole", "Maui Land and Pineapple"} {"David Cole", "Maui Land and Pineapple"} {"Sarah Caldwell", "Opera Company of Boston"} {"Sills", "City Opera"} {"Tom LaSorda", "Chrysler"} {"Ronald Kolka", "Chrysler"} {"Tom LaSorda", "Chrysler"} {"Juergen Hubbert", "Mercedes Car Group"} {"Ron Kutz", "Dallas Dodge Chrysler Jeep"} {"Gerald Meyers", "American Motors Corp."} {"Eckhard Cordes", "Mercedes Car Group"} {"Israel Hernandez", "U.S. and foreign commercial service"} {"Clay Johnson", "transition team"} {"David N. Dinkins", "Manhattan borough"} {"Stanley Friedman", "Bronx Democratic"} {"Hu Jintao", "China"} {"Lang Cheng", "Immigration Bureau"} {"Richard Taylor", "International Hydropower Association"} {"Wen Jiabao", "China"} {"Zhang", "China Hydropower Engineering Society"} {"KEVIN RUDD", "Australia"} {"Sarkozy", "Neuilly"} {"NICOLAS SARKOZY", "France"} {"MOHAMMED BIN RASHID AL-MAKTOUM", "Dubai"} {"John Howard", "Australia"} {"FIDEL", "Cuba"} {"Millard S. Drexler", "Gap"} {"Brian Reed", "Puccini Group"} {"Jeroen van der Veer", "Royal Dutch Shell"} {"Newt Gingrich", "House"}{"Lee R. Raymond", "Exxon Mobil"} {"Mike Jackson", "AutoNation"} {"O'Reilly", "Chevron"} {"Hamid Karzai", "transitional administration"} {"Fidel Castro", "Cuba"} {"Al Avila", "Tigers"} {"Dave Dombrowski", "Tigers"} {"Randy Smith", "Tigers"} {"McCain", "Indian Affairs Committee"} {"Lanni", "MGM Mirage"} {"McCain", "Indian Affairs Committee"} {"John Engler", "Michigan"} {"Richard F. Velky", "Schaghticokes"} {"Ralph Reed", "Christian Coalition"} {"Susan Newman", "It"} {"Lou Piniella", "Tampa Bay Devil Rays"} {"Joe Maddon", "Tampa Bay Rays"} {"Charlie Crist", "Florida"} {"Joe Maddon", "Tampa Bay Rays"} {"Sarah Palin", "Alaska"} {"Lou Piniella", "Tampa Bay Devil Rays"} {"Alex Sink", "Florida"} {"G.G. Ware", "the bond and taxation committee of the state chamber of commerce"} {"Nguyen Phu Trong", "National Assembly (NA) of Vietnam"} {"Tong Thi Phong", "Commission for Mass Mobilization"} {"Nguyen Van An", "NA"} {"Nguyen Duc Kien", "Economics Affairs and Budget Commission"} {"Trong", "Central Theoretical Council"} {"Xie Fuzhan", "NBS"} {"Ter-Petrosyan", "Republic of Armenia"} {"Levon Ter-Petrosyan", "Armenia"} {"Levon Ter- Petrosyan", "Armenia"} {"Mugabe", "ZANU"} {"Herbert Chitepo", "Zimbabwe African National Union"} {"Robert Mugabe", "southern African country"} {"Joshua Nkomo", "Zimbabwe African Peoples Union"} {"Arthur Mutambara", "MDC"} {"Mugabe", "Zimbabwe"} {"Kwame Nkrumah", "Ghanian"} {"Mugabe", "Zimbabwe"} {"Arthur Mutambara", "MDC"} {"Julius Nyerere", "Tanzania"} {"Kenneth Kaunda", "Zambia"} {"Mugabe", "ZANU-PF"} {"Xu Haifeng", "Chinese national shooting team"} {"Xiao Haopeng", "Chinese shooting squad"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * lead by * arg1</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>person leading an organization/company</description><freebaseID>none</freebaseID><comment>person-specific version of its parent</comment></Relation><Relation id="163"><relationName>personHasResidenceInLocation</relationName><humanFormat>arg1 is a person who {has residence in} the location arg2</humanFormat><populate>0</populate><visible>0</visible><generalizations>agentActsInLocation</generalizations><domain>person</domain><range>location</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>personBornInLocation personDiedInLocation</mutexExceptions><knownNegatives /><inverse>locationResidenceOfPerson</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (live OR lives OR ilved OR living) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>the location that person has residence in</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/places lived": [{ "type": "/people/place lived", "/people/place lived/location": [{ "name": null, "/common/topic/alias": [], "type": "/location/location" }] }] }]</freebaseID><comment>A person may exist in places beyond those in which he has residence</comment></Relation><Relation id="164"><relationName>personHasResidenceInGeopoliticalLocation</relationName><humanFormat>arg1 is a person who {has residence in} the geopolitical location arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personHasResidenceInLocation</generalizations><domain>person</domain><range>geopoliticalLocation</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>geopoliticalLocationResidenceOfPersion</inverse><seedInstances>{"Silvio Berlusconi", "Italian"} {"Aime Cesaire", "Martinique"} {"Hua Guofeng", "Chinese"} {"Suharto", "Indonesian"} {"Richard Widmark", "American"} {"Jesse Helms", "US"} {"Mildred Jeter Loving", "Virginia"} {"Jesse Helms", "North Carolina"} {"V.P. Singh", "Indian"} {"Richard Widmark", "Connecticut"} {"Barack Obama", "US"} {"Bobby Fischer", "Iceland"} {"Arthur C. Clarke", "Sri Lanka"} {"Levy Mwanawasa", "Zambian"} {"Aime Cesaire", "Martinique"} {"Bobby Fischer", "Iceland"} {"Arthur C. Clarke", "Sri Lanka"} {"Isaac Hayes", "American"} {"Hua Guofeng", "Chinese"} {"V.P. Singh", "Indian"} {"Suharto", "Indonesian"} {"Mildred Jeter Loving", "Virginia"} {"Richard Widmark", "Connecticut"} {"wife", "Seattle"} {"Rose", "Dorchester"} {"Rose", "Concord"} {"Kathleen", "France"} {"Kick", "England"} {"Christine Moellering", "Ypslanti"} {"Alix Goldsmith", "Mexico"} {"Alix Goldsmith", "Jalisco"} {"Goffredo Marcaccini", "Mexico"} {"Goffredo Marcaccini", "Jalisco"} {"John Gilderbloom", "Louisville"} {"Nan Wang", "China"} {"John Gilderbloom", "Ky."} {"Christine Moellering", "Mich."} {"Mark Moellering", "Ypslanti"} {"Mark Feng", "Taiwan"} {"Mark Moellering", "Mich."} {"James Goldsmith", "Jalisco"} {"James Goldsmith", "Mexico"} {"Christine Moellering", "Mich."} {"Oliver Meade", "College Park"} {"Mark Moellering", "Ypsilanti"} {"James Goldsmith", "Cuixmala"} {"Oliver Meade", "Md."} {"Christine Moellering", "Ypsilanti"} {"Christine Moellering", "Ypslanti"} {"Vivian Yu", "Los Angeles"} {"Lillian Gordon", "Pembroke Pines"} {"Shirley Gordon", "Tallahassee"} {"Gordon", "St. Petersburg"} {"her", "Manhattan"} {"Nancy Bliss", "N.Y."} {"Nancy Bliss", "Woodstock"} {"Sills", "Cleveland"} {"Diana Greenough", "Mass."} {"Lindley Thomasett", "Bedford"} {"Lindley Thomasett", "N.Y."} {"Diana Greenough", "Lancaster"} {"Lu Youbing", "Jianmin Village"} {"MOHAMMED BIN RASHID AL-MAKTOUM", "Dubai"} {"QUSAI KHIDR", "Saudi Arabia"} {"Mukwege", "Congo"} {"JAVIER BARDEM", "Spain"} {"MOHAMMED BIN RASHID AL-MAKTOUM", "United Arab Emirates"} {"GUO JINGJING", "Beijing"} {"GUO JINGJING", "China"} {"LORENA OCHOA", "Mexico"} {"Mukwege", "Bukavu"} {"LIONEL MESSI", "Spain"} {"RAJENDRA PACHAURI", "India"} {"RAJENDRA PACHAURI", "New Delhi"} {"FIDEL", "Havana"} {"FIDEL", "Cuba"} {"CARLOS REYGADAS", "Mexico City"} {"JOSE PADILHA", "Brazil"} {"Sue Miller", "Boston"} {"Dagoberto Gilb", "Texas"} {"Meg Rosoff", "London"} {"Kostow", "Chicago"} {"Corbo", "Outer Richmond"} {"Edward J. Markey", "Mass"} {"Domenici", "New Mexico"} {"Charles E. Schumer", "N.Y."} {"Carl Levin", "Michigan"} {"Frank H. Murkowski", "Alaska"} {"Jesse Helms", "North Carolina"} {"Slade Gorton", "Wash"} {"Richard H. Bryan", "Nev"} {"John D. Dingell", "Detroit"} {"Mike Castle", "Del"} {"Cheryl", "Mich."} {"Cheryl", "Cheboygan"} {"Jeffrey D. Kettle", "Texas City"} {"Betsy Jeffries", "Beaverton"} {"Bryan A. Brewster", "Calif."} {"Betsy Jeffries", "Ore."} {"Terry Blaskowski", "Cheboygan"} {"Emmanuel Hernandez", "Yauco"} {"Jeffrey D. Kettle", "Texas"} {"Andrews", "Maine"} {"Andrews", "Solon"} {"Bryan A. Brewster", "Fontana"} {"Larry I. Rougle", "West Jordan"} {"Larry I. Rougle", "Utah"} {"Terry Blaskowski", "Mich."} {"Michael J. Kelley", "Scituate"} {"Michael J. Kelley", "Mass."} {"his", "Venezuela"} {"his", "Dominican Republic"} {"governor", "Connecticut"} {"John Engler", "Michigan"} {"senator", "Arizona"} {"Sig Rogich", "Nevada"} {"Tom DeLay", "Texas"} {"Morris K. Udall", "Arizona"} {"Sig Rogich", "Nevada"} {"Kent Hance", "Texas"} {"Wes Gullett", "Phoenix"} {"Paul Newman", "Westport"} {"Arthur", "Shaker Heights"} {"Paul", "Shaker Heights"} {"Newman", "Hollywood"} {"Arthur", "Ohio"} {"Paul", "Ohio"} {"Woodward", "Conn"} {"Newman", "Conn. "} {"Woodward", "Westport"} {"Newman", "Westport"} {"Woodward", "Hollywood"} {"Paul Newman", "Conn"} {"Barack Obama", "Illinois"} {"Alex Sink", "Florida"} {"Sarah Palin", "Alaska"} {"Charlie Crist", "Florida"} {"Barack Obama", "U.S."} {"Addison Mizner", "Boca Raton"} {"Yan Guangxin", "Panshi city"} {"Julius Nyerere", "Tanzania"} {"Kenneth Kaunda", "Zambia"} {"Robert Mugabe", "southern African country"} {"Kwame Nkrumah", "Ghanian"} {"Mugabe", "Zimbabwe"} {"Noguchi", "Ise"} {"Noguchi", "Mie"} {"Olga Dovgun", "Kazakhstan"} {"Sheetrit", "Israel"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (live OR lives OR ilved OR living) * arg2</queryString><editDate>2011-10-13</editDate><author>Bryan</author><curator /><description>the geopolitical location that person has residence in</description><freebaseID /><comment>Added for P3 KBP (personHasResidenceInLocation predates the exitence of geopoliticalLocation as a possible range)</comment></Relation><Relation id="165"><relationName>personHasResidenceInCountry</relationName><humanFormat>arg1 is a person who {has residence in} the country arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personHasResidenceInLocation</generalizations><domain>person</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>countryResidenceOfPerson</inverse><seedInstances>{&#8220;Abdurrahman Wahid&#8221;, &#8220;Indonesia&#8221;} {&#8220;Al Gore&#8221;, &#8220;United States&#8221;} {&#8220;Annise Parker&#8221;, &#8220;U.S.&#8221;} {&#8220;Corey Bohan&#8221;, &#8220;Australia&#8221;} {&#8220;Arsene Wenger&#8221;, &#8220;Japan&#8221;} {&#8220;Arsene Wenger&#8221;, &#8220;England&#8221;} {&#8220;Arsene Wenger&#8221;, &#8220;Monaco&#8221;} {&#8220;Masi Oka&#8221;, &#8220;Japan&#8221;} {&#8220;Masi Oka&#8221;, &#8220;US&#8221;} {&#8220;Kurt Westergaard&#8221;, &#8220;Denmark&#8221;} {&#8220;Kimora Lee Simmons&#8221;, &#8220;United States&#8221;} {&#8220;Richard Goldstone&#8221;, &#8220;South Africa&#8221;} {&#8220;Abu Zubaydah&#8221;, &#8220;Saudi Arabia&#8221;} {&#8220;Ahmad Qattan&#8221;, &#8220;Saudi Arabia&#8221;} {&#8220;Alberto Gonzales&#8221;, &#8220;United States&#8221;} {&#8220;Barry Goldwater&#8221;, &#8220;United States&#8221;} {&#8220;Hussein Kamel&#8221;, &#8220;Jordan&#8221;} {&#8220;John Kerry&#8221;, &#8220;U . S .&#8221;} {&#8220;John Negroponte&#8221;, &#8220;Britain&#8221;} {&#8220;M . Enkhbold&#8221;, &#8220;Mongolia&#8221;} {&#8220;Murat Krnaz&#8221;, &#8220;Germany&#8221;} {&#8220;Paavo Nurmi&#8221;, &#8220;Finland&#8221;} {&#8220;Mohammad Baqer Qalibaf&#8221;, &#8220;Iran&#8221;} {&#8220;Ehud Barak&#8221;, &#8220;Israeli&#8221;} {&#8220;William Verity&#8221;, &#8220;US&#8221;} {&#8220;Willam Anderson&#8221;, &#8220;US&#8221;} {&#8220;Theodor Kollek&#8221;, &#8220;Isreal&#8221;} {&#8220;Theodor Kollek&#8221;, &#8220;Austria&#8221;} {&#8220;Steven Derounian&#8221;, &#8220;US&#8221;} {&#8220;Shah Mahmood&#8221;, &#8220;Italy&#8221;} {&#8220;Randall Forsberg&#8221;, &#8220;US&#8221;} {&#8220;Philip Kaiser&#8221;, &#8220;Senegal&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (live OR lives OR ilved OR living) * arg2</queryString><editDate>2013-02-15</editDate><author>Bryan</author><curator /><description>the country that a person has residence in</description><freebaseID /><comment>TAC KBP 2012</comment></Relation><Relation id="166"><relationName>personHasResidenceInStateOrProvince</relationName><humanFormat>arg1 is a person who {has residence in} the state or province arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personHasResidenceInLocation</generalizations><domain>person</domain><range>stateOrProvince</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>stateOrProvinceResidenceOfPerson</inverse><seedInstances>{&#8220;Al Gore&#8221;, &#8220;Tennessee&#8221;} {&#8220;Jared Cotter&#8221;, &#8220;NJ&#8221;} {&#8220;Alli Sims&#8221;, &#8220;CA&#8221;} {&#8220;Orly Taitz&#8221;, &#8220;California&#8221;} {&#8220;Annise Parker&#8221;, &#8220;Texas&#8221;} {&#8220;Corey Bohan&#8221;, &#8220;California&#8221;} {&#8220;Steve Schalchlin&#8221;, &#8220;Arkansas&#8221;} {&#8220;Levi Johnston&#8221;, &#8220;Alaska&#8221;} {&#8220;Holly Madison&#8221;, &#8220;Alaska&#8221;} {&#8220;Holly Madison&#8221;, &#8220;Oregon&#8221;} {&#8220;Kimora Lee Simmons&#8221;, &#8220;New Jersey&#8221;} {&#8220;George Tiller&#8221;, &#8220;Kansas&#8221;} {&#8220;Dionne Warwick&#8221;, &#8220;New Jersey&#8221;} {&#8220;Al Hubbard&#8221;, &#8220;Indiana&#8221;} {&#8220;Alberto Gonzales&#8221;, &#8220;Texas&#8221;} {&#8220;Barbara Boxer&#8221;, &#8220;California&#8221;} {&#8220;Barry Goldwater&#8221;, &#8220;Arizona&#8221;} {&#8220;George Sheldon&#8221;, &#8220;N . J .&#8221;} {&#8220;Jerome Robbins&#8221;, &#8220;New York&#8221;} {&#8220;John Kerry&#8221;, &#8220;Massachusettes&#8221;} {&#8220;Mohamed ElBaradei&#8221;, &#8220;New York&#8221;} {&#8220;Paul Watson&#8221;, &#8220;New Brunswick&#8221;} {&#8220;Roy Scheider&#8221;, &#8220;New Jersey&#8221;} {&#8220;George W. Bush&#8221;, &#8220;Maine&#8221;} {&#8220;Yolanda King&#8221;, &#8220;California&#8221;} {&#8220;Yolanda King&#8221;, &#8220;Alabama&#8221;} {&#8220;William Anderson&#8221;, &#8220;Tennessee&#8221;} {&#8220;Thomas Meskill&#8221;, &#8220;Connecticut&#8221;} {&#8220;Steven Derounian&#8221;, &#8220;Texas&#8221;} {&#8220;Steven Derounian&#8221;, &#8220;New York&#8221;} {&#8220;Silvestre Herrera&#8221;, &#8220;Arizona&#8221;} {&#8220;Robert McNair&#8221;, &#8220;South Carolina&#8221;} {&#8220;Richmond Flowers&#8221;, &#8220;Alabama&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (live OR lives OR ilved OR living) * arg2</queryString><editDate>2013-02-15</editDate><author>Bryan</author><curator /><description>the state or province that a person has residence in</description><freebaseID /><comment>TAC KBP 2012</comment></Relation><Relation id="167"><relationName>personHasResidenceInCity</relationName><humanFormat>arg1 is a person who {has residence in} the city arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personHasResidenceInLocation</generalizations><domain>person</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>cityResidenceOfPerson</inverse><seedInstances>{&#8220;Al Gore&#8221;, &#8220;Nashville&#8221;} {&#8220;Hiram Monserrate&#8221;, &#8220;Jackson Heights&#8221;} {&#8220;Jared Cotter&#8221;, &#8220;West Orange&#8221;} {&#8220;Emile Lahoud&#8221;, &#8220;Baabda&#8221;} {&#8220;Jose Peralta&#8221;, &#8220;Queens&#8221;} {&#8220;Alli Sims&#8221;, &#8220;L.A.&#8221;} {&#8220;Alli Sims&#8221;, &#8220;Malibu&#8221;} {&#8220;Orly Taitz&#8221;, &#8220;Niguel&#8221;} {&#8220;Annise Parker&#8221;, &#8220;Houston&#8221;} {&#8220;Corey Bohan&#8221;, &#8220;Brisbane&#8221;} {&#8220;Arsene Wenger&#8221;, &#8220;London&#8221;} {&#8220;Arsene Wenger&#8221;, &#8220;Strasbourg&#8221;} {&#8220;Masi Oka&#8221;, &#8220;Los Angeles&#8221;} {&#8220;Masi Oka&#8221;, &#8220;Tokyo&#8221;} {&#8220;Danny Moder&#8221;, &#8220;Taos&#8221;} {&#8220;Danny Moder&#8221;, &#8220;Venice Beach&#8221;} {&#8220;Kurt Westergaard&#8221;, &#8220;Aarhus&#8221;} {&#8220;Levi Johnston&#8221;, &#8220;Wasilla&#8221;} {&#8220;Holly Madison&#8221;, &#8220;St Helens&#8221;} {&#8220;Holly Madison&#8221;, &#8220;Los Angeles&#8221;} {&#8220;Kimora Lee Simmons&#8221;, &#8220;Saddle River&#8221;} {&#8220;Linda Hogan&#8221;, &#8220;Miami Beach&#8221;} {&#8220;Linda Hogan&#8221;, &#8220;Belleair&#8221;} {&#8220;Linda Hogan&#8221;, &#8220;Clearwater Beach&#8221;} {&#8220;George Tiller&#8221;, &#8220;Wichita&#8221;} {&#8220;David Coleman Headley&#8221;, &#8220;Chicago&#8221;} {&#8220;Dionne Warwick&#8221;, &#8220;South Orange&#8221;} {&#8220;Dionne Warwick&#8221;, &#8220;East Orange&#8221;} {&#8220;George W. Bush&#8221;, &#8220;Kennebunkport&#8221;} {&#8220;Roy Scheider&#8221;, &#8220;Sag Harbor&#8221;} {&#8220;Roy Scheider&#8221;, &#8220;Orange&#8221;} {&#8220;Yolanda King&#8221;, &#8220;Montgomery&#8221;} {&#8220;Yolanda King&#8221;, &#8220;Culver City&#8221;} {&#8220;William Verity&#8221;, &#8220;Beaufort&#8221;} {&#8220;Vernon Bellecourt&#8221;, &#8220;St. Paul&#8221;} {&#8220;Vernon Bellecourt&#8221;, &#8220;Denver&#8221;} {&#8220;Thomas Meskill&#8221;, &#8220;East Berlin&#8221;} {&#8220;Thomas Meskill&#8221;, &#8220;Delray Beach&#8221;} {&#8220;Theodor Kollek&#8221;, &#8220;Vienna&#8221;} {&#8220;Theodor Kolek&#8221;, &#8220;Jerusalem&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (live OR lives OR ilved OR living) * arg2</queryString><editDate>2013-02-15</editDate><author>Bryan</author><curator /><description>the city that a person has residence in</description><freebaseID /><comment>TAC KBP 2012</comment></Relation><Relation id="168"><relationName>personHasCitizenship</relationName><humanFormat>arg1 {has citizenship in} the country arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentRelatedToLocation</generalizations><domain>person</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>countryHasCitizen</inverse><seedInstances>{&#8220;Nelson Mandela&#8221;, &#8220;South Africa&#8221;}, {&#8220;Cleopatra&#8221;, &#8220;Egypt&#8221;}, {&#8220;Jeje Odongo&#8221;, &#8220;Uganda&#8221;}, {&#8220;Boutros Boutros Ghali&#8221;, &#8220;Egypt&#8221;}, {&#8220;Hamid Karzai&#8221;, &#8220;Afghanistan&#8221;}, {&#8220;Jackie Chan&#8221;, &#8220;China&#8221;} {&#8220;Tojo Hideki&#8221;, &#8220;Japan&#8221;} {&#8220;Reza Pahlavi&#8221;, &#8220;Iran&#8221;} {&#8220;Kareena Kapoor&#8221;, &#8220;India&#8221;} {&#8220;Khun Lo&#8221;, &#8220;Laos&#8221;} {&#8220;Kublai Khan&#8221;, &#8220;Mongolia&#8221;} {&#8220;Julia Gillard&#8221;, &#8220;Australia&#8221;} {&#8220;Rupert Murdoch&#8221;, &#8220;Australia&#8221;} {&#8220;Steve Irwin&#8221;, &#8220;Australia&#8221;} {&#8220;Bryan Adams&#8221;, &#8220;Canada&#8221;} {&#8220;Celine Dion&#8221;, &#8220;Canada&#8221;} {&#8220;Stephen Harper&#8221;, &#8220;Canada&#8221;} {&#8220;Josef Haydn&#8221;, &#8220;Austria&#8221;} {&#8220;Archimedes&#8221;, &#8220;Sicily&#8221;} {&#8220;Werner Reinhart&#8221;, &#8220;Switzerland&#8221;} {&#8220;Diego Rivera&#8221;, &#8220;Mexico&#8221;} {&#8220;Pita Amor&#8221;, &#8220;Mexico&#8221;} {&#8220;Princess Isabel&#8221;, &#8220;Brazil&#8221;}{&#8220;Andres Escobar&#8221;, &#8220;Colombia&#8221;} {&#8220;Leonardo Boff&#8221;, &#8220;Brazil&#8221;} {&#8220;Bill Gates&#8221;, &#8220;United States&#8221;} {&#8220;Bob Dylan&#8221;, &#8220;United States&#8221;} {&#8220;Andy Warhol&#8221;, &#8220;United States&#8221;} {&#8220;Carla Del Ponte&#8221;, &#8220;Switzerland&#8221;} {&#8220;Zacarias Moussaoui&#8221;, &#8220;France&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * of * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>the citizenship of a person</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="169"><relationName>personBornInLocation</relationName><humanFormat>arg1 was {born in} the location arg2</humanFormat><populate>1</populate><visible>0</visible><generalizations>agentActsInLocation</generalizations><domain>person</domain><range>location</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>personHasResidenceInLocation personDiedInLocation</mutexExceptions><knownNegatives /><inverse>locationOfPersonBirth</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * born * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>the location that a person is born in</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/place of birth": [{ "name": null, "/common/topic/alias": [], "type": "/location/location" }] }]</freebaseID><comment>This would generalize to agentRelatedToLocation if agentActsInLocation didn't capture the existence of that person in that location at some point in time.</comment></Relation><Relation id="170"><relationName>personBornInCity</relationName><humanFormat>arg1 was {born in} the city arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personBornInLocation</generalizations><domain>person</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>cityOfPersonBirth</inverse><seedInstances>{"Willie Aames","los angeles"},{"Drew Barrymore ","los angeles"},{"Alex Band ","los angeles"},{"Aaliyah","new york"},{"Carmelo Anthony","new york"},{"Barbara Boxer","new york"},{"George Carlin","new york"},{"Alanis Morissette","Ottawa"},{"Glenn Gould","Ottawa"},{"Pl&#225;cido Domingo","Madrid"},{"Enrique Iglesias","Madrid"} {&#8220;Hank Williams&#8221;, &#8220;Mount Olive West&#8221;} {&#8220;Tom Lehman&#8221;, &#8220;Austin&#8221;} {&#8220;Jared Cotter&#8221;, &#8220;Kew Gardens&#8221;} {&#8220;Emile Lahoud&#8221;, &#8220;Baabdat&#8221;} {&#8220;Annise Parker&#8221;, &#8220;Houston&#8221;} {&#8220;Clive Davis&#8221;, &#8220;Brooklyn&#8221;} {&#8220;Corey Bohan&#8221;, &#8220;Brisbane&#8221;} {&#8220;Arsene Wenger&#8221;, &#8220;Strasbourg&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * born * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>the city that a person was born in</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/place of birth": [{ "name": null, "/common/topic/alias": [], "type": "/location/citytown" }] }]</freebaseID><comment /></Relation><Relation id="171"><relationName>personBornInStateOrProvince</relationName><humanFormat>arg1 was {born in} the state or province arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personBornInLocation</generalizations><domain>person</domain><range>stateOrProvince</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>stateOrProvinceOfPersonBirth</inverse><seedInstances>{&#8220;Jared Cotter&#8221;, &#8220;NY&#8221;} {&#8220;Annise Parker&#8221;, &#8220;Texas&#8221;} {&#8220;Holly Madison&#8221;, &#8220;Oregon&#8221;} {&#8220;Stephen Harper&#8221;, &#8220;Ontario&#8221;} {&#8220;John Kerry&#8221;, &#8220;Colorado&#8221;} {&#8220;Roy Scheider&#8221;, &#8220;New Jersey&#8221;} {&#8220;Yolanda King&#8221;, &#8220;Alabama&#8221;} {&#8220;William Verity&#8221;, &#8220;Ohio&#8221;} {&#8220;Vernon Bellecourt&#8221;, &#8220;Minnesota&#8221;} {&#8220;Robert McNair&#8221;, &#8220;South Carolina&#8221;} {&#8220;Austin Dean Coobs&#8221;, &#8220;Iowa&#8221;} {&#8220;Bobby Gilbert&#8221;, &#8220;Pennsylvania&#8221;} {&#8220;Charles Chapman&#8221;, &#8220;Illinois&#8221;} {&#8220;Dubb Tubb&#8221;, &#8220;Texas&#8221;} {&#8220;Evan Solomon&#8221;, &#8220;California&#8221;} {&#8220;Francis Moore&#8221;, &#8220;New York&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * born * arg2</queryString><editDate>2013-02-15</editDate><author>Bryan</author><curator /><description>the state or province that a person was born in</description><freebaseID /><comment>TAC KBP 2012</comment></Relation><Relation id="172"><relationName>personBornInCountry</relationName><humanFormat>arg1 was {born in} the country arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personBornInLocation</generalizations><domain>person</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>countryOfPersonBirth</inverse><seedInstances>{&#8220;Abu Musab Al-Zarqawi&#8221;, &#8220;Jordan&#8221;} {&#8220;Martin Burnham&#8221;, &#8220;America&#8221;} {&#8220;Glenn Gould&#8221;, &#8220;Canada&#8221;} {&#8220;Alanis Morissette&#8221;, &#8220;Canada&#8221;} {&#8220;George Carlin&#8221;, &#8220;US&#8221;} {&#8220;Barbara Boxer&#8221;, &#8220;USA&#8221;} {&#8220;Enrique Iglesias&#8221;, &#8220;Spain&#8221;} {&#8220;Andy Warhol&#8221;, &#8220;United States&#8221;} {&#8220;Leonardo Boff&#8221;, &#8220;Brazil&#8221;} {&#8220;Annise Parker&#8221;, &#8220;U.S.&#8221;} {&#8220;Corey Bohan&#8221;, &#8220;Australia&#8221;} {&#8220;Arsene Wenger&#8221;, &#8220;France&#8221;} {&#8220;Theodor Kollek&#8221;, &#8220;Hungary&#8221;} {&#8220;Steven Derounian&#8221;, &#8220;Bulgaria&#8221;} {&#8220;Aaron Zeitlin&#8221;, &#8220;Belarus&#8221;} {&#8220;Benjamin Law&#8221;, &#8220;England&#8221;} {&#8220;Charles Gorman&#8221;, &#8220;United States&#8221;} {&#8220;Derek Freeman&#8221;, &#8220;Australia&#8221;} {&#8220;Emily Lodge&#8221;, &#8220;England&#8221;} {&#8220;Frank Burton&#8221;, &#8220;Mexico&#8221;} {&#8220;George Cook&#8221;, &#8220;United States&#8221;} {&#8220;Harry Boyle&#8221;, &#8220;Canada&#8221;} {&#8220;Ian Ferguson&#8221;, &#8220;Canada&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * born * arg2</queryString><editDate>2013-02-15</editDate><author>Bryan</author><curator /><description>the country that a person was born in</description><freebaseID /><comment>TAC KBP 2012</comment></Relation><Relation id="173"><relationName>personDiedInLocation</relationName><humanFormat>arg1 {died in} the location arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentActsInLocation</generalizations><domain>person</domain><range>location</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>personBornInLocation personHasResidenceInLocation</mutexExceptions><knownNegatives /><inverse>locationOfPersonDeath</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * died * arg2</queryString><editDate>2013-02-15</editDate><author>Bryan</author><curator /><description>the location that a person died in</description><freebaseID /><comment>TAC KBP 2012</comment></Relation><Relation id="174"><relationName>personDiedInCity</relationName><humanFormat>arg1 {died in} the city arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personDiedInLocation</generalizations><domain>person</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>cityOfPersonDeath</inverse><seedInstances>{&#8220;Jay Smith&#8221;, &#8220;Wilkes-Barre&#8221;} {&#8220;George Tiller&#8221;, &#8220;Wichita&#8221;} {&#8220;Hussein Kamel&#8221;, &#8220;Baghdad&#8221;} {&#8220;Yolanda King&#8221;, &#8220;Santa Monica&#8221;} {&#8220;William Verity&#8221;, &#8220;Beaufort&#8221;} {&#8220;Vernon Bellecourt&#8221;, &#8220;Minneapolis&#8221;} {&#8220;Thomas Meskill&#8221;, &#8220;Delray Beach&#8221;} {&#8220;Theodor Kollek&#8221;, &#8220;Jerusalem&#8221;} {&#8220;Silvestre Herrera&#8221;, &#8220;Glendale&#8221;} {&#8220;Richmond Flowers&#8221;, &#8220;Dothan&#8221;} {&#8220;Pascal Yoadimadji&#8221;, &#8220;Paris&#8221;} {&#8220;Pamela Ahearn&#8221;, &#8220;Alexandria&#8221;} {&#8220;Michael Deaver&#8221;, &#8220;Bethesda&#8221;} {&#8220;Mary Crisp&#8221;, &#8220;Phoenix&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * died * arg2</queryString><editDate>2013-02-15</editDate><author>Bryan</author><curator /><description>the city that a person died in</description><freebaseID /><comment>TAC KBP 2012</comment></Relation><Relation id="175"><relationName>personDiedInStateOrProvince</relationName><humanFormat>arg1 {died in} the state or province arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personDiedInLocation</generalizations><domain>person</domain><range>stateOrProvince</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>stateOrProvinceOfPersonDeath</inverse><seedInstances>{&#8220;Mohammed Khan&#8221;, &#8220;North West Fronteir Province&#8221;} {&#8220;Jay Smith&#8221;, &#8220;Texas&#8221;} {&#8220;George Tiller&#8221;, &#8220;Kansas&#8221;} {&#8220;Yolanda King&#8221;, &#8220;California&#8221;} {&#8220;William Verity&#8221;, &#8220;South Carolina&#8221;} {&#8220;William Anderson&#8221;, &#8220;VA&#8221;} {&#8220;Thomas Meskill&#8221;, &#8220;Florida&#8221;} {&#8220;Silvestre Herrera&#8221;, &#8220;Arizona&#8221;} {&#8220;Richmond Flowers&#8221;, &#8220;Alabama&#8221;} {&#8220;Richard Nolte&#8221;, &#8220;NH&#8221;} {&#8220;Paul Gillmor&#8221;, &#8220;Virginia&#8221;} {&#8220;Pamela Ahearn&#8221;, &#8220;VA&#8221;} {&#8220;Michael Deaver&#8221;, &#8220;MD&#8221;} {&#8220;Alden Caldwell&#8221;, &#8220;Florida&#8221;} {&#8220;Bruno Bettelheim&#8221;, &#8220;Colorado&#8221;} {&#8220;Cliff Schmautz&#8221;, &#8220;Oregon&#8221;} {&#8220;Don Heck&#8221;, &#8220;New York&#8221;} {&#8220;Elsie Allen&#8221;, &#8220;California&#8221;} {&#8220;Fredric Schenk&#8221;, &#8220;Pennsylvania&#8221;} {&#8220;Gerome Ragni&#8221;, &#8220;New York&#8221;} {&#8220;Henry Sylvester&#8221;, &#8220;California&#8221;} {&#8220;James Adams&#8221;, &#8220;New Jersey&#8221;} {&#8220;Kennekuk&#8221;, &#8220;Kansas&#8221;} {&#8220;Lewis Brown&#8221;, &#8220;New York&#8221;} {&#8220;Dave McKenna&#8221;, &#8220;Pennsylvania&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * died * arg2</queryString><editDate>2013-02-15</editDate><author>Bryan</author><curator /><description>the state or province that a person died in</description><freebaseID /><comment>TAC KBP 2012</comment></Relation><Relation id="176"><relationName>personDiedInCountry</relationName><humanFormat>arg1 {died in} the country arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personDiedInLocation</generalizations><domain>person</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>countryOfPersonDeath</inverse><seedInstances>{&#8220;Ahmed Said Khadr&#8221;, &#8220;Pakistan&#8221;} {&#8220;Mohammed Khan&#8221;, &#8220;Pakistan&#8221;} {&#8220;Hussein Kamel&#8221;, &#8220;Iraq&#8221;} {&#8220;Albert Butz&#8221;, &#8220;United States&#8221;} {&#8220;Benjamin Law&#8221;, &#8220;Australia&#8221;} {&#8220;Charles Young&#8221;, &#8220;England&#8221;} {&#8220;David Stirling&#8221;, &#8220;England&#8221;} {&#8220;Eiar Vaage&#8221;, &#8220;Norway&#8221;} {&#8220;Frank Marshall&#8221;, &#8220;Scotland&#8221;} {&#8220;Gasper Grima&#8221;, &#8220;Malta&#8221;} {&#8220;Harold Lowe&#8221;, &#8220;Wales&#8221;} {&#8220;Inger Gleerup&#8221;, &#8220;Bulgaria&#8221;} {&#8220;Joan Webb&#8221;, &#8220;England&#8221;} {&#8220;Kyle Owen&#8221;, &#8220;United States&#8221;} {&#8220;Leo Maguire&#8221;, &#8220;Great Britain&#8221;} {&#8220;Margin Johnston&#8221;, &#8220;Australia&#8221;} {&#8220;Nick Berg&#8221;, &#8220;Iraq&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * died * arg2</queryString><editDate>2013-02-15</editDate><author>Bryan</author><curator /><description>the country that a person died in</description><freebaseID /><comment>TAC KBP 2012</comment></Relation><Relation id="177"><relationName>hasFamilyMember</relationName><humanFormat>arg1 and arg2 are {family members}</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentInteractsWithAgent</generalizations><domain>person</domain><range>person</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives /><inverse>hasFamilyMember</inverse><seedInstances>{&#8220;Hank Williams&#8221;, &#8220;Hank Williams III&#8221;} {&#8220;Khalid Sheikh Mohammed&#8221;, &#8220;Ramzi Youssef&#8221;} {&#8220;Diane Olson&#8221;, &#8220;Culbert L. Olson&#8221;} {&#8220;Alli Sims&#8221;, &#8220;Britney Spears&#8221;} {&#8220;Alli Sims&#8221;, &#8220;Jamie Lynn Spears&#8221;} {&#8220;Steve Schalchlin&#8221;, &#8220;Whitney Houston&#8221;} {&#8220;Steve Schalchlin&#8221;, &#8220;Sissy Houston&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * family of * arg1</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>two persons are family members</description><freebaseID>none</freebaseID><comment>Used to be alaceholder umbrella relation for family relationships, but now is of direct interest for TAC KBP 2012</comment></Relation><Relation id="178"><relationName>parentOfPerson</relationName><humanFormat>arg1 is the {parent of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>hasFamilyMember</generalizations><domain>person</domain><range>person</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>personHasParent</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * parent of * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>parent of a person</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/parents": [{ "name": null, "/common/topic/alias": [], "type": "/people/person" }] }]</freebaseID><comment /></Relation><Relation id="179"><relationName>motherOfPerson</relationName><humanFormat>arg1 is the {mother of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>parentOfPerson</generalizations><domain>female</domain><range>person</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>personHasMother</inverse><seedInstances>{&#8220;Virgin Mary&#8221;, &#8220;Jesus Christ&#8221;} {&#8220;Mary&#8221;, &#8220;Jesus&#8221;} {&#8220;Hagar&#8221;, &#8220;Ishmael&#8221;} {&#8220;Rohini&#8221;, &#8220;Balarama&#8221;} {&#8220;Cleopatra&#8221;, &#8220;Caesarion&#8221;} {&#8220;Demeter&#8221;, &#8220;Persephone&#8221;} {&#8220;Demeter&#8221;, &#8220;Kore&#8221;} {&#8220;Michelle Obama&#8221;, &#8220;Malia&#8221;} {&#8220;Suniti&#8221;, &#8220;Dhruva&#8221;} {&#8220;Electra&#8221;, &#8220;Dardanus&#8221;} {&#8220;Alcmene&#8221;, &#8220;Hercules&#8221;} {&#8220;Hapshetsut&#8221;, &#8220;Ahmose&#8221;} {&#8220;Pavarti&#8221;, &#8220;Ganesha&#8221;} {&#8220;Kunti&#8221;, &#8220;Arjuna&#8221;} {&#8220;Kimora Lee Simmons&#8221;, &#8220;Ming Lee&#8221;} {&#8220;Kimora Lee Simmons&#8221;, &#8220;Aoki&#8221;} {&#8220;Kimora Lee Simmons&#8221;, &#8220;Kenzo&#8221;} {&#8220;Linda Hogan&#8221;, &#8220;Nick Hogan&#8221;} {&#8220;Dionne Warwick&#8221;, &#8220;Damon Elliot&#8221;} {&#8220;Rosa Hernandez&#8221;, &#8220;Jose Peralta&#8221;} {&#8220;Sherry Johnston&#8221;, &#8220;Levi Johnston&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * mother of * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>mother of a person</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/gender": "Female", "/people/person/children": [{ "name": null, "/common/topic/alias": [], "type": "/people/person" }] }]</freebaseID><comment /></Relation><Relation id="180"><relationName>fatherOfPerson</relationName><humanFormat>arg1 is the {father of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>parentOfPerson</generalizations><domain>male</domain><range>person</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>personHasFather</inverse><seedInstances>{"Harivansh Rai Bachchan","Amitabh Bachchan"},{"Rakesh Roshan","Hrithik Roshan"},{"Darryl Strawberry","D.J. Strawberry"},{"Archie Manning","Eli Manning"},{"Yogi Berra","Dale Berra"},{"Mel Stottlemyre","Todd Stottlemyre"},{"Cecil Fielder","Prince Fielder"},{"Motilal Nehru","Jawaharlal Nehru"},{"Prithviraj Kapoor","Raj Kapoor"},{"Sunil Dutt","Sanjay Dutt"} {&#8220;Constantine&#8221;, &#8220;Crispus&#8221;} {&#8220;Nat King Cole&#8221;, &#8220;Natalie Cole&#8221;} {&#8220;Zulfikar Ali Bhutto&#8221;, &#8220;Benazir Bhutto&#8221;} {&#8220;Jon Voight&#8221;, &#8220;Angelina Jolie&#8221;} {&#8220;Matthew Knowles&#8221;, &#8220;Beyonce&#8221;} {&#8220;Enoch&#8221;, &#8220;Methuselah&#8221;} {&#8220;Abraham&#8221;, &#8220;Isaac&#8221;} {&#8220;Billy Ray Cyrus&#8221;, &#8220;Miley Cyrus&#8221;} {&#8220;Shu&#8221;, &#8220;Geb&#8221;} {&#8220;Agamemnon&#8221;, &#8220;Iphigenia&#8221;} {&#8220;Thor&#8221;, &#8220;Thrud&#8221;} {&#8220;Jacob&#8221;, &#8220;Dinah&#8221;} {&#8220;Noah&#8221;, &#8220;Shem&#8221;} {&#8220;Barack Obama&#8221;, &#8220;Malia&#8221;} {&#8220;Adam&#8221;, &#8220;Cain&#8221;} {&#8220;Hank Williams&#8221;, &#8220;Hank Williams Jr.&#8221;} {&#8220;Hank Williams Jr.&#8221;, &#8220;Katie Williams&#8221;} {&#8220;Emile Lahoud&#8221;, &#8220;Emile Emile Lahoud&#8221;} {&#8220;Danny Moder&#8221;, &#8220;Henry Daniel Moder&#8221;} {&#8220;Danny Moder&#8221;, &#8220;Phinneaus Walter Moder&#8221;} {&#8220;Sukarno&#8221;, &#8220;Megawati Sukarnoputri&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * father of * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>father of a person</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/gender": "Male", "/people/person/children": [{ "name": null, "/common/topic/alias": [], "type": "/people/person" }] }]</freebaseID><comment /></Relation><Relation id="181"><relationName>biologicalMotherOfPerson</relationName><humanFormat>arg1 is the {biological mother of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>motherOfPerson agentCreated</generalizations><domain>female</domain><range>person</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>personHasBiologicalMother</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * biological mother of * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>is biological mother of a person</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="182"><relationName>biologicalFatherOfPerson</relationName><humanFormat>arg1 is the {biological father of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>fatherOfPerson agentCreated</generalizations><domain>male</domain><range>person</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>personHasBiologicalFather</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 * biological father of * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>is biological father of a person</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="183"><relationName>hasSibling</relationName><humanFormat>arg1 and arg2 are {siblings}</humanFormat><populate>1</populate><visible>1</visible><generalizations>hasFamilyMember</generalizations><domain>person</domain><range>person</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives /><inverse>hasSibling</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * sibling of * arg1</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>two persons are siblings</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/sibling s": [{ "/people/sibling relationship/sibling": [{ "name": null, "/common/topic/alias": [], "type": "/people/person" }] }] }]</freebaseID><comment>NOTE: because of the reified "sibling relationship" type in Freebase, this query will yield instances saying a person is a sibling with himself. These need to be ruled out by a post-processing script</comment></Relation><Relation id="184"><relationName>hasBrother</relationName><humanFormat>arg1 {has brother} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>hasSibling</generalizations><domain>person</domain><range>male</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives /><inverse>brotherOf</inverse><seedInstances>{&#8220;Tecumseh&#8221;, &#8220;Tenskwatawa&#8221;} {&#8220;Fidel Castro&#8221;, &#8220;Raul&#8221;} {&#8220;Cicero&#8221;, &#8220;Quintus&#8221;} {&#8220;Julia Roberts&#8221;, &#8220;Eric Roberts&#8221;} {&#8220;Ahmed Shah Massoud&#8221;, &#8220;Ahmed Wali Massoud&#8221;} {&#8220;Yolanda King&#8221;, &#8220;Martin Luther King&#8221;} {&#8220;Yolanda King&#8221;, &#8220;Dexter King&#8221;} {&#8220;Vernon Bellecourt&#8221;, &#8220;Clyde Bellecourt&#8221;} {&#8220;Roy Scheider&#8221;, &#8220;Glenn Scheider&#8221;} {&#8220;Richard Nolte&#8221;, &#8220;Charles Nolte&#8221;} {&#8220;Pamela Ahearn&#8221;, &#8220;James Gardner&#8221;} {&#8220;Michael Deaver&#8221;, &#8220;Bill Deaver&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * brother of * arg1</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>person has a brother</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/sibling s": [{ "/people/sibling relationship/sibling": [{ "name": null, "/common/topic/alias": [], "/people/person/gender": "Male", "type": "/people/person" }] }] }]</freebaseID><comment>NOTE: because of the reified "sibling relationship" type in Freebase, this query will yield instances saying a person is a brother to himself. These need to be ruled out by a post-processing script</comment></Relation><Relation id="185"><relationName>hasSister</relationName><humanFormat>arg1 {has sister} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>hasSibling</generalizations><domain>person</domain><range>female</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives /><inverse>sisterOf</inverse><seedInstances>{&#8220;Apollo&#8221;, &#8220;Artemis&#8221;} {&#8220;Nephthys&#8221;, &#8220;Isis&#8221;} {&#8220;Luke Skywalker&#8221;, &#8220;Princess Leia&#8221;} {&#8220;Eric Roberts&#8221;, &#8220;Julia Roberts&#8221;} {&#8220;Elizabeth Blackwell&#8221;, &#8220;Emily&#8221;} {&#8220;Annie Liebovitz&#8221;, &#8220;Barbara Leibovitz&#8221;} {&#8220;Dionne Warwick&#8221;, &#8220;Dee Dee Warwick&#8221;} {&#8220;Yolanda King&#8221;, &#8220;Bernice King&#8221;} {&#8220;Willaim Verity&#8221;, &#8220;Jean Verity Woodhull&#8221;} {&#8220;William Verity&#8221;, &#8220;Betsy Verity Blakey&#8221;} {&#8220;Thomas Meskill&#8221;, &#8220;Ruth Prior&#8221;} {&#8220;Thomas Meskill&#8221;, &#8220;Laura Marie&#8221;} {&#8220;Richard Nolte&#8221;, &#8220;Jacqueline Jones&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * sister of * arg1</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>person has a sister</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/sibling s": [{ "/people/sibling relationship/sibling": [{ "name": null, "/common/topic/alias": [], "/people/person/gender": "Female", "type": "/people/person" }] }] }]</freebaseID><comment>NOTE: because of the reified "sibling relationship" type in Freebase, this query will yield instances saying a person is a sister to herself. These need to be ruled out by a post-processing script</comment></Relation><Relation id="186"><relationName>hasSpouse</relationName><humanFormat>arg1 {has spouse} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>hasFamilyMember</generalizations><domain>person</domain><range>person</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives /><inverse>hasSpouse</inverse><seedInstances>{"Jack", "Jackie"} {"Billy Cavendish", "Kick"} {"Alix Goldsmith", "Goffredo Marcaccini"} {"Mark Moellering", "Christine Moellering"} {"Greg Buchanan", "Gordon"} {"Earl Presley Sr .", "Gordon"} {"Gregory Buchanan", "Gordon"} {"Bonimo's son", "Gordon"} {"The groom", "The bride"} {"Greg Buchanan", "Gordon"}{"Jerry", "Hughes"} {"Deanie Hickox Fox", "Jeremy Fox"} {"Cindy", "McCain"} {"Woodward", "Newman"} {"Joanne Woodward", "Newman"} {"Woodward", "Newman"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * spouse of * arg1</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>person has a spouse</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/spouse s": [{ "/people/marriage/spouse": [{ "name": null, "/common/topic/alias": [], "type": "/people/person" }] }] }]</freebaseID><comment>NOTE: because of the reified "spouse relationship" type in Freebase, this query will yield instances saying a person is married to himself. These need to be ruled out by a post-processing script</comment></Relation><Relation id="187"><relationName>hasHusband</relationName><humanFormat>arg1 {has husband} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>hasSpouse</generalizations><domain>person</domain><range>male</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>husbandOf</inverse><seedInstances>{&#8220;Monet&#8221;, &#8220;Camille Doncieux&#8221;} {&#8220;Michelle Obama&#8221;, &#8220;Barack Obama&#8221;} {&#8220;Bathsheba&#8221;, &#8220;King David&#8221;} {&#8220;Hagar&#8221;, &#8220;Abraham&#8221;} {&#8220;Vipsania&#8221;, &#8220;Tiberius&#8221;} {&#8220;Metis&#8221;, &#8220;Zeus&#8221;} {&#8220;Maat&#8221;, &#8220;Thoth&#8221;} {&#8220;Madona&#8221;, &#8220;Sean Penn&#8221;} {&#8220;Amestris&#8221;, &#8220;Xerces&#8221;} {&#8220;Mariah Carey&#8221;, &#8220;Nick Cannon&#8221;} {&#8220;Katherine Parr&#8221;, &#8220;Thomas Seymour&#8221;} {&#8220;Renee Zellweger&#8221;, &#8220;Kenny Chesney&#8221;} {&#8220;Basemath&#8221;, &#8220;Esau&#8221;} {&#8220;Billie Jean Jones&#8221;, &#8220;Hank Williams&#8221;} {&#8220;Ruth Rickover&#8221;, &#8220;Hyman Rickover&#8221;} {&#8220;Diane Olson&#8221;, &#8220;Robin Tyler&#8221;} {&#8220;Kimora Lee Simmons&#8221;, &#8220;Russell Simmons&#8221;} {&#8220;Linda Hogan&#8221;, &#8220;Hulk Hogan&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * husband of * arg1</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>person has a husband</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/spouse s": [{ "/people/marriage/spouse": [{ "name": null, "/people/person/gender": "Male", "/common/topic/alias": [], "type": "/people/person" }] }] }]</freebaseID><comment>NOTE: because of the reified "spouse relationship" type in Freebase, this query will yield instances saying a person is a husband to himself. These need to be ruled out by a post-processing script</comment></Relation><Relation id="188"><relationName>hasWife</relationName><humanFormat>arg1 {has wife} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>hasSpouse</generalizations><domain>person</domain><range>female</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>wifeOf</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * wife of * arg1</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>person has a wife</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/spouse s": [{ "/people/marriage/spouse": [{ "name": null, "/people/person/gender": "Female", "/common/topic/alias": [], "type": "/people/person" }] }] }]</freebaseID><comment>NOTE: because of the reified "spouse relationship" type in Freebase, this query will yield instances saying a person is a wife to herself. These need to be ruled out by a post-processing script</comment></Relation><Relation id="189"><relationName>personAttendsSchool</relationName><humanFormat>arg1 is a person who {has attended} the school arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personBelongsToOrganization</generalizations><domain>person</domain><range>school</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>worksFor</mutexExceptions><knownNegatives /><inverse>schoolAttendedByPerson</inverse><seedInstances>{"Walter Gropius","Harvard"},{"Kim Clark","Harvard"},{"Fitzroy Carrington","Harvard"},{"Eileen Collins","Stanford"},{"Ehud Barak","Stanford"},{"Herbert Hoove","Stanford"},{"Tariq Ali","Oxford"},{"Edmund Blunden","Oxford"},{"Helen Fielding","Oxford"},{"Art Clokey","usc"},{"John Nash","Carnegie Mellon"},{"Bill Bordley","University of Southern California"},{"John Milius","USC"} {"Zhang", "Shichahai School"} {"Chandramohan", "Maharaja Sayajirao University"} {"Sills", "the professional school"} {"Greenough", "School of Journalism"} {"Clay Johnson", "Phillips Academy"} {"Clay Johnson", "Yale University"} {"Hernandez", "Texas A &amp; M"} {"Alan J . Placa", "Bishop Loughlin Memorial High School"} {"Powers", "New York University Law School"} {"Powers", "Manhattan College"} {"Peter J . Powers", "Bishop Loughlin Memorial High School"} {"Khidr", "University of Central Florida"} {"Khidr", "business school"} {"Jonnatan Leiva", "High school"} {"Newman", "racing school"} {"Newman", "Kenyon College"} {"Newman", "Actors Studio"} {"Mugabe", "University of Fort Hare"} {"Mugabe", "University of London"}{"Mugabe", "University of Fort Hare"} {"Mugabe", "University of South Africa"} {&#8220;Roy Lubove&#8221;, &#8220;Columbia College&#8221;} {&#8220;Roy Lubove&#8221;, &#8220;Cornell University&#8221;} {&#8220;Tom Lehman&#8221;, &#8220;University of Minnesota&#8221;} {&#8220;Jared Cotter&#8221;, &#8220;Five Towns College&#8221;} {&#8220;Alli Sims&#8221;, &#8220;LSU&#8221;} {&#8220;Clive Davis&#8221;, &#8220;Harvard Law School&#8221;} {&#8220;Clive Davis&#8221;, &#8220;New York University&#8221;} {&#8220;Arsene Wenger&#8221;, &#8220;Strasbourg University&#8221;} {&#8220;Masi Oka&#8221;, &#8220;Brown University&#8221;} {&#8220;Levi Johnston&#8221;, &#8220;Wasilla High School&#8221;} {&#8220;Holly Madison&#8221;, &#8220;Portland State University&#8221;} {&#8220;Holly Madison&#8221;, &#8220;Loyola Marymount University&#8221;} {&#8220;Al Hubbard&#8221;, &#8220;Harvard Law School&#8221;} {&#8220;Chen Zhu&#8221;, &#8220;Shangai Second Medical University&#8221;} {&#8220;Danny Glover&#8221;, &#8220;San Francisco State&#8221;} {&#8220;John Kerry&#8221;, &#8220;Yale&#8221;} {&#8220;John Negroponte&#8221;, &#8220;Exeter Academy&#8221;} {&#8220;Juliette Binoche&#8221;, &#8220;National Conservatory of Dramatic Arts&#8221;} {&#8220;Mohamed ElBaradei&#8221;, &#8220;University of Cairo&#8221;} {&#8220;Richard Perle&#8221;, &#8220;Hollywood High School&#8221;} {&#8220;Roy Scheider&#8221;, &#8220;Rutgers&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * (attend OR attends OR attended OR attending OR enroll OR enrolls OR enrolled OR enrolling) * arg2</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>person has attended a school</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/education": [{ "/education/education/institution":[{ "name": null, "/common/topic/alias": [], "type": "/education/educational institution" }] }] }]</freebaseID><comment /></Relation><Relation id="190"><relationName>bookWriter</relationName><humanFormat>arg2 {wrote} the book arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>creativeWorkContributedToByAgent</generalizations><domain>book</domain><range>writer</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"Harry Potter And The Goblet Of Fire","Dan Brown"} {"Ulysses","Aldous Huxley"} {"The Great Gatsby","John Steinbeck"} {"Brave New World","James Joyce"} {"The Grapes of Wrath","F . Scott Fitzgerald"}</knownNegatives><inverse>writerWroteBook</inverse><seedInstances>{"Freakonomics", "Stephen Dubner"} {"Rich Dad Poor Dad","Robert Kiyosaki"} {"The South Beach Diet","Arthur Agatston"} {"The Da Vinci Code","Dan Brown"} {"Harry Potter And The Goblet Of Fire","J.K. Rowling"} {"The Purpose Driven Life","Rick Warren"} {"Ulysses","James Joyce"} {"The Great Gatsby","F . Scott Fitzgerald"} {"Brave New World","Aldous Huxley"} {"The Grapes of Wrath","John Steinbeck"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * written by * arg2</queryString><editDate /><author /><curator /><description>author of a book</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/book/book", "/book/written work/author": [{ "name": null, "/common/topic/alias": [], "type": "/book/author" }] }]</freebaseID><comment /></Relation><Relation id="191"><relationName>sportsGameTeam</relationName><humanFormat>arg2 is a sports team that {played in} arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>eventHasParticipantAgent</generalizations><domain>sportsGame</domain><range>sportsTeam</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>teamInGame</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg2 * (in OR at OR of OR on) * arg1</queryString><editDate /><author /><curator /><description>Specifies the teams that played in a particular sports game</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="192"><relationName>politicianUsHoldsOffice</relationName><humanFormat>arg1 is a U.S. politician who {holds the office of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>politicianHoldsOffice</generalizations><domain>politicianUs</domain><range>politicalOffice</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"John McCain","United States President"} {"Barack Obama","New York City Mayor"}  {"Barack Obama","New York City Mayor"}  { "Clarence Thomas"  "U.S. Senate Majority Leader"} { "Harry Reid" "U.S. Supreme Court justice",}</knownNegatives><inverse>officeHeldByPoliticianUs</inverse><seedInstances>{"Barack Obama" "United States President"}  {"George W . Bush" "United States President"} {"Hillary Clinton" "State Secretary"} {"John G . Roberts" "Supreme Court Chief Justice"} {"Robert Gates" "Defence Secretary"} {"Michael Bloomberg" "New York City Mayor"} {"Arnold Schwarzenegger" "California Governor"} {"Ben Bernanke" "Federal Reserve Chair"} {"John McCain" "United States Senator"} { "Nancy Pelosi", "House Speaker"} { "Harry Reid" "U.S. Senate Majority Leader"} { "Clarence Thomas", "U.S. Supreme Court justice"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>0</requiredForDomain><requiredForRange>1</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-08-31</editDate><author>Tae (via Bryan)</author><curator /><description>U.S. Politician who holds an office</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/government/politician", "/government/politician/government positions held": [{ "/government/government position held/office position or title": [{ "name": null, "/common/topic/alias": [], "/government/government office or title/jurisdiction": [{ "/location/location/containedby": [{ "name": "United States of America" }] }] }] }] }]</freebaseID><comment /></Relation><Relation id="193"><relationName>politicianMemberOfPoliticsGroup</relationName><humanFormat>arg1 is a politician who is a {member of} the political group arg2</humanFormat><populate>0</populate><visible>0</visible><generalizations>personBelongsToOrganization</generalizations><domain>politician</domain><range>politicsGroup</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>politicalGroupOfPolitician</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>0</requiredForDomain><requiredForRange>0</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-08-31</editDate><author>Tae (via Bryan)</author><curator /><description>Specifies that a particular politician belongs to a particular</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="194"><relationName>politicianUsMemberOfPoliticalGroup</relationName><humanFormat>arg1 is a U.S. politician who is a {member of} the political group arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>politicianMemberOfPoliticsGroup</generalizations><domain>politicianUs</domain><range>politicsGroup</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"Barack Obama" "Supreme Court"} {"John McCain" "Federal Reserve"}  {"Barney Frank" "U.S. Senate"} {"John McCain" "Republican Party"} {"Antonin Scalia" "Democratic Party"} {"David Obey" "Supreme Court"} {"Barack Obama" "House Committee on Appropriations"}</knownNegatives><inverse>politicalGroupOfPoliticianUs</inverse><seedInstances>{"Barack Obama" "The White House"} {"John G . Roberts" "Supreme Court"} {"Ben Bernanke" "Federal Reserve"} {"John McCain" "U.S. Senate"} {"Barbara Boxer" "U.S. Senate"} {"Barney Frank" "U.S. House of Representatives"} {"Harry Reid" "U.S. Senate"} {"John McCain" "Republican Party"} {"Barbara Boxer" "Democratic Party"} {"Antonin Scalia" "Supreme Court"} {"David Obey" "House Committee on Appropriations"} {"Barack Obama", "Barack Obama 's presidential campaign"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>0</requiredForDomain><requiredForRange>0</requiredForRange><queryString>arg1 * (in OR at OR of) * arg2</queryString><editDate>2010-08-31</editDate><author>Tae (via Bryan)</author><curator /><description>U.S. Politician who is member of a political group</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="195"><relationName>politicsGroupConcernsIssue</relationName><humanFormat>arg1 is a political group {concerned with} the issue of arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>politicsGroup</domain><range>politicsIssue</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan subjectConcernedByAcademicField</mutexExceptions><knownNegatives>{"Planned Parenthood" "gun control"} {"National Rifle Association" "pro choice"} {"ACLU" "fiscal policy"} {"American Bankers Association" "human rights"}  {"MoveOn.org" "Conservatism" } {"Greenpeace" "labor" } { "International Brotherhood of Teamsters" "environment"}</knownNegatives><inverse>issueOfPoliticsGroup</inverse><seedInstances>{"Planned Parenthood" "abortion"} {"Planned Parenthood" "pro choice"} {"ACLU" "human rights"} {"National Rifle Association" "gun control" } {"Cato Institute" "taxes"} {"American Bankers Association" "fiscal policy"} {"AFL-CIO" "race"}  {"MoveOn.org" "Liberalism"} { "Democratic Party" "Liberalism"} {"Republican Party" "Conservatism"} {"Greenpeace" "environment"} { "International Brotherhood of Teamsters" "labor"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>1</requiredForDomain><requiredForRange>0</requiredForRange><queryString>arg1 * (concerns OR concern OR concerned OR concerning) * arg2</queryString><editDate>2010-08-31</editDate><author>Tae (via Bryan)</author><curator /><description>Issues that a political group has concern about</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="196"><relationName>politicsBillConcernsIssue</relationName><humanFormat>arg1 is a legislative bill {to do with} the issue of arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>politicsBill</domain><range>politicsIssue</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan subjectConcernedByAcademicField</mutexExceptions><knownNegatives>{"Patient Safety and Quality Improvement Act" "national security"}{"Sarbanes-Oxley Act" "education"} {"PATRIOT Act" "health care"} {"Climate Stewardship Act" "civil rights"} {"American With Disabilities Act" "environment"} { "Social Security Act" "gun control" } {"Homeland Security Act" "environment"} </knownNegatives><inverse>issueOfPoliticsBill</inverse><seedInstances>{"Patient Safety and Quality Improvement Act" "health care"}{"Sarbanes-Oxley Act" "fiscal policy"} {"PATRIOT Act" "national security"} {"Climate Stewardship Act" "environment"} {"American With Disabilities Act" "labor"} {"1964 Civil Rights Act" "civil rights"} {"Health Insurance Portability and Accountability Act" "health care"} { "Social Security Act" "entitlement program" } { "Social Security Act" "health care"} {"Genetic Information Nondiscrimination Act" "civil rights" }  {"Genetic Information Nondiscrimination Act" "health care" } {"Homeland Security Act" "national security"} {"Educational Rights and Privacy Act" "education"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>1</requiredForDomain><requiredForRange>0</requiredForRange><queryString>arg1 * (concerns OR concern OR concerned OR concerning) * arg2</queryString><editDate>2010-08-31</editDate><author>Tae (via Bryan)</author><curator /><description>Issues that a legislative billl is concerned with.</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="197"><relationName>politicsBillSponsoredByPolitician</relationName><humanFormat>arg1 is a legislative bill {sponsored by} arg2</humanFormat><populate>0</populate><visible>0</visible><generalizations>relatedTo</generalizations><domain>politicsBill</domain><range>politician</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>politicianSponsoredPoliticsBill</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>1</requiredForDomain><requiredForRange>0</requiredForRange><queryString>arg2 * (sponsor OR sponsors OR sponsored OR sponsoring) * arg1</queryString><editDate>2010-08-31</editDate><author>Tae (via Bryan)</author><curator /><description>Politician(s) sponsoring a particular legislative bill</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="198"><relationName>politicsBillSponsoredByPoliticianUs</relationName><humanFormat>arg1 is a legislative bill {sponsored by} the U.S. politician arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>politicsBillSponsoredByPolitician</generalizations><domain>politicsBill</domain><range>politicianUs</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"Health Insurance Portability and Accountability Act" "Antonin Scalia"}  {"Patient Safety and Quality Improvement Act" "Ed Rendell"}  {"Sarbanes-Oxley Act" "James Buckley"} {"PATRIOT Act" "Barack Obama"}  {"Educational Rights and Privacy Act" "Mitt Romney"} {"Homeland Security Act"  "Jimmy Carter" } </knownNegatives><inverse>politicianUsSponsoredPoliticsBill</inverse><seedInstances>{"Health Insurance Portability and Accountability Act" "Edward Kennedy"} {"Health Insurance Portability and Accountability Act" "Nancy Kassebaum"}  {"Patient Safety and Quality Improvement Act" "Jim Jeffords"}  {"Sarbanes-Oxley Act" "Paul Sarbanes"} {"Sarbanes-Oxley Act" "Mike Oxley"} {"Genetic Information Nondiscrimination Act" "Louise Slaughter"} {"PATRIOT Act" "Jim Sensenbrenner"} {"Climate Stewardship Act" "John McCain"} {"Climate Stewardship Acts" "Joseph Lieberman"} {"Educational Rights and Privacy Act" "James Buckley"} {"Homeland Security Act"  "Mac Thornberry" }  { "Public Health Security and Bioterrorism Preparedness and Response Act" "Billy Tauzin" }</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>1</requiredForDomain><requiredForRange>0</requiredForRange><queryString>arg2 * (sponsor OR sponsors OR sponsored OR sponsoring) * arg1</queryString><editDate>2010-08-31</editDate><author>Tae (via Bryan)</author><curator /><description>U.S. Politician sponsoring a particular legislative bill</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="199"><relationName>politicianEndorsedByPolitician</relationName><humanFormat>arg1 is a politician {endorsed by} the politician arg2</humanFormat><populate>0</populate><visible>0</visible><generalizations>agentCollaboratesWithAgent</generalizations><domain>politician</domain><range>politician</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives /><inverse>politicianEndorsesPolitician</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>0</requiredForDomain><requiredForRange>0</requiredForRange><queryString>arg2 * (endorse OR endorses OR endorsed OR endorsing) * arg1</queryString><editDate>2010-08-31</editDate><author>Tae (via Bryan)</author><curator /><description>Politician that endorses another politician</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="200"><relationName>politicianUsEndorsedByPoliticianUs</relationName><humanFormat>arg1 is a U.S. politician {endorsed by} the U.S. politician arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>politicianEndorsedByPolitician</generalizations><domain>politicianUs</domain><range>politicianUs</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives>{"Barack Obama" "Rudy Giuliani"} {"Barack Obama" "John McCain"} {"Hillary Clinton" "Al Gore"} {"Hillary  Clinton" "Dick Cheney"} {"John McCain" "Bill Clinton"}  {"John McCain" "Caroline Kennedy"} </knownNegatives><inverse>politicianUsEndorsesPoliticianUs</inverse><seedInstances>{"Barack Obama" "Chris Dodd"} {"Barack Obama" "Hillary Clinton"} {"Hillary Clinton" "John Glenn"} {"Hillary  Clinton" "Luke Ravenstahl"} {"John McCain" "George W . Bush"}  {"John McCain" "Fred Thompson"} {"Hillary  Clinton" "Bill Clinton"} {"Hillary Clinton" "Wesley Clark"} {"Barack Obama" "Caroline Kennedy"} {"Barack Obama" "Al Gore"} {"John McCain" "Dick Cheney"} {"John McCain" "Rudy Giuliani"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>0</requiredForDomain><requiredForRange>0</requiredForRange><queryString>arg2 * (endorse OR endorses OR endorsed OR endorsing) * arg1</queryString><editDate>2010-08-31</editDate><author>Tae (via Bryan)</author><curator /><description>U.S. Politician that endorses another U.S. politician</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="201"><relationName>politicianRepresentsLocation</relationName><humanFormat>arg1 {represents} the region arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentRelatedToLocation</generalizations><domain>politician</domain><range>location</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"John McCain", "New York"}{"Barack Obama","Germany"}{"Michael Bloomberg","Washington"}</knownNegatives><inverse>locationRepresentedByPolitician</inverse><seedInstances>{"John Murtha", "Johnstown"}{"Barack Obama", "United States"}{"John McCain", "Arizona"}{"Harry Reid", "Nevada"}{"Jim Webb", "Virginia"}{"Dick Durbin", "Illinois"}{"Michael Bloomberg", "New York City"}{"Barney Frank", "Wellesley"}{"Rudy Giuliani", "New York City"}{"Bill Clinton", "United States"}{"Joe Lieberman", "Connecticut"}{"Phil Gramm", "Texas"}{"Lindsey Graham", "South Carolina"}{"Jesse Helms", "North Carolina"}{"Helmut Kohl", "Germany"}{"John Major", "UK"}{"Francois Mitterrand", "France"}{"Dianne Feinstein", "California"}</seedInstances><seedExtractionPatterns>"arg1 represents arg2" "arg1 ' s home district is arg2"</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString /><editDate>2010-12-08</editDate><author>Tom</author><curator /><description>Describes the city, state, country or other location represented by a politician</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="202"><relationName>placeOfWorshipPracticesReligion</relationName><humanFormat>arg1 is a place of worship {that practices} the religion of arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>locatedAt</generalizations><domain>placeOfWorship</domain><range>religion</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> {"Kuopio Cathedral" "Buddhism"} {"Westminster Abbey" "Judaism"} {"Hagia Sophia" "Islam"} {"Htilominlo Temple" "Catholicism"} {"Muktinath" "Baptist"} {"San Francisco Zen Center" "Hinduism"} {"Ganden Monastery" "Islam"}</knownNegatives><inverse>religionUsesPlaceOfWorship</inverse><seedInstances> {"Kuopio Cathedral" "Lutheran"} {"Westminster Abbey" "Christianity"} {"Htilominlo Temple" "Buddhism"} {"Muktinath" "Hinduism"} {"San Francisco Zen Center" "Buddhism"} {"Ganden Monastery" "Buddhism"} {"Banteay Srei" "Hinduism"} {"East Ham Baptist Church" "Baptist"} {"Sleepy Hollow Presbyterian Church" "Presbyterianism"} {"The Great Mosque of Taza" "Islam"} {"The Hurva Synagogue" "Judaism"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2010-11-10</editDate><author>Burr</author><curator /><description>The religion practied in a place of worship.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/religion/place of worship", "/religion/place of worship/religion": [{ "name": null, "/common/topic/alias": [], "type": "/religion/religion" }] }]</freebaseID><comment /></Relation><Relation id="203"><relationName>personHasReligion</relationName><humanFormat>arg1 {belongs to} the religion arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>religion</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>religionOfPerson</inverse><seedInstances>{&#8220;Abubakar Abdurajak Janjalani&#8221;, &#8220;Muslim&#8221;} {&#8220;Tom Lehman&#8221;, &#8220;Christian&#8221;} {&#8220;Diane Olson&#8221;, &#8220;Jewish&#8221;} {&#8220;Emile Lahoud&#8221;, &#8220;Christian&#8221;} {&#8220;Steve Schalchlin&#8221;, &#8220;Baptist&#8221;} {&#8220;Annie Liebovitz&#8221;, &#8220;Jewish&#8221;} {&#8220;Richard Goldstone&#8221;, &#8220;Jewish&#8221;} {&#8220;Abdul Jalil Jan&#8221;, &#8220;Islam&#8221;} {&#8220;Abu Zubaydah&#8221;, &#8220;Muslim&#8221;} {&#8220;John Kerry&#8221;, &#8220;Catholic&#8221;} {&#8220;Murat Kurnaz&#8221;, &#8220;Muslim&#8221;} {&#8220;Richard Perle&#8221;, &#8220;Jewish&#8221;} {&#8220;Yolanda King&#8221;, &#8220;Baptist&#8221;} {&#8220;Theodor Kollek&#8221;, &#8220;Jew&#8221;} {&#8220;Steve Schalchlin&#8221;, &#8220;Baptist&#8221;} {&#8220;Irene Kirkaldy&#8221;, &#8220;Seven-day Adventist&#8221;} {&#8220;Harry Dent&#8221;, &#8220;Southern Baptist&#8221;} {&#8220;Carolyn Goodman&#8221;, &#8220;Jew&#8221;} {&#8220;Andre Carson&#8221;, &#8220;Islam&#8221;} {&#8220;Alice Goodman&#8221;, &#8220;Anglican&#8221;} {&#8220;Barry Knight&#8221;, &#8220;Baptist&#8221;} {&#8220;Cuthbert Scott&#8221;, &#8220;Roman Catholic&#8221;} {&#8220;David Roskies&#8221;, &#8220;Judaism&#8221;} {&#8220;Emily Sunstein&#8221;, &#8220;Jewish&#8221;} {&#8220;Forrest Dunn&#8221;, &#8220;Episcopal&#8221;} {&#8220;Fredie Prinze&#8221;, &#8220;Roman Catholic&#8221;} {&#8220;Grigory Potemkin&#8221;, &#8220;Russian Orthodox&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2013-02-15</editDate><author>Bryan</author><curator /><description>The religion to which a person has belonged.</description><freebaseID /><comment>TAC KBP 2012</comment></Relation><Relation id="204"><relationName>personHasEthnicity</relationName><humanFormat>arg1 {belongs to} the ethnic group arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>ethnicGroup</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>ethnicGroupOfPerson</inverse><seedInstances>{&#8220;Carla Del Ponte&#8221;, &#8220;Swiss&#8221;} {&#8220;Zacarias Moussaoui&#8221;, &#8220;French&#8221;} {&#8220;Orly Taitz&#8221;, &#8220;Soviet&#8221;} {&#8220;Annise Parker&#8221;, &#8220;American&#8221;} {&#8220;Corey Bohan&#8221;, &#8220;Australian&#8221;} {&#8220;Arsene Wenger&#8221;, &#8220;French&#8221;} {&#8220;Masi Oka&#8221;, &#8220;Japanese-American&#8221;} {&#8220;Amy MacDonald&#8221;, &#8220;Scottish&#8221;} {&#8220;Kurt Westergaard&#8221;, &#8220;Danish&#8221;} {&#8220;David Coleman Headley&#8221;, &#8220;Pakistani-American&#8221;} {&#8220;Abudl Karim al-Khawinay&#8221;, &#8220;Yemeni&#8221;} {&#8220;Spelman College&#8221;, &#8220;Palestinian&#8221;} {&#8220;Barbara Boxer&#8221;, &#8220;American&#8221;} {&#8220;Hussein Kamel&#8221;, &#8220;Iraqi&#8221;} {&#8220;Jerome Robbins&#8221;, &#8220;Russian-Jewish&#8221;} {&#8220;Juliette Binoche&#8221;, &#8220;French&#8221;} {&#8220;Hia Farrow&#8221;, &#8220;American&#8221;} {&#8220;Murat Kurnaz&#8221;, &#8220;Turkish&#8221;} {&#8220;Ospel&#8221;, &#8220;Swiss&#8221;} {&#8220;Paavo Nurmi&#8221;, &#8220;Finnish&#8221;} {&#8220;Paul Watson&#8221;, &#8220;Canadian&#8221;} {&#8220;Richard Perle&#8221;, &#8220;Israeli&#8221;} {&#8220;Roy Scheider&#8221;, &#8220;American&#8221;} {&#8220;Vernon Bellecourt&#8221;, &#8220;Lakota&#8221;} {&#8220;Theodor Kollek&#8221;, &#8220;Israeli&#8221;} {&#8220;Steven Derounian&#8221;, &#8220;Armenian&#8221;} {&#8220;Silvestre Heerrera&#8221;, &#8220;Mexican&#8221;} {&#8220;Richard Nolte&#8221;, &#8220;American&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2013-02-15</editDate><author>Bryan</author><curator /><description>The ethnicity of a person</description><freebaseID /><comment>TAC KBP 2012</comment></Relation><Relation id="205"><relationName>agentHasWebsite</relationName><humanFormat>arg1 operates the {website} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentRelatedToLocation</generalizations><domain>agent</domain><range>website</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>hasWikipediaURL</mutexExceptions><knownNegatives> {"Google" "yahoo.com"} {"WordPress" "fawm.org"} {"Wil Wheaton" "msn.com"} {"Miscrosoft" "backpackit.com"} {"Metaweb" "developers.facebook.com"}</knownNegatives><inverse>websiteOperatedByAgent</inverse><seedInstances>{"February Album Writing Month" "fawm.org"} {"Wil Wheaton" "wilwheaton.net"} {"Derek Powazek" "powazek.com"} {"Miscrosoft" "msn.com"} {"Dark Dark Dark" "brightbrightbright.com"} {"37signals" "backpackit.com"} {"Metaweb" "www.freebase.com"} {"Facebook" "developers.facebook.com"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString /><editDate>2010-11-10</editDate><author>Burr</author><curator /><description>The organization that operates a website</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/internet/website owner", "/internet/website owner/websites owned": [{ "name": null, "/common/topic/alias": [] }] }]</freebaseID><comment /></Relation><Relation id="206"><relationName>hasWikipediaURL</relationName><humanFormat>arg1 can be {found on Wikipedia} at arg2</humanFormat><populate>0</populate><visible>1</visible><generalizations>atLocation</generalizations><domain>everyPromotedThing</domain><range>url</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>agentHasWebsite</mutexExceptions><knownNegatives /><inverse>wikipediaURLOf</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-07-09</editDate><author>Bryan</author><curator /><description>The Wikipedia page for a given category instance</description><freebaseID /><comment /></Relation><Relation id="207"><relationName>hasVisualAppearance</relationName><humanFormat>arg1 has {visual appearance} arg2</humanFormat><populate>0</populate><visible>1</visible><generalizations>atLocation</generalizations><domain>visualizableThing</domain><range>url</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>visualAppearanceOf</inverse><seedInstances /><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2013-09-19</editDate><author>Bryan</author><curator /><description>The NEIL-learned visual appearance of something</description><freebaseID /><comment /></Relation><Relation id="208"><relationName>organizationHasOfficialWebsite</relationName><humanFormat>arg1 has {official website} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentHasWebsite</generalizations><domain>organization</domain><range>website</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>officialWebsiteOfOrganization</inverse><seedInstances> {"Google" "google.com"} {"YouTube" "youtube.com"} {"WordPress" "wordpress.com"} {"Miscrosoft" "microsoft.com"} {"Twitter" "twitter.com"} {"Facebook" "facebook.com"} {&#8220;Internal Revenue Service&#8221;, &#8220;irs.gov&#8221;} {&#8220;National Rifle Association&#8221;, &#8220;www.nra.org&#8221;} {&#8220;Free Thinking Film Society&#8221;, &#8220;www.freethinkingfilms.com&#8221;} {&#8220;Canadian Islamic Congress&#8221;, &#8220;canadianislamiccongress.com&#8221;} {&#8220;GLSEN&#8221;, &#8220;http://www.glsen.org&#8221;} {&#8220;Cingular&#8221;, &#8220;http://www.cingular.com&#8221;} {&#8220;FEMA&#8221;, &#8220;fema.gov&#8221;} {&#8220;Lancome&#8221;, &#8220;www.lancome.com&#8221;} {&#8220;Peter D. Hart Research Associates&#8221;, &#8220;http://www.hartresearch.com&#8221;} {&#8220;AQR Capital Management&#8221;, &#8220;www.aqr.com&#8221;} {&#8220;Army Medical Command&#8221;, &#8220;http://www.armymedicine.army.mil&#8221;} {&#8220;Denso&#8221;, &#8220;http://www.densoaftermarket.com&#8221;} {&#8220;FMCSA&#8221;, &#8220;www.fmcsa.dot.gov&#8221;} {&#8220;Hong Kong Disneyland&#8221;, &#8220;http://www.hongkongdisneyland.com&#8221;} {&#8220;MBIA&#8221;, &#8220;http://www.mbia.com&#8221;} {&#8220;Markit&#8221;, &#8220;http://www.markit.com&#8221;} {&#8220;National Action Network&#8221;, &#8220;http://www.nationalactionnetwork.net&#8221;} {&#8220;SLDN&#8221;, &#8220;www.sldn.org&#8221;} {&#8220;Zagat&#8221;, &#8220;zagat.com&#8221;} {&#8220;Safe Passage&#8221;, &#8220;safepassage.org&#8221;} {&#8220;Norwegian University of Science and Technology&#8221;, &#8220;ntnu.no&#8221;} {&#8220;New York Immigration Coalition&#8221;, &#8220;thenyic.org&#8221;} {&#8220;Country Music Association&#8221;, &#8220;cmaworld.com&#8221;} {&#8220;Asian Development Bank&#8221;, &#8220;adb.org&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2013-02-15</editDate><author>Bryan</author><curator /><description>An official top-level URL for an organization's website</description><freebaseID /><comment>TAC KBP 2012</comment></Relation><Relation id="209"><relationName>drugWorkedOnByAgent</relationName><humanFormat>arg1 is a drug {worked on} by arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>itemInvolvedWithAgent</generalizations><domain>drug</domain><range>humanAgent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>producedBy typeProducedBy</mutexExceptions><knownNegatives>{"Viagra", "Merk"} {"Mozobil", "Pfizer"} {"Viracept", "Hoffman LaRoche"} {"Viagra", "Hoffman LaRoche"} {"Viagra", "Anormed"}</knownNegatives><inverse>agentWorkedOnDrug</inverse><seedInstances>{"Mozobil", "Anormed"} {"Velcade", "Millenium"} {"celecoxib", "Searle"} {"Fabrazyme", "Genzyme"} {"Viagra", "Pfizer"} {"IL-12", "Hoffman LaRoche"} {"IL-12", "the company"} {"IL-12", "Hoffman LaRoche"} {"verapamil", "Monsanto Co .'s G .D . Searle division"} {"Covera-HS", "the company"} {"Covera-HS", "Monsanto Co .'s G .D . Searle division"} {"Viracept", "Agouron Pharmaceuticals Inc ."} {"TXB 1296", "Texas Biotechnology"} {"anti-cancer compound", "NZ scientists"} {"indinavir sulfate", "Merck"} {"a promising anticancer substance in a shrub", "Cerylid Biosciences"} {"a unique chemical in latex produced by the Bintangor tree", "Scientists"} {"Calanolide A", "Scientists"} {"Celebrex", "Talley"} {"three other so-called COX-2 inhibitors", "Talley"} {"Calanolide A", "MediChem Research"} {"a cancer drug", "ImClone Systems"} {"Erbitux", "ImClone Systems"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-02-08</editDate><author>Bryan</author><curator /><description>This predicate relates a substance and a HumanAgent who is responsible for it.  Responsibility is understoond relatively broadly, and includes people or organizations responsible for the substance's discovery or marketing and manufacturing.  Additionally, agents that own the rights to the substance are also eligible to participate in this relationship.  Note that the humanAgent category include organizations, including universities, companies, and government agencies.</description><freebaseID>none</freebaseID><comment>Added for February 2011 BLITZ run</comment></Relation><Relation id="210"><relationName>agentStudiesPhysiologicalCondition</relationName><humanFormat>arg1 is a person who {studies} the physiological condition arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>physiologicalCondition</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>physiologicalConditionStudedByPerson</inverse><seedInstances>{"Matti Viitanen", "Alzheimers disease"} {"Dr . Denis A . Evans", "Alzheimer ' s"} {"Dr . Creighton Phelps", "Alzheimers disease"} {"University of Southern California researchers", "Alzheimer ' s disease"} {"Samir Khleif", "cancer"} {"a US researcher", "cervical cancer"} {"John Schiller", "cervical cancer"} {"Dr Henri Joyeux", "cancer"} {"Michael Leitzmann", "cancer"} {"Maria Hedelin", "prostate cancer"} {"Rui", "cancer"} {"Rui Zheng", "cancer"} {"a researcher", "viruses armed with suicide genes"} {"Savio Woo", "viruses armed with suicide genes"} {"Leon Schwartzenberg", "cancer"} {"Zhang Hongfei", "infectious disease"} {"researchers at the Veterans Affairs Medical Center in New Mexico", "hepatocellular carcinoma"} {"Dr . Thierry Poynard", "cirrhosis"} {"Charles M . Rice", "hepatitis"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-02-08</editDate><author>Bryan</author><curator /><description>This predicate holds between a HumanAgent and a condition, and means that the HumanAgent performs research related to condition.</description><freebaseID>none</freebaseID><comment>Added for February 2011 BLITZ run</comment></Relation><Relation id="211"><relationName>drugPossiblyTreatsPhysiologicalCondition</relationName><humanFormat>arg1 is a drug that {might treat} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>drug</domain><range>physiologicalCondition</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives>{"AZT", "cancer"} {"AZT", "breast cancer"} {"antiretroviral", "stroke"} {"letrozole", "AIDS"} {"Taxol", "HIV"} {"shark cartilage", "HIV"} {"Avapro HCT", "cancer"} {"Crixivan", "high blood pressure"} {"lectins", "stroke"}</knownNegatives><inverse>physiologicalConditionPossiblyTreatedByDrug</inverse><seedInstances>{"Viracept", "HIV"} {"AZT", "AIDS"} {"Atripla", "AIDS"} {"anti-retroviral", "HIV/AIDS"} {"Crixivan", "AIDS"} {"antiretroviral", "AIDS"} {"antiretroviral (ARV)", "AIDS"} {"protease inhibitors", "HIV"} {"AZT", "AIDS"} {"tamoxifen", "breast cancer"} {"letrozole", "breast cancer"} {"GnRH analogues", "prostate cancer"} {"GnRH analogues", "breast cancer"} {"Erbitux", "cancer"} {"Taxol", "breast cancer"} {"doxorubicin", "breast cancer"} {"cyclophosphamide", "breast cancer"} {"shark cartilage", "cancer"} {"shark cartilage", "breast cancer"} {"Avapro HCT", "high blood pressure"} {"warfarin", "stroke"} {"lectins", "human lung cancer"} {"lectins", "mouse muscle cancer"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-02-08</editDate><author>Bryan</author><curator /><description>relates a substance to a condition that it might treat. This relation includes conditions that the substance has been designed or approved to treat, as well as conditions for which it is being investigated as a possible treatment.  Common folk remedies would also be eligible for this relation.  For example, it would be reasonable to say that "chicken noodle soup" is a possible treatment for "colds".</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/medicine/drug", "/medicine/medical treatment/used to treat": [{ "name": null, "/common/topic/alias": [] }] }]</freebaseID><comment>Added for February 2011 BLITZ run</comment></Relation><Relation id="212"><relationName>drugExpectedReleaseDate</relationName><humanFormat>arg1 is {expected to come to market} on arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>atDate</generalizations><domain>drug</domain><range>date</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>releaseDateExpectedForDrug</inverse><seedInstances>{"Avastin", "Thursday"} {"Avastin", "2004-02-26"} {"Zoloft", "later this year"} {"Zoloft", "1999"} {"Cialis", "this year"} {"Cialis", "2002"} {"Forteo", "this year"} {"Forteo", "2002"} {"Atomexetine", "this year"} {"Atomexetine", "2002"} {"Duloxetine", "this year"} {"Duloxetine", "2002"} {"generic versions of Tiazac", "the end of the year"} {"generic versions of Tiazac", "2002"} {"NicoDerm CQ patch", "August"} {"NicoDerm CQ patch", "1996-08"} {"Nicotrol patch", "July"} {"Nicotrol patch", "1996-07"} {"Nicorette gum", "Earlier in the year"} {"Nicorette gum", "1996"} {"medication", "Earlier in the year"} {"medication", "1996"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-02-08</editDate><author>Bryan</author><curator /><description>This predicate represents the relationship between a pharmaceutical substance and the date when it is expected to be approved for legal marketing.  For our purposes, the date will typically correspond to a date for FDA approval, but the relationship itself is not restricted to approval for sale in the United States.</description><freebaseID>none</freebaseID><comment>Added for February 2011 BLITZ run</comment></Relation><Relation id="213"><relationName>drugHasSideEffect</relationName><humanFormat>arg1 is a {drug having the side effect} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>drug</domain><range>physiologicalCondition</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives>{"LSD", "constipation"} {"Vioxx", "bipolar disorder"} {"tylenol", "sexual dysfunction"} {"tylenol", "weight gain"} {"Celebrex", "birth defects"} {"LSD", "liver damage"}</knownNegatives><inverse>sideEffectCausedByDrug</inverse><seedInstances>{"thalidomide", "birth defects"} {"tylenol", "liver damage"} {"tamoxifen", "exhausted"} {"Vioxx", "cardiovascular problems"} {"Vioxx", "strokes"} {"Vioxx", "heart attacks"} {"Celebrex", "heart attacks"} {"Vioxx", "high blood pressure"} {"Vioxx", "edema"} {"Celebrex", "gastrointestinal bleeding"} {"Celebrex", "ulcers"} {"Vioxx", "heart problems"} {"LSD", "flashbacks"} {"the drugs", "bipolar disorder"} {"SSRIs", "bipolar disorder"} {"Prozac", "sexual dysfunction"} {"Elavil", "dry mouth"} {"Elavil", "constipation"} {"Elavil", "weight gain"} {"Imipramine", "dry mouth"} {"Imipramine", "constipation"} {"Imipramine", "weight gain"} {"Imipramine", "blurred vision"} {"Tofranil", "dry mouth"} {"Tofranil", "constipation"} {"Tofranil", "weight gain"} {"Tofranil", "blurred vision"} {"Elavil", "blurred vision"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-02-08</editDate><author>Bryan</author><curator /><description>This predicate indicates that the use of a drug has a physiologicalCondition as a side-effect.  Uses of this predicate may include both very common side-effects, and rare but reported side-effects.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/medicine/drug", "/medicine/medical treatment/side effects": [{ "name": null, "/common/topic/alias": [] }] }]</freebaseID><comment>Added for February 2011 BLITZ run</comment></Relation><Relation id="214"><relationName>farmLocatedInState</relationName><humanFormat>arg1 is a farm {in the state or province} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>locationLocatedWithinLocation</generalizations><domain>farm</domain><range>stateOrProvince</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>stateContainsFarm</inverse><seedInstances>{"Wood Prarie Farm" "Maine"} {"Heritage Farms" "Ohio"} {"Waltham Fields Community Farm" "Massachusetts"} {"Delta Farm" "Washington"} {"Jacobs Farm" "California"} {"Johnson Farm" "California"} {"Zenger Farm" "Oregon"} {"Rogers Farm" "Florida"} {"Maple View Farm" "North Carolina"} {"South Farm" "Ohio"} {"Roxbury Farm" "New York"} {"Cole Farms" "West Virginia"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-03-25</editDate><author>Justin</author><curator /><description>The state/province a farm is located in</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="215"><relationName>farmLocatedInCountry</relationName><humanFormat>arg1 is a farm {in the country} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>locationLocatedWithinLocation</generalizations><domain>farm</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>countryContainsFarm</inverse><seedInstances>{"Wood Prarie Farm" "United States"} {"Heritage Farms" "United States"} {"Waltham Fields Community Farm" "United States"} {"Delta Farm" "United States"} {"Jacobs Farm" "United States"} {"Johnson Farm" "United States"} {"Zenger Farm" "United States"} {"Rogers Farm" "United States"} {"Maple View Farm" "United States"} {"South Farm" "United States"} {"Roxbury Farm" "United States"} {"Cole Farms" "United States"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-03-25</editDate><author>Justin</author><curator /><description>The country a farm is located in</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="216"><relationName>farmProducesAgriculturalProduct</relationName><humanFormat>arg1 is a farm that {produces} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>locationOfItemExistence</generalizations><domain>farm</domain><range>agriculturalProduct</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>agriculturalProductProducedByFarm</inverse><seedInstances>{"Roxbury Farm" "vegetables"} {"Roxbury Farm" "beets"} {"Roxbury Farm" "corn"} {"Roxbury Farm" "broccoli"} {"Maple View Farm" "ice cream"} {"Maple View Farm" "milk"} {"Maple View Farm" "dairy products"} {"Rogers Farm" "vegetables"} {"Rogers Farm" "fruit"} {"Rogers Farm" "berries"} {"Rogers Farm" "strawberries"} {"Zenger Farm" "vegetables"} {"Zenger Farm" "onions"} {"Johnson Farm" "Christmas trees"} {"Jacobs Farm" "herbs"} {"Waltham Fields Community Farm" "vegetables"} {"Heritage Farms" "pumpkins"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-03-25</editDate><author>Justin</author><curator /><description>the agricultural products produced by a farm</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="217"><relationName>marriedInYear</relationName><humanFormat>arg1 got {married in} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>atDate</generalizations><domain>person</domain><range>year</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>yearOfMarriage</inverse><seedInstances>{"Liam Gallagher", "1997"} {"Patsi Kensit", "1997"} {"Alvin E . Dodd", "1921"} {"she", "1921"} {"Catherine Filene Shouse", "1921"} {"Mandela", "1998"} {"Nelson Mandela", "1998"} {"he", "1995"} {"Imran Khan", "1995"} {"Jemima Goldsmith", "1995"} {"Michael Jackson", "1994"} {"Lisa Marie Presley", "1994"} {"They", "1982"} {"Patricia Verdier", "1982"} {"They", "1982"} {"Walter Bergman", "1982"} {"Mark Phillips", "1973"} {"Prince Charles", "1981"} {"Diana", "1981"} {"Selden", "1956"} {"David Selden", "1956"} {"Bernice Seach", "1956"} {"Woody Allen", "1997"} {"Soon-Yi Previn", "1997"} {"Kit Chalcraf", "1995"} {"Susanne Hal", "1995"} </seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-03-28</editDate><author>Bryan</author><curator /><description>This relation holds when a person married some other person in the specified year.</description><freebaseID>none</freebaseID><comment>For BLITZ2</comment></Relation><Relation id="218"><relationName>organizationHiredPerson</relationName><humanFormat>arg1 {hired} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>worker</generalizations><domain>organization</domain><range>person</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>organizationTerminatedPerson</mutexExceptions><knownNegatives /><inverse>personHiredByOrganization</inverse><seedInstances>{"Affiliated Managers Group", "Brian Girvan"} {"Putnam", "Janis Miller"} {"The firm", "Gordon Hall"} {"Morgan Stanley &amp; Co", "Gordon Hall"} {"Oracle", "Ray Lane"} {"the Boston public school system", "I"} {"Quaker State", "He"} {"Quaker State", "William W . Tucker"} {"Cal", "Holmoe"} {"Cal", "Tom Holmoe"} {"Vietnam Veterans of America Foundation", "Williams"} {"Vietnam Veterans of America Foundation", "Jody Williams"} {"Jaguars", "Tom Coughlin"} {"Procter &amp; Gamble Co", "Fernandez"} {"Procter &amp; Gamble Co", "Leopoldo Fernandez"} {"the original Toronto production of ``Godspell .''", "They"} {"the original Toronto production of ``Godspell .''", "Gilda Radner"} {"the original Toronto production of ``Godspell .''", "They"} {"the original Toronto production of ``Godspell .''", "Martin Short"} {"Boston Bruins", "Tom McVie"} {"the organization", "Steve Kasper"} {"Boston Bruins", "Steve Kasper"} {"Lehman", "Philippe Burke"} {"Lehman Brothers Holdings Inc .", "Philippe Burke"} {"Dreyfus", "Michael Schonberg"} {"the force", "She"} {"the force", "Maurita Bryant"} {"the Pittsburgh police force", "She"} {"the Pittsburgh police force", "Maurita Bryant"} {"Triumph Motors", "Ward"} {"Triumph Motors", "Peter Ward"} {"Hofstra", "he"} {"Hofstra", "Robert Sobel"} {"Charles Scwhab Corp .", "Linnet Deily"} {"Mrs . Field ' s Cookies", "Tanner"} {"Mrs . Field ' s Cookies", "Mark Tanner"} {"French Army", "She"} {"French Army", "Batsheva de Rothschild"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-03-28</editDate><author>Bryan</author><curator /><description>This relation connects an organization to individuals that it hired.  It does include people hired as contractors, not just people hired as employees. It does not include elected officials. It does not include organizations that may be hired for some particular purpose. Typically, hiring someone does involve paying them, though that is seldom stated explicitly when the relation is mentioned. A hiring event (the actual initiation of the employment) must be mentioned for this relation to apply; if the text just says that Mary Smith works for IBM, that is not enough to assert a hired relation.</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/business/employer", "/business/employer/employees": [{ "/business/employment tenure/person": [{ "name": null, "/common/topic/alias": [] }] }] }]</freebaseID><comment>For BLITZ2</comment></Relation><Relation id="219"><relationName>organizationTerminatedPerson</relationName><humanFormat>arg1 {terminated} the employment of arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>worker</generalizations><domain>organization</domain><range>person</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>organizationHiredPerson</mutexExceptions><knownNegatives /><inverse>personTerminatedByOrganization</inverse><seedInstances>{"Russian Defense Ministry", "Semyonov"} {"Russian Defense Ministry", "Vladimir Semyonov"} {"South Korea", "Lee Won-Jong"} {"Hydron Technologies", "Harvey Tauman"} {"Rams", "Rich Brooks"} {"Egypt", "Yehia Kazarian"} {"Egypt", "Tim Hatrich"} {"Kremlin", "Alexander Korzhakov"} {"Sri Lanka", "Arjuna Ranatunga"} {"bank", "Svetlana Kudryavtsev"} {"Bank of New York", "Svetlana Kudryavtsev"} {"Smith Barney Inc .", "Robert B . Maloney"} {"army", "Moshe Ben Zikri"} {"Israeli army", "Moshe Ben Zikri"} {"Army", "Bleckley"} {"Army", "Jessica Bleckley"} {"University of Pennsylvania", "Cochran"} {"University of Pennsylvania", "Thomas C . Cochran"} {"Hiscock &amp; Barclay", "partner"} {"Hiscock &amp; Barclay", "Albert Hessberg II"} {"Lotus Development Corp .", "Edwin Gillis"} {"49ers", "George Seifert"} {&#8220;Army&#8221;, &#8220;Bleckley&#8221;} {&#8220;Army&#8221;, &#8220;Jessica Bleckley&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-03-28</editDate><author>Bryan</author><curator /><description>This relation holds when the organization has teminated the employment relationship. This includes firings, RIFs, resignations, and retirements. Normal ending of a contract does not constitute terminatedEmployment. A termination event (the endinf of the employment) must be mentioned for this relation to apply; if the text just says that Mary Smith used to work for IBM, that is not enough to assert a terminatedEmployment relation. </description><freebaseID>none</freebaseID><comment>For BLITZ2</comment></Relation><Relation id="220"><relationName>personHasJobPosition</relationName><humanFormat>arg1 {held the position of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>jobPosition</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>jobPositionHeldByPerson</inverse><seedInstances>{"Timothy Harris", "vice president"} {"Timothy Harris", "managing director"} {"Datuk Lim Ah Lek", "Human Resources Minister"} {"Jack Atterberry", "director of campaign reporting"} {"Robert F . Wagner", "Mayor"} {"Doug Hannaway", "Police Superintendent"} {"He", "deputy superintendent of insurance"} {"Joseph Murphy", "deputy superintendent of insurance"} {"Bill Richardson", "Energy Secretary"} {"Enrique ter Horst", "special representative for Haiti"} {"Hayward", "vice admiral"} {"John Hayward", "vice admiral"} {"Charlene Barshefsky", "acting US trade representative"} {"Schottland", "chairman"} {"Charles Irwin Schottland", "chairman"} {"Eduardo Duhalde", "Governor"} {"Randolph Smoak Jr .", "secretary-treasurer"} {"George Tilley", "sheriff"} {"Mohammed", "prophet"} {"Hanna Gronkiewicz-Waltz", "mayor"} {"Mikhail Gorbachev", "leader"} {"Mohammad Khatami", "president"} {"Zoran Djindjic", "prime minister"} {"Haim Ramon", "justice minister"} {"Al Gore", "vice president"} {"Abu Izzadeen", "cleric"} {"Anwar Bunni", "activist"} {"Slobodan Milosevic", "president"} {"Ahmad Abdullah al-Sabah", "Sheikh"} {"Theo van Gogh", "columnist"} {"Toomas Hendrik Ilves", "President"} {"Paul Klebnikov", "journalist"} {"Diana", "Princess"} {"Anwar Bunni", "lawyer"} {"Abdullah Ocalan", "leader"} {"Leyla Zana", "members of Parliament"} {"Robert Mugabe", "President"} {"Michel Kilo", "writer"} {"Frank-Walter Steinmeier", "Foreign Minister"} {"Arnaldo Otegi", "leader"} {"Ramush Haradinaj", "prime minister"} {"Theo van Gogh", "filmmaker"} {"Zaddick Elimelech Weissblum", "leader"} {"Ahmad Abdullah al-Sabah", "health minister"} {"Philippe Val", "director of publications"} {"Jose Bove", "activist"} {"Thich Nhat Hanh", "leader"} {"Andris Piebalgs", "Energy Commissioner"} {"Mahmud Issa", "activist"} {"Todor Jivkov", "dictator"} {"Michel Kilo", "analyst"} {"Otylia Jedrzejczak", "swimmer"} {"Thoraya Obaid", "executive director"} {"Antoinette Batumubwira", "Minister of Foreign Affairs"} {"Georg Buschner", "defender"} {"Oerter", "track and field athlete"} {"Alan Ball", "captain"} {"Konno", "prop forward"} {"Woodruff", "lieutenant colonel"} {"Jack Newton", "golfer"} {"Bruce Devlin", "golfer"} {"Joe Montana", "quarterback"} {&#8220;Bruce Crampton", "golfer"} {"Sir Stafford Cripps", "Chancellor of the Exchequer"} {"Woodruff", "athlete"} {"Sardesai", "batsman"} {"Silvio Berlusconi", "Prime Minister"} {"Derwall", "coach"} {"Woodruff", "officer"} {"Ski jump guru", "coach"} {"George Steinbrenner", "owner"} {"Burdette", "pitcher"} { "Charles O. Finley", "owner"} {"Manuel Galrinho Bento", "goalkeeper"} {"Coulthard", "test driver"} {"Massa", "tester"} {"Sutil", "pianist"} {"Rosberg", "tester"} {"Rezazadeh", "lifter"} {"Chris Paul", "guard"} {"Tishchenko", "boxer"} {"Mirza", "tennis player"} {"Tony Estanguet", "kayakar"} {"Nikolai Khromov", "manager"} {"Prapawadee Charoenrattanatharakul", "lifter"} {"Germaine Tillion", "anthropologist"} {"Youssef Chahine", "filmmaker"} {"Suharto", "dictator"} {"Miriam Makeba", "singer"} {"Joern Utzon", "architect"} {"Chingiz Aitmatov", "writer"} {"Richard Widmark", "actor"} {"Cyd Charisse", "dancer"} {"Sister Emmanuelle", "charity worker"} {"Alexander Solzhenitsyn", "writer"} {"Yma Sumac", "Soprano"} {"Joerg Haider", "politician"} {"Mahmud Darwish", "poet"} {"Levy Mwanawasa", "president"} {"Jesse Helms", "senator"} {"Dith Pran", "journalist"} {"Christodoulos", "Archbishop"} {"Sydney Pollack", "film director"} {"Alexy II", "patriarch"} {"Albert Hofmann", "chemist"} {"Charlton Heston", "film star"} {"Heath Ledger", "actor"} {"Barack Obama", "president-elect"} {"Arthur C. Clarke", "writer"} {"Dino Risi", "director"} {"Isaac Hayes", "musician"} {"Papa Wendo", "musician"} {"Aime Cesaire", "poet"} {"Paul Newman", "film star"} {"Sister Emmanuelle", "nun"} {"Yves Saint Laurent", "fashion designer"} {"Roy Scheider", "actor"} {"Cyd Charisse", "actress"} {"V.P. Singh", "prime minister"} {"Natalia Bessmertnova", "prima ballerina"} {"Miriam Makeba", "singer"} {"Sydney Pollack", "director"} {"Natalia Bessmertnova", "ballerina"} {"Isaac Hayes", "musician"} {"Mahmud Darwish", "poet"} {"Eartha Kitt", "actress"} {"Dino Risi", "director"} {"Youssef Chahine", "filmmaker"} {"Alexy II", "patriarch"} {"Richard Widmark", "actor"} {"Albert Hofmann", "chemist"} {"Harold Pinter", "playwright"} {"Alexander Solzhenitsyn", "writer"} {"Eartha Kitt", "singer"} {"Arthur C. Clarke", "writer"} {"Aime Cesaire", "poet"} {"Sister Emmanuelle", "nun"} {"Cyd Charisse", "dancer"} {"Heath Ledger", "actor"} {"Roy Scheider", "actor"} {"Joern Utzon", "architect"} {"Germaine Tillion", "anthropologist"} {"Bettie Page", "model"} {"Christodoulos", "Archbishop"} {"Jesse Helms", "senator"} {"V.P. Singh", "prime minister"} {"Dith Pran", "journalist"} {"Chingiz Aitmatov", "writer"} {"Yves Saint Laurent", "fashion designer"} {"Papa Wendo", "musician"} {"Jacques Piccard", "explorer"} {"Richard Nixon", "president"} {"Kanaan", "team leader"} {"Helio Castroneves", "driver"} {"Viso", "driver"} {"Perera", "test driver"} {"Wilson", "driver"} {"Duno", "naval engineer"} {"George F. Colony", "chief executive"} {"Craig Mundie", "chief research and strategy officer"} {"Brad Silverberg", "venture capitalist"} {"Joseph M. Tucci", "chief executive"} {"Jeffrey R. Immelt", "brand manager"} {"Robert J. Bach", "executive"} {"Gary Flake", "head of research"} {"Bill Gates", "chairman"} {"Bradford L. Smith", "general counsel"} {"Edward Kuss", "math teacher"} {"Richard G. Sherlund", "analyst"} {"Brad Silverberg", "venture capitalist"} {"Michael G. King Jr.", "analyst"} {"Scannon", "chief biotechnology officer"} {"John L. Castello", "chief executive"} {"David Webber", "analyst"} {"George H.W. Bush", "pilot"} {"George H.W. Bush", "President"} {"Arthur Kornberg", "professor"} {"Gary P. Pisano", "professor"} {"David Webber", "analyst"} {"Arthur Kornberg", "Dr."} {"Samuel D. Isaly", "managing partner"} {"Patrick J. Scannon", "Dr."} {"Arthur Kornberg", "emeritus professor"} {"Greg Schmidt", "physician"} {"Mary Haak-Frendscho", "vice president for preclinical research"} {"Susan", "scuba diving instructor"} {"Tommy Doyle", "football coach"} {"Greg Schmidt", "Dr."} {"Elizabeth", "Queen"} {"Holly Fletcher", "correspondent"} {"David Ormsby-Gore", "Lord Harlech"} {"Richard Cushing", "Cardinal"} {"Amanda Smith", "historian"} {"Francis Spellman", "Archbishop"} {&#8220;Joe", "ambassador to Britain"} {"William Cavendish", "Marquess of Hartington"} {"Bush", "President"} {"Jaap de Hoop Scheffer", "Secretary General"} {"Jatin Das", "Painter"} {"Josh Bolton", "Chief of Staff"} {"Paul Reubens", "actor"} {"Paul Reubens", "actor"} {"James Goldsmith", "environmentalist"} {"Shivji Panikker", "dean"} {"Jerry Lewis", "Rep."} {"Pankaj Singh", "writer"} {"Valencia Vilchis", "biologist"} {"Bernie McCabe", "State Attorney"} {"Beverly Andringa", "assistant"} {"Rhonda Schroeder", "chiropractor"} {"Chris Tisch", "staff writer"} {"Cathy Wos", "researcher"} {"Carolyn Edds", "researcher"} {"Alicia Waddell", "hairdresser"} {"Rhonda Schroeder", "Dr."} {"Bernie McCabe", "State Attorney"} {"Earl Presley Sr.", "juvenile detention officer"} {"Beverly Andringa", "prosecutor"} {"Beverly Andringa", "prosecutor"} {"Martinez", "baseball player"} {"Troy Hitchcox", "detective"} {"Dee Anna Farnell", "Judge"} {"Martinez", "pitcher"} {"Winthrop Sergeant", "critic"} {"Enrico Caruso", "opera singer"} {"Greenough", "associate editor"} {"Sarah Caldwell", "conductor"} {"Liebling", "teacher"} {"Sarah Caldwell", "stage director"} {"Joseph Rosenstock", "conductor"} {"Edgar Vincent", "personal manager"} {"Phyllis Curtin", "soprano"} {"Franco Abbiati", "critic"} {"Joseph Rosenstock", "general director"} {"Alan Rich", "critic"} {"Norman Treigle", "bass-baritone"} {"Tito Capobianco", "stage director"} {"Julius Rudel", "conductor"} {"Sills", "opera star"} {"Tom LaSorda", "president"} {"Tom LaSorda", "president"} {"Schrempp", "executive"} {"Joseph J. Farnan Jr.", "Judge"} {"Ronald Kolka", "chief financial officer"} {"Ron Kutz", "dealer"} {"Gerald Meyers", "chairman"} {"Gerald Meyers", "professor"} {"Mary Turner", "manager"} {"Ralph Gilles", "vice president of design"} {"John Casesa", "Financial analyst"} {"Ron Kutz", "general manager"} {"Eric Ridenour", "Chief Operating Officer"} {"Tom LaSorda", "CEO"} {"LaSorda", "CEO"} {"Carlos Gutierrez", "Commerce Secretary"} {"Gordon Johndroe", "special assistant to the president"} {"Margaret Spellings", "senior adviser"} {"George Miller", "Rep."} {"Johndroe", "press secretary"} {"Israel Hernandez", "assistant secretary for trade promotion"} {"Brian Montgomery", "assistant secretary for housing"} {"Clay Johnson", "deputy director of management"} {"Brian Montgomery", "advance man"} {"George H.W. Bush", "President"} {"Harry Whittington", "lawyer"} {"Hernandez", "director of voter contact"} {"Clay Johnson", "appointments director"} {"Ted Kennedy", "Sen."} {"Clay Johnson", "executive director"} {"Montgomery", "director of special events and operations"} {"Israel Hernandez", "director general"} {"Clay Johnson", "chief of staff"} {"Brian Montgomery", "federal housing commissioner"} {"Margaret Spellings", "secretary of education"} {"Gordon Johndroe", "press secretary"} {"Gonzales", "Attorney General"} {"Cheney", "Vice President"} {"Alberto Gonzales", "attorney general"} {"Montgomery", "director of advance"} {"Karen Hughes", "Under Secretary of State"} {"Montgomery", "deputy assistant to the president"} {"Gonzales", "White House counsel"} {"Clay Johnson", "assistant to the president for presidential personnel"} {"Montgomery", "director of advance"} {"John Ashcroft", "Attorney General"} {"Margaret Spellings", "legislative aide"} {"Todd Beyer", "volunteer"} {"Johndroe", "associate political director"} {"Hernandez", "liaison"} {"Powers", "top deputy mayor"} {"Lloyd F. MacMahon", "Judge"} {"Donna Hanover", "television journalist"} {"Elizabeth", "Queen"} {"Kerik", "head of its security arm"} {&#8220;Placa", "the priesthood"} {"Joseph Lhota", "investment banker"} {"Kerik", "bodyguard"} {"Ramon Cortines", "schools chancellor"} {"David N. Dinkins", "president"} {"Bernard B. Kerik", "police commissioner"} {"Wayne Barrett", "writer"} {"Kerik", "campaign driver"} {"Ken Breen", "lawyer"} {"Loughlin", "Bishop"} {"Lloyd F. MacMahon", "Judge"} {&#8220;Randy Levine", "labor commissioner"} {"Siegel", "history professor"} {"Howard Safir", "police commissioner"} {"Randy Levine", "aide"} {"Crew", "superintendent"} {"Abdullah II", "King"} {"Kerik", "detective"} {"Fred Siegel", "campaign adviser"} {"Judith Nathan", "pharmaceutical sales manager"} {"Regina", "social work"} {"Young", "counselor"} {"Placa", "priesthood"} {"Mastro", "chief of staff"} {"George P. Schultz", "Secretary of State"} {"Beaverbrook", "Lord"} {"Church", "model"} {"Lawrence Schiller", "writer"} {"Jimmy Breslin", "writer"} {"Jason Epstein", "editor"} {"Rip Torn", "actor"} {"Lawrence Schiller", "filmmaker"} {"Richard Gilman", "critic"} {"Isaac Barnett", "businessman"} {"John F. Kennedy", "President"} {"Jeanne Campbell", "Lady"} {"Ma Jun", "author"} {"Xu Yuming", "researcher"} {"Fan Xiao", "geologist"} {"Lang Cheng", "director"} {"Chen Deming", "economic planner"} {"Wen Jiabao", "Prime Minister"} {"Ma Jun", "environmentalist"} {"Richard Taylor", "executive director"} {"Hu Jintao", "President"} {"Andrew Marra", "special correspondent"} {"KEVIN RUDD", "Prime Minister"} {"Guo", "diver"} {"Argentine", "right winger"} {"Nestor Kirchner", "President"} {"John Howard", "Prime Minister"} {"LIONEL MESSI", "Soccer player"} {"QUSAI KHIDR", "host"} {"DENIS MUKWEGE", "Physician"} {"Sarkozy", "mayor"} {"JAVIER BARDEM", "Actor"} {"JOSE PADILHA", "Filmmaker"} {"Okonjo-Iweala", "finance and foreign minister"} {"Reygadas", "lawyer"} {"Jacques Chirac", "president"} {"GUO JINGJING", "Diver"} {"MOHAMMED BIN RASHID AL-MAKTOUM", "SHEIK"} {"NGOZI OKONJO-IWEALA", "managing director"} {"Rudd", "prime minister"} {"Mukwege", "doctor"} {"LORENA OCHOA", "golfer"} {"Wainaina", "editor"} {"Okonjo-Iweala", "fellow"} {"Nick Wadhams", "special correspondent"} {"NICOLAS SARKOZY", "President"} {"Reygadas", "film-maker"} {"BINYAVANGA WAINAINA", "Magazine editor"}  {"Carlos Reygadas", "director"} {"Okonjo-Iweala", "managing director"} {"John Edgar Wideman", "professor"} {"Askold Melnyczuk", "teacher"} {"Manil Suri", "Novelist"} {"Anthony Lewis", "columnist"} {"Rockwell Kent", "artist"} {"Bernhard Schlink", "author"} {"David Levering Lewis", "historian"} {"William Wilberforce", "activist"} {"Askold Melnyczuk", "teacher"} {"Madeleine Albright", "secretary of state"} {"Chris Hedges", "writer"} {"Bill Mauldin", "political cartoonist"} {"James Wood", "critic"} {"Ted Landsmark", "lawyer"} {"James O'Toole", "historian"} {"Dee Dee Myers", "spokeswoman"} {"Tahmima Anam", "Novelist"} {"Chitra Banerjee Divakaruni", "Novelist"} {"Howard Davidowitz", "retail consultant"} {"Richard Rainwater", "hedge fund manager"} {"Craig Schmidt", "analyst"} {"Millard S. Drexler", "chief executive"} {"Bill Dreher", "analyst"} {"Carol Levenson", "credit analyst"} {"Adrianne Shapira", "analyst"} {"Gregory  elich", "analyst"} {"Burt Flickinger", "retail consultant"} {"Bruce Greenwald", "professor of finance and economics"} {"Leiva", "consultant"} {"Chris Kronner", "executive chef"} {"Amanda Gold", "Writer"} {"George Morrone", "chef"} {"Begg", "sous chef"} {"Miriam Morgan", "Editor"} {"Christopher Kostow", "chef"} {"Brian Reed", "VP"} {"James Syhabout", "chef"} {"Tara Duggan", "Writer"} {"Rocco DiSpirito", "chef"} {"Michael Bauer", "Executive Food and Wine Editor"} {"Jonnatan Leiva", "executive chef"} {"Carol Ness", "Writer"} {"Frank H. Murkowski", "Sens"} {"John D. Dingell", "Rep"} {"Edward J. Markey", "Rep"} {"Charles E. Schumer", "Sens"} {"George H.W. Bush", "President"} {"Larry Goldstein", "energy analyst"} {"William H. Brown III", "energy analyst"} {"O'Reilly", "chief executive"} {"Paul Bledsoe", "strategy director"} {"Lee R. Raymond", "chief executive"} {"Jeroen van der Veer", "chief executive"} {"Mike Castle", "Rep"} {"Chris Welberry", "spokesman"} {"Mike Jackson", "chief executive"} {"Newt Gingrich", "speaker"} {"Susan M. Cischke", "group vice president for sustainability, environment and safety engineering"} {"Newt Gingrich", "Republican leader"} {"Dan Becker", "lobbyist"} {"Stephen P.A. Brown", "director of energy economics and microeconomic policy analysis"} {"Joseph A. Jeffries", "Spc."} {"Michael J. Kelley", "Sgt."} {"Bryan A. Brewster", "Sgt."} {"Larry I. Rougle", "Staff Sgt."} {"Kettle", "construction and demolition engineer"} {"Emmanuel Hernandez", "Pfc."} {"Jimmy Carabello", "Command Sgt. Maj."} {"Matthew D. Blaskowski", "Staff Sgt."} {"Jeffrey D. Kettle", "Sgt. 1st Class"} {"Tina Beller", "spokeswoman"} {"Randy Smith", "general manager"} {"Armando Marsans", "outfielder"} {"Dave Dombrowski", "president"} {"Todd Jones", "reliever"} {"Dick Tracewski", "coach"} {"Adrian Burgos", "Dr"} {"Samuel", "coach"} {"Randy Smith", "general manager"} {"Rick Porcello", "pitcher"} {"Billy Beane", "general manager"} {"Al Avila", "assistant general manager"} {"Armando Galarraga", "pitcher"} {"Rafael Almeida", "infielder"} {"Samuel", "coach"} {"Miguel Tejada", "shoe-shine boy"} {"Ted Williams", "hitter"} {"Tony Fernandez", "shortstop"} {"Carlos Guillen", "third baseman"} {"Ramon Santiago", "infielder"} {"Steven Light", "professor"} {"Jack Abramoff", "lobbyist"} {"J. Terrence Lanni", "executive"} {"Ralph Reed", "director"} {"Wes Gullett", "lobbyist"} {"Rick Davis", "campaign manager"} {"Kent Hance", "congressman"} {"Steve Hart", "lawyer"} {"Kent Hance", "lawyer"} {"John Weaver", "chief political strategist"} {"Scott Reed", "lobbyist"} {"William S. Cohen", "Defense Secretary"} {"Scott Crowell", "lawyer"} {"Franklin Ducheneaux", "aide"} {"Roy Fletcher", "consultant"} {"Richard F. Velky", "Chief"} {"Jay B. Stewart", "managing partner"} {"Scott Reed", "lobbyist"} {"David Sickey", "vice chairman"} {"Bob Dole", "Sen"} {"John McCain", "Sen"} {"John Engler", "Gov"} {"Brant Imperatore", "lobbyist"} {"Morris K. Udall", "Rep"} {"Tom DeLay", "majority leader"} {"Sig Rogich", "fundraiser"} {"Barack Obama", "Sen"} {"Joseph I. Lieberman", "Sen"} {"Jeff Sanderson", "publicist"}{"William Inge", "playwright"} {"Newman", "delegate"} {"Richard M. Nixon", "President"} {"Jacqueline Witte", "actress"} {"Josh Logan", "director"} {"Jimmy Carter", "President"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-03-28</editDate><author>Bryan</author><curator /><description>This relation holds when the person has held the position at some point in some organization.</description><freebaseID>none</freebaseID><comment>For BLITZ2</comment></Relation><Relation id="221"><relationName>personGraduatedSchool</relationName><humanFormat>arg1 {graduated from} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personAttendsSchool</generalizations><domain>person</domain><range>school</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>personLeadsOrganization</mutexExceptions><knownNegatives /><inverse>schoolGraduatedPerson</inverse><seedInstances>{"Unanue", "Duke University"} {"Joseph F . Unanue", "Duke University"} {"Unanue", "University of North Carolina"} {"Joseph F . Unanue", "University of North Carolina"} {"Charles Anderwald", "St . Gerard High School"} {"she", "Bristol Community College"} {"Patricia Lapre", "Bristol Community College"} {"She", "Barnard College"} {"Diane Price Baker", "Barnard College"} {"he", "Brooklyn College"} {"Sol Hoffman", "Brooklyn College"} {"he", "University of Michigan"} {"Sol Hoffman", "University of Michigan"} {"He", "University of Toronto"} {"Solomon D . Erulkar", "University of Toronto"} {"He", "Johns Hopkins"} {"Solomon D . Erulkar", "Johns Hopkins"} {"he", "Brown University"} {"James T . Tierney", "Brown University"} {"he", "Brown University"} {"James T . Tierney", "Brown University"} {"He", "Harvard"} {"Kim B . Clark", "Harvard"} {"He", "Auburn University"} {"Vincent Jackson", "Auburn University"} {"Akishino", "Gakushuin University"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-03-28</editDate><author>Bryan</author><curator /><description>This holds when the person has graduated from the educational institution at some time. This includes high schools, say, as well as universities. A division of an institution ("Yale Business School") will be scored as the same answer as the institution as a whole ("Yale"). </description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/people/person", "/people/person/education": [{ "/education/education/degree": [] }], "/education/education/institution": [{ "name": null, "/common/topic/alias": [], "type": "/education/educational institution" }] }]</freebaseID><comment>For BLITZ2</comment></Relation><Relation id="222"><relationName>sportHasSportsTeamPosition</relationName><humanFormat>arg2 {is a role for players of} arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>sport</domain><range>sportsTeamPosition</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives>{"baseball","forward"}{"football","forward"}</knownNegatives><inverse>sportsTeamPositionForSport</inverse><seedInstances>{"baseball","pitcher"}{"baseball","catcher"}{"baseball","outfielder"}{"baseball","shortstop"}{"basketball","guard"}{"basketball","forward"}{"basketball","point guard"}{"hockey","goalie"}{"soccer","goalie"}{"soccer","midfield"}{"hockey","forward"}{"football","quarterback"}{"football","running back"}{"football","linebacker"}{"football","tight end"}{"football","nose guard"}</seedInstances><seedExtractionPatterns>"arg1 teams have arg2" "arg1 position is arg2"</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg2 is a position on a arg1</queryString><editDate>2011-05-19</editDate><author>Tom</author><curator /><description>The relation between a sport and team positions filled by athletes</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="223"><relationName>athletePlaysSportsTeamPosition</relationName><humanFormat>arg1 {plays the athletic team position} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>athlete</domain><range>sportsTeamPosition</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>sportsTeamPositionAthlete</inverse><seedInstances>{"Ben Roethlisberger","quarterback"}{"Sammy Sosa","outfielder"}{"Sammy Sosa","right field"}{"Mario Lemieux","forward"}{"Alex Rodriguez","third base"}{"Alex Rodriguez","infield"}{"Brett Favre","quarterback"}{"David Beckham","midfield"}{"Kobe Bryant","guard"}{"Walter Payton","running back"}{"Tony Dorsett","running back"}{"Tony Kubek","shortstop"}{"Ozzie Smith","shortstop"}{"Wade Boggs","third base"}{"Wade Boggs","infield"}{"Yogi Berra","catcher"}{"Jim Bunning","pitcher"}{"Goose Gossage","pitcher"}</seedInstances><seedExtractionPatterns>"arg1 is the team arg2&#8221; "arg1 is a arg2" "arg1 plays arg2"</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>TRUE</requiredForRange><queryString>arg1 plays the position arg2</queryString><editDate>2011-05-19</editDate><author>Tom</author><curator /><description>The team position played by an athlete.</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="224"><relationName>itemFoundInRoom</relationName><humanFormat>arg1 {is often found in} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>itemExistsAtLocation</generalizations><domain>item</domain><range>room</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"bathtub","kitchen"}</knownNegatives><inverse>roomCanContainItem</inverse><seedInstances>{"couch","living room"}{"refrigerator","kitchen"}{"dishwasher","kitchen"}{"bathtub","bathroom"}{"dishes","kitchen"}{"stove","kitchen"}{"table","dining room"}{"coffee maker","kitchen"}{"computer","office"}{"clothes","closet"},{"desk","office"}{"toothpaste","bathroom"}{"mirror","bathroom"}{"shoes","closet"}{"shelves","office"}</seedInstances><seedExtractionPatterns>"arg1 is often found in arg2" "arg2 often contain arg1" "arg1 are often found in arg2"</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 is often found in arg2</queryString><editDate>2011-05-19</editDate><author>Tom</author><curator /><description>Relates items to rooms in which they are often found</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="225"><relationName>furnitureFoundInRoom</relationName><humanFormat>arg1 {is often found in} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>itemFoundInRoom</generalizations><domain>furniture</domain><range>room</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"bathtub","kitchen"}</knownNegatives><inverse>roomCanContainFurniture</inverse><seedInstances>{"coffee table","living room"}{"bar stool","kitchen"}{"bed","bedroom"}{"medicine cabinet","bathroom"}{"sofa","living room"}{"coat rack","hallway"}{"table","dining room"}{"table","kitchen"}{"couch","living room"}{"dressers","bedroom"},{"desk","office"}{"desk chair","office"}{"futon","den"}</seedInstances><seedExtractionPatterns>"arg1 is often found in arg2" "arg2 often contain arg1" "arg1 are often found in arg2"</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 is often found in arg2</queryString><editDate>2011-05-19</editDate><author>Tom</author><curator /><description>Relates furniture to rooms in which it is often found</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="226"><relationName>wineryProducesWine</relationName><humanFormat>arg1 {produces the wine} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentInvolvedWithItem</generalizations><domain>winery</domain><range>wine</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>wineProducedByWinery</inverse><seedInstances>{"ridge", "zinfandel"}{"Gallo", "pinot noir"}{"ravenswood winery","zinfandel"}{"Chateau Latour","bordeaux"}{"Duckhorn","merlot"}{"Far Niente","chardonay"}{"markham","merlot"}{"Beringer","cabernet"}{"Cos d'Estournel","bordeaux"}{"Newton","merlot"}{"rodney strong","cabernet"}{"clos du bois","sauvignon blanc"}{"Au Bon Climat","pinot noir"}{"Joseph Phelps","sauvignon blanc"}{"Cakebread Celllars","cabernet sauvignon"}{"J. Lohr","merlot"}</seedInstances><seedExtractionPatterns>"arg1 produces excellent arg2"  "arg1 produces arg2" "arg1 sells arg2"</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>TRUE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 sells arg2</queryString><editDate>2011-05-24</editDate><author>Tom</author><curator /><description>Describes the wines sold by a winery</description><freebaseID>[{ "name": null, "/common/topic/alias": [], "type": "/wine/wine producer", "/wine/wine producer/wines": [{ "name": null, "/common/topic/alias": [] }] }]</freebaseID><comment /></Relation><Relation id="227"><relationName>riverEmptiesIntoRiver</relationName><humanFormat>arg1 {empties into river} arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>atLocation</generalizations><domain>river</domain><range>river</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfRiverEmptiesIntoRiver</inverse><seedInstances>{"lake&#160;geneva","rhone&#160;river"}{"missouri&#160;river","mississippi&#160;river"}{"anacostia&#160;river","potomac"}{"boise&#160;river","snake&#160;river"}{"cumberland&#160;river","ohio&#160;river"}{"salt&#160;river","ohio&#160;river"}{"kentucky&#160;river","ohio&#160;river"}{"rock&#160;creek","potomac&#160;river"}{"white&#160;river","missouri&#160;river"}{"wisconsin&#160;river","mississippi&#160;river"}{"gila","salt&#160;river"}{"arkansas&#160;river","mississippi&#160;river"}{"scioto&#160;river","ohio&#160;river"}{"oka","volga"}{"illinois&#160;river","mississippi&#160;river"}{"potomac","potomac&#160;river"}{"river&#160;tyne","tyne"}{"rhone&#160;river","lake&#160;geneva"}{"ottawa&#160;river","st&#160;.&#160;lawrence&#160;river"}{"congo&#160;river","congo"}</seedInstances><seedExtractionPatterns>&#8220;arg1 empties into arg2&#8221; &#8220;arg1 flows into arg2&#8221; &#8220;arg1 meets arg2&#8221; &#8220;arg1 is a tributary of arg2&#8221; &#8220;arg1 at the mouth of arg2&#8221; &#8220;arg1 joins arg2&#8221; &#8221;arg1 at its confluence with arg2&#8221; &#8220;arg1 near its confluence with arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-10-06</editDate><author>ontExt</author><curator /><description>Describes the tributaries of a river</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="228"><relationName>animalEatVegetable</relationName><humanFormat>arg1 {eat} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>animalEatFood</generalizations><domain>animal</domain><range>vegetable</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>invertebrateFeedOnFood</mutexExceptions><knownNegatives /><inverse>InverseOfAnimalEatVegetable</inverse><seedInstances>{"monkeys","bananas"}{"pigs","corn"}{"hogs","corn"}{"rabbits","carrots"}{"squirrels","pumpkins"}{"sea urchins","kelp"}{"raccoons","tomatoes"}{"birds","corn"}{"cows","corn"}{"cats","greens"}{"livestock","corn"}{"rabbits","lettuce"}{"cattle","corn"}{"squirrels","corn"}{"chimps","bananas"}{"dog","onions"}{"rabbits","cabbage"}{"deer","corn"}{"raccoons","corn"}{"mice","mushrooms"}{"squirrels","mushrooms"}{"beef","corn"}{"reindeer","mushrooms"}{"bunnies","carrots"}{"horses","corn"}{"fish","lettuce"}{"monkey","pepper"}{"monkeys","beans"}{"dogs","carrots"}{"birds","figs"}{"meat","greens"}{"fish","garlic"}{"cats","lettuce"}{"dogs","apples"}{"horses","carrots"}{"birds","papaya"}{"bats","figs"}{"fish","zucchini"}{"bunnies","lettuce"}{"deer","mushrooms"}{"birds","sprouts"}{"larvae","cabbage"}{"deer","turnips"}{"monkeys","bananas"}{"pets","corn"}{"rabbits","papaya"}{"ponies","carrots"}{"mammals","peppers"}{"birds","apples"}{"reindeer","carrots"}</seedInstances><seedExtractionPatterns>&#8220;arg1 eat arg2&#8221; &#8220;arg1 eats arg2&#8221; &#8220;arg1 are fed on arg2&#8221; &#8220;arg1 are used to arg2&#8221; &#8221;arg1 eat lots of arg2&#8221; &#8220;arg1 were fed arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-10-06</editDate><author>ontExt</author><curator /><description>Describes the vegetables eaten by an animal</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="229"><relationName>vegetableProductionInStateOrProvince</relationName><humanFormat>arg1 is a vegetable {produced in} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>itemExistsAtLocation</generalizations><domain>vegetable</domain><range>stateOrProvince</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfVegetableProductionInStateOrProvince</inverse><seedInstances>{"corn","indiana"}{"corn","iowa"}{"potato","idaho"}{"corn","nebraska"}{"corn","illinois"}{"corn","kansas"}{"avocado","florida"}{"corn","colorado"}{"corn","ontario"}{"corn","kentucky"}{"onion","california"}{"celery","florida"}{"corn","north dakota"}{"corn","ohio"}{"potato","florida"}{"avocado","california"}{"cucumber","florida"}{"corn","pennsylvania"}{"celery","california"}{"corn","virginia"}{"potato","louisiana"}{"papaya","florida"}{"corn","michigan"}{"corn","texas"}{"eggplant","florida"}{"lettuce","arizona"}{"potato","maine"}{"potato","colorado"}{"potato","north dakota"}{"corn","minnesota"}{"potato","wisconsin"}{"potato","new jersey"}{"potato","west bengal"}{"watermelon","georgia"}{"pepper","texas"}{"cabbage","california"}{"lettuce","california"}{"onion","georgia"}{"watermelon","florida"}{"spinach","california"}{"pepper","florida"}{"corn","maryland"}{"onion","texas"}{"corn","florida"}{"corn","north carolina"}{"onion","michigan"}{"melon","arizona"}{"potato","ontario"}{"grapefruit","florida"}{"lettuce","florida"}</seedInstances><seedExtractionPatterns>&#8220;arg1 production in arg2&#8221; &#8220;arg1 crops in arg2&#8221; &#8220;arg1 is grown in arg2&#8221; &#8220;arg1 are grown in arg2&#8221; &#8220;arg1 come from arg2&#8221; &#8220;arg2 produces more arg1&#8221; &#8220;arg1 in the state of arg2&#8221;  &#8220;arg1 industry in arg2&#8221; &#8220;arg1 farm in arg2&#8221; &#8220;arg1 fields in arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-10-06</editDate><author>ontExt</author><curator /><description>Describes the vegetables produced in a state or province</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="230"><relationName>clothingToGoWithClothing</relationName><humanFormat>arg1 is a clothing item {to go with} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>itemUsedWithItem</generalizations><domain>clothing</domain><range>clothing</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives /><inverse>clothingToGoWithClothing</inverse><seedInstances>{"shoes","dress"}{"shirts","jeans"}{"hat","scarf"}{"hat","sweater"}{"scarf","hat"}{"pants","jacket"}{"shoes","skirt"}{"socks","shoes"}{"blouse","skirt"}{"pants","shirt"}{"shoes","pants"}{"mittens","hat"}{"sweater","pants"}{"shoes","outfits"}{"trousers","jacket"}{"ties","suits"}{"blouse","pants"}{"shirts","suits"}{"skirt","jacket"}{"belt","dress"}{"ties","shirts"}{"outfits","shoes"}{"suspenders","belt"}{"tights","skirt"}{"scarves","hats"}{"pants","shirts"}{"shirt","jacket"}{"gloves","hat"}{"hat","dress"}{"hat","cardigan"}{"hat","scarves"}{"mittens","scarf"}{"shirt","pants"}{"dress","hat"}{"shorts","shirt"}{"pants","vest"}{"bibs","jacket"}{"shoes","gown"}{"socks","belt"}{"skirt","shoes"}{"tie","shirt"}{"outfits","hats"}{"boots","skirts"}{"underwear","dress"}{"hat","mittens"}{"socks","hat"}{"gloves","coats"}{"blouses","jumpers"}{"blouses","pants"}{"skirt","hat"}</seedInstances><seedExtractionPatterns>&#8220;arg1 to go with arg2&#8221; &#8220;arg1 must be worn under arg2&#8221; &#8220;arg1 to go with your arg2&#8221; &#8220;arg1 tucked in with arg2&#8221; &#8220;arg1 with a silk arg2&#8221; &#8220;arg1 with a satin arg2&#8221; &#8220;arg1 can also be worn as arg2&#8221; &#8220;arg1 looks great with arg2&#8221; &#8220;arg1 to go with her arg2&#8221; &#8220;arg1 to go with my arg2&#8221; &#8220;arg1 that come with arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-10-06</editDate><author>ontExt</author><curator /><description>Describes clothing pieces that &#8220;should&#8221; (or can) be used with each other</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="231"><relationName>foodCanCauseDisease</relationName><humanFormat>arg1 {can cause} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>food</domain><range>disease</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfFoodCanCauseDisease</inverse><seedInstances>{"chocolate","acne"}{"calcium","osteoporosis"}{"junk food","heart disease"}{"calcium","kidney stones"}{"salt","hypertension"}{"fats","heart disease"}{"sugar","tooth decay"}{"fiber","diarrhea"}{"sushi","food poisoning"}{"fruit","diarrhea"}{"junk food","diabetes"}{"sugar","diabetes"}{"sugar","cancer"}{"junk food","heart attacks"}{"treats","diarrhea"}{"junk food","acne"}{"meats","cancer"}{"sugar","diarrhea"}{"treats","obesity"}{"protein","kidney problems"}{"protein","cancer"}{"sugar","obesity"}{"sweeteners","cancer"}{"fats","obesity"}{"carbs","diabetes"}{"protein","osteoporosis"}{"pizza","acne"}{"calcium","rickets"}{"sugar","heart disease"}{"protein","kidney disease"}{"protein","inflammation"}{"protein","obesity"}{"sugar","inflammation"}{"protein","neurodegeneration"}{"protein","allergy"}{"sweets","cavities"}{"oils","cancer"}{"soy","cancer"}{"sugar","acne"}{"soy","breast cancer"}{"vegetables","cancer"}{"sugar","cavities"}{"carbohydrates","diabetes"}{"fats","cancer"}{"chocolates","acne"}{"chips","cancer"}{"fries","acne"}{"salt","rust"}{"treats","cavities"}{"protein","kidney failure"}</seedInstances><seedExtractionPatterns>&#8220;arg1 can cause arg2&#8221; &#8220;arg1 contributes to arg2&#8221; &#8220;arg1 can worsen arg2&#8221; &#8220;arg1 fight arg2&#8221; &#8220;arg1 to help arg2&#8221; &#8220;arg1 protect against arg2&#8221; &#8220;arg1 will lead to arg2&#8221; &#8220;arg1 is associated with arg2&#8221; &#8220;arg1 which can cause arg2&#8221; &#8220;arg1 increase the risk of arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-10-06</editDate><author>ontExt</author><curator /><description>Describes the diseases that can be caused by a food</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="232"><relationName>foodDecreasesTheRiskOfDisease</relationName><humanFormat>Eating arg1 {decreases the risk of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>food</domain><range>disease</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfFoodDecreasesTheRiskOfDisease</inverse><seedInstances>{"vegetables","cancer"}{"fats","heart disease"}{"antioxidants","cancer"}{"calcium","osteoporosis"}{"fiber","colon cancer"}{"vegetables","lung cancer"}{"vegetables","heart disease"}{"vegetables","cancers"}{"trans fats","heart disease"}{"fiber","cancer"}{"vegetables","prostate cancer"}{"vegetables","obesity"}{"soy","prostate cancer"}{"fruit","cancer"}{"fiber","chd"}{"vegetables","diseases"}{"vegetables","stroke"}{"soy","heart disease"}{"vegetables","type 2 diabetes"}{"yogurt","colon cancer"}{"omega-3","heart disease"}{"soy products","heart disease"}{"vegetables","type"}{"vegetables","colon cancer"}{"soy","breast cancer"}{"fruits","cancer"}{"soy products","breast cancer"}{"fiber","colon"}{"meals","heart disease"}{"peanuts","heart disease"}{"dairy foods","cancers"}{"vegetables","lung"}{"chocolate","blood clots"}{"seafood","heart disease"}{"vegetables","cvd"}{"vegetables","breast cancer"}{"fats","cancer"}{"vegetables","heart attack"}{"lycopene","cancer"}{"gum","caries"}{"vegetables","stomach cancer"}{"vegetables","rheumatoid arthritis"}{"mushroom","breast cancer"}{"vegetables","skin cancer"}{"flaxseed","cancer"}{"vegetables","hypertension"}{"oils","heart disease"}{"oils","colds"}{"vegetables","diabetes"}{"soy","colon cancer"}</seedInstances><seedExtractionPatterns>&#8220;arg1 decreases the risk of arg2&#8221; &#8220;arg1 could help prevent arg2&#8221; &#8220;arg1 protect against arg2&#8221; &#8220;arg1 cure arg2&#8221; &#8220;arg1 may be protective against arg2&#8221; &#8220;arg1 can prevent arg2&#8221; &#8220;arg1 help prevent arg2&#8221; &#8220;arg1 may also help prevent arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-10-06</editDate><author>ontExt</author><curator /><description>Describes the foods that can reduce the risks of having a disease</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="233"><relationName>animalDevelopDisease</relationName><humanFormat>arg1 is an animal that can {develop} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>animal</domain><range>disease</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfAnimalDevelopDisease</inverse><seedInstances>{"humans","acne"}{"dogs","cataracts"}{"dogs","allergy"}{"cats","cancer"}{"horses","laminitis"}{"dogs","diabetes"}{"cats","arthritis"}{"cats","hyperthyroidism"}{"mice","obesity"}{"rats","prostate cancer"}{"pets","arthritis"}{"dogs","diarrhea"}{"mice","diabetes"}{"dogs","infections"}{"rats","cancer"}{"eggs","fungus"}{"mice","arthritis"}{"cats","type"}{"cats","allergy"}{"mice","cardiomyopathy"}{"mice","hypertension"}{"mice","type"}{"pets","cancer"}{"pets","gingivitis"}{"rats","hypertension"}{"species","diseases"}{"cats","cataracts"}{"birds","atherosclerosis"}{"mice","colitis"}{"dogs","lymphoma"}{"rats","brain tumors"}{"humans","rabies"}{"mice","epilepsy"}{"rats","diabetes"}{"cats","diabetes"}{"cows","mastitis"}{"cats","diarrhea"}{"rats","obesity"}{"cats","breast cancer"}{"mice","insulin resistance"}{"mice","leukemia"}{"mice","cancer"}{"mice","cancers"}{"kittens","diarrhea"}{"rabbits","cancer"}{"dogs","rabies"}{"dogs","pra"}{"dogs","arthritis"}{"dogs","cataract"}{"dogs","cardiomyopathy"}</seedInstances><seedExtractionPatterns>&#8220;arg1 develop arg2&#8221; &#8220;arg1 may get arg2&#8221; &#8220;arg1 have been vaccinated against arg2&#8221; &#8220;arg1 has been vaccinated against arg2&#8221; &#8220;arg1 developed arg2&#8221; &#8220;arg1 suspected of having arg2&#8221; &#8220;arg2 confirmed in arg1&#8221; &#8220;arg1 have been found in arg2&#8221; &#8220;arg1 that suffer from arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-10-06</editDate><author>ontExt</author><curator /><description>Describes the diseases that can be developed by an animal</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="234"><relationName>productProducedInCountry</relationName><humanFormat>arg1 {is a product} produced in arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>itemExistsAtLocation</generalizations><domain>product</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>countryProducesProduct</inverse><seedInstances>{&#8220;coffee&#8221;,&#8221;Brazil&#8221;}{&#8220;olive oil&#8221;,&#8221;Portugal&#8221;}{&#8220;olive oil&#8221;,&#8221;Spain&#8221;}{&#8220;cars&#8221;,&#8221;United States&#8221;}{&#8220;computers&#8221;,&#8221;China&#8221;}{&#8220;Shoes&#8221;,&#8221;China&#8221;}{&#8220;cars&#8221;,&#8221;Germany&#8221;}{&#8220;food&#8221;,&#8221;England&#8221;}{&#8220;eletric energy&#8221;,&#8221;Japan&#8221;}{&#8220;aluminum&#8221;,&#8221;the US&#8221;}</seedInstances><seedExtractionPatterns>&#8220;arg1 produced in arg2&#8221; &#8220;arg1 made in arg2&#8221; &#8220;arg1 is available in  arg2&#8221; &#8220;arg1 is produced in arg2&#8221; &#8220;arg1 industry in arg2&#8221; &#8221;arg1 imported from arg2&#8221; &#8220;arg1 manufactured in arg2&#8221; &#8220;arg1 produced in arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-10-06</editDate><author>ontExt</author><curator /><description>Describes the products produced by a country</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="235"><relationName>weaponMadeInCountry</relationName><humanFormat>arg1 is a type of weapon {produced in} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>itemExistsAtLocation</generalizations><domain>weapon</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfWeaponMadeInCountry</inverse><seedInstances>{"rifle","canada"}{"pistols","italy"}{"shotguns","italy"}{"knives","usa"}{"sword","spain"}{"swords","china"}{"shotguns","belgium"}{"knives","spain"}{"rifle","china"}{"swords","spain"}{"swords","japan"}{"knives","france"}{"bows","china"}{"guns","spain"}{"knives","china"}{"cluster bombs","usa"}{"rifles","japan"}{"guns","england"}{"guns","italy"}{"guns","china"}{"cluster bombs","us"}{"rifles","us"}{"bow","france"}{"sword","india"}{"knives","australia"}{"guns","japan"}{"rifles","england"}{"rifles","china"}{"knives","us"}{"guns","us"}{"katana","japan"}{"rifles","usa"}{"knives","japan"}{"knives","germany"}{"cluster munitions","us"}{"guns","africa"}{"swords","usa"}{"guns","turkey"}{"knives","united states"}{"rifles","france"}{"sword","china"}{"rifle","italy"}{"cannons","united states"}{"landmines","china"}{"shotgun","spain"}{"rifle","germany"}{"guns","u.s.a."}{"guns","united states"}{"bows","brazil"}{"swords","philippines"}</seedInstances><seedExtractionPatterns>&#8220;arg1 made in arg2&#8221; &#8220;arg1 imported from arg2&#8221; &#8220;arg1 manufactured in arg2&#8221; &#8220;arg1 produced in arg2&#8221; &#8220;arg1 were made in arg2&#8221; &#8220;arg1 come from arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-10-06</editDate><author>ontExt</author><curator /><description>Describes the weapons produced by a country</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="236"><relationName>bakedgoodServedWithBeverage</relationName><humanFormat>arg1 {can be served with} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>itemUsedWithItem</generalizations><domain>bakedGood</domain><range>beverage</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfBakedGoodServedWithBeverage</inverse><seedInstances>{"scones","tea"}{"biscuits","tea"}{"cookies","coffee"}{"pastries","tea"}{"pastries","coffee"}{"cakes","tea"}{"cookies","tea"}{"cakes","coffee"}{"pastries","coffee"}{"cookies","coffee"}{"cakes","coffee"}{"biscuits","juice"}{"cookie","milk"}{"muffins","coffee"}{"biscuits","tea"}{"biscuits","coffee"}{"cookies","hot chocolate"}{"breads","tea"}{"cookies","milk"}{"cookie","coffee"}{"muffins","smoothies"}{"cookie","milk"}{"biscuits","coffee"}{"doughnuts","coffee"}{"scones","teas"}{"biscotti","cappuccino"}{"cookies","wine"}{"cakes","punch"}{"bagels","juice"}{"biscuits","hot chocolate"}{"cakes","teas"}{"crackers","tea"}{"cookies","tea"}{"muffins","juices"}{"cakes","tea"}{"biscuits","drink"}{"cakes","mint tea"}{"cookies","teas"}{"doughnuts","coffee"}{"pastries","wine"}{"cookies","milk"}{"brownies","milk"}{"crackers","milk"}{"cookie","coffee"}{"brownies","coffee"}</seedInstances><seedExtractionPatterns>&#8220;arg1 served with arg2&#8221; &#8220;arg1 to go with your arg2&#8221; &#8220;arg1 accompanied by arg2&#8221; &#8220;arg1 are served with arg2&#8221; </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-10-06</editDate><author>ontExt</author><curator /><description>Describes the baked goods that are usually served with a beverage</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="237"><relationName>plantRepresentEmotion</relationName><humanFormat>arg1 {can represent} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>plant</domain><range>emotion</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfPlantRepresentEmotion</inverse><seedInstances>{"flowers","love"}{"carnations","admiration"}{"roses","joy"}{"roses","love"}{"roses","happiness"}{"snowdrops","hope"}{"flowers","joy"}{"roses","admiration"}{"roses","gratitude"}{"orchids","love"}{"roses","appreciation"}{"daffodils","hope"}{"roses","desire"}{"flowers","hope"}{"flowers","anticipation"}{"tulips","love"}{"flowers","desire"}{"flowers","feeling"}{"flowers","appreciation"}{"mums","hope"}{"roses","hope"}{"roses","jealousy"}{"pansies","love"}</seedInstances><seedExtractionPatterns>&#8220;arg1 represent arg2&#8221; &#8220;arg1 represents arg2&#8221; &#8220;arg1 symbolize arg2&#8221; &#8220;arg1 symbolizes arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-10-12</editDate><author>ontExt</author><curator /><description>Describes the emotions represented by a plant</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="238"><relationName>writerWasBornInCity</relationName><humanFormat>arg1 {was born in} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personBornInCity</generalizations><domain>person</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfWriterWasBornInCIty</inverse><seedInstances>{"poe","boston"}{"homer","boston"}{"machiavelli","florence"}{"kipling","bombay"}{"sartre","paris"}{"edgar rice burroughs","chicago"}{"luke","antioch"}{"voltaire","paris"}{"orhan pamuk","istanbul"}{"josephus","jerusalem"}{"pushkin","moscow"}{"ralph ellison","oklahoma city"}{"fitzgerald","boston"}{"eliot","boston"}{"salman rushdie","bombay"}{"robert lowell","boston"}{"burns","dallas"}{"joyce","chicago"}{"burns","baltimore"}{"luke","boston"}{"proust","paris"}{"zola","paris"}{"poe","baltimore"}{"vaclav havel","prague"}{"washington irving","new york city"}{"pope","milan"}{"t.s. eliot","st . louis"}{"dickinson","chicago"}{"joyce","boston"}{"pope","rome"}{"salman rushdie","mumbai"}{"luke","denver"}{"forster","chicago"}{"stevenson","bloomington"}{"burns","los angeles"}{"faulkner","boston"}{"virgil","rome"}</seedInstances><seedExtractionPatterns>&#8220;arg1 was born in arg2&#8221; &#8220;arg1 came from arg2&#8221;</seedExtractionPatterns><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-10-12</editDate><author>ontExt</author><curator /><description>Describes the city where a write was born in</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="239"><relationName>plantIncludePlant</relationName><humanFormat>arg2 is a plant that is a {kind of} arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>plant</domain><range>plant</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfPlantIncludePlant</inverse><seedInstances>{"flowers","orchids"}{"trees","oaks"}{"trees","pines"}{"flowers","lilies"}{"weeds","dandelions"}{"flowers","carnations"}{"trees","willows"}{"conifers","pines"}{"weeds","dandelion"}{"flowers","jasmine"}{"perennials","daylilies"}{"shrubs","azaleas"}{"shrubs","roses"}{"trees","maples"}{"flowers","dogbane"}{"trees","palms"}{"flowers","poppies"}{"shrubs","rhododendrons"}{"flowers","peonies"}{"flowers","pansies"}{"flowers","nasturtiums"}{"weeds","clover"}{"wildflowers","orchids"}{"flowers","hibiscus"}{"spring bulbs","tulips"}{"shrubs","willows"}{"trees","conifers"}{"flowers","azaleas"}{"spring bulbs","daffodils"}{"trees","fruit trees"}{"shrubs","dogwood"}{"trees","dogwoods"}{"shrubs","lilacs"}{"flowers","daisies"}{"flowers","asters"}{"annuals","petunias"}{"bryophytes","mosses"}{"ornamentals","roses"}{"shrubs","trees"}{"succulents","cacti"}{"hardwood trees","oaks"}{"weeds","nettles"}{"trees","dogwood"}{"grasses","weeds"}{"perennials","phlox"}{"weeds","thistles"}{"weeds","thistle"}{"flowers","bouquets"}{"annuals","zinnias"}{"flowers","tulips"}</seedInstances><seedExtractionPatterns>&#8220;arg1 include arg2&#8221; &#8220;arg2 are native arg1&#8221; &#8220;arg2 are large arg1&#8221; &#8220;arg2 known as arg1&#8221; &#8220;arg2 are examples of arg1&#8221; &#8220;arg2 are considered arg1&#8221; &#8220;arg2 are among the most popular arg1&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-10-12</editDate><author>ontExt</author><curator /><description>Describes the subcategories of a plant</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="240"><relationName>plantGrowingInPlant</relationName><humanFormat>arg1 is a plant that can {grow in} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>plant</domain><range>plant</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfPlantGrowingInPlant</inverse><seedInstances>{"flowers","grass"}{"bromeliads","trees"}{"mistletoe","trees"}{"wildflowers","grass"}{"shrubs","grass"}{"grass","pasture"}{"orchids","trees"}{"grasses","pasture"}{"weeds","grass"}{"trees","grass"}{"orchids","mangroves"}{"clematis","trees"}{"flowers","weeds"}{"dandelions","grass"}{"wisteria","trees"}{"daffodils","grass"}{"ferns","trees"}{"flowers","trees"}{"grass","trees"}{"trees","pasture"}{"trees","shrubs"}{"daisies","grass"}</seedInstances><seedExtractionPatterns>&#8220;arg1 growing in arg2&#8221; &#8220;arg1 grow on arg2&#8221; </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-10-12</editDate><author>ontExt</author><curator /><description>Describes the plants that grow on other plants</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="241"><relationName>invertebrateFeedOnFood</relationName><humanFormat>arg1 is an invertebrate animal that {feeds on} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>animalEatFood</generalizations><domain>invertebrate</domain><range>food</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>animalEatVegetable</mutexExceptions><knownNegatives /><inverse>inverseOfInvertebrateFeedOnFood</inverse><seedInstances>{"grubs","roots"}{"nymphs","roots"}{"urchins","algae"}{"bugs","seeds"}{"bugs","fruit"}{"nymphs","seeds"}{"limpets","algae"}{"moth","roots"}{"grubs","tubers"}{"mites","fruit"}{"weevils","seeds"}{"mole crickets","roots"}{"bugs","roots"}{"mites","soybeans"}{"aphids","sugar"}</seedInstances><seedExtractionPatterns>&#8220;arg1 feed on arg2&#8221; &#8220;arg1 eat arg2&#8221; &#8220;arg1 eats arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-10-12</editDate><author>ontExt</author><curator /><description>Describes the foods that are eaten by an invertebrate</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="242"><relationName>animalEatFood</relationName><humanFormat>arg1 is an animal that {eats} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>animal</domain><range>food</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>InverseOfAnimalEatFood</inverse><seedInstances>{"birds","berries"}{"fish","algae"}{"bats","fruit"}{"bats","fruit"}{"mammals","seeds"}{"birds","seeds"}{"birds","fruit"}{"fish","algae"}{"hogs","fruits"}{"squirrels","seeds"}{"species","fruit"}{"larvae","roots"}{"mammals","fruits"}{"birds","fruits"}{"shrimp","algae"}{"birds","rice"}{"mammals","fruit"}{"bear","berries"}{"horses","hay"}{"species","seeds"}{"dog","chocolate"}{"dogs","kibble"}{"horse","hay"}{"snails","algae"}{"squirrel","nut"}{"squirrels","fruits"}{"chipmunks","seeds"}{"species","fruit"}{"bears","berries"}{"larvae","algae"}{"larvae","seeds"}{"tadpoles","algae"}{"fishes","algae"}{"mice","cheese"}{"dogs","chocolate"}{"deer","acorns"}{"birds","fruit"}{"birds","bread"}{"alpacas","hay"}{"humans","berries"}{"lemurs","fruit"}{"deer","berries"}{"dog","peanut butter"}{"elephants","peanuts"}{"species","algae"}{"dogs","yogurt"}{"humans","fruit"}{"squirrels","acorns"}{"cows","hay"}{"mammals","berries"}</seedInstances><seedExtractionPatterns>&#8220;arg1 eat arg2&#8221; &#8220;arg1 eats arg2&#8221; &#8220;arg1 are fed on arg2&#8221; &#8220;arg1 are used to arg2&#8221; &#8221;arg1 eat lots of arg2&#8221; &#8220;arg1 often eat arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-10-12</editDate><author>ontExt</author><curator /><description>Describes the foods that are eaten by an animal</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="243"><relationName>emotionAssociatedWithDisease</relationName><humanFormat>arg1 is an emotion {associated with} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>emotion</domain><range>disease</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfEmotionAssocietedWithDisease</inverse><seedInstances>{"anxiety","anxiety disorders"}{"anxiety","cancer"}{"distress","cancer"}{"fear","cancer"}{"fear","hiv"}{"shame","aids"}{"anxiety","fibromyalgia"}{"shame","disorders"}{"shame","alcoholism"}{"tenderness","fibromyalgia"}{"anxiety","acne"}{"shame","addiction"}{"fear","aids"}{"anxiety","alzheimer"}{"anxiety","cfs"}{"shame","hiv"}{"tenderness","osteoarthritis"}{"distress","diabetes"}{"anxiety","type"}{"anxiety","asthma"}{"fear","addiction"}{"shame","epilepsy"}{"embarrassment","disorders"}{"distress","cfs"}{"grief","alzheimer"}{"tenderness","arthritis"}{"guilt","addiction"}{"grief","autism"}{"fear","lyme disease"}{"shame","cancer"}{"hopelessness","aids"}{"feeling","conjunctivitis"}{"terror","hiv"}{"guilt","alcoholism"}{"shame","herpes"}{"vulnerability","type"}{"shame","diseases"}{"grief","aids"}{"frustration","cancer"}{"anxiety","hiv infection"}{"vulnerability","alzheimer"}{"fear","dementia"}{"fear","disorders"}{"shame","dementia"}{"fear","ageing"}{"fear","diseases"}{"anxiety","aids"}{"numbness","diabetes"}{"fear","sars"}{"fear","type"}</seedInstances><seedExtractionPatterns>&#8220;arg1 associated with arg2&#8221; &#8221;arg1 can cause arg2&#8221; &#8220;arg1 that accompanies arg2&#8221; &#8220;arg1 is associated with arg2&#8221; &#8220;arg1 of chronic arg2&#8221; &#8220;arg1 in patients with arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-10-12</editDate><author>ontExt</author><curator /><description>Describes the emotions associated with a disease</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="244"><relationName>languageSchoolInCity</relationName><humanFormat>arg1 is a language {taught in language schools in} the city arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>language</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>languageOfCity, isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>InverseOfLanguegeSchoolInCity</inverse><seedInstances>{"italian language","rome"}{"russian language","moscow"}{"spanish language","alicante"}{"spanish language","cuernavaca"}{"spanish language","quito"}{"chinese language","beijing"}{"spanish language","seville"}{"english language","dublin"}{"spanish language","cusco"}{"greek language","athens"}{"english language","cape town"}{"spanish language","malaga"}{"thai language","bangkok"}{"spanish language","san miguel"}{"spanish language","bariloche"}{"english language","auckland"}{"spanish language","antigua"}{"spanish language","quetzaltenango"}{"spanish language","centre"}{"spanish language","santo domingo"}{"english language","christchurch"}{"spanish language","sevilla"}{"japanese language","fukuoka"}{"spanish language","cordoba"}{"spanish language","madrid"}{"spanish language","barcelona"}{"greek","athens"}{"spanish language","lima"}{"spanish language","merida"}{"english language","centre"}{"english language","cambridge"}{"spanish language","guadalajara"}{"spanish language","marbella"}{"spanish language","cadiz"}{"german language","berlin"}{"english language","bournemouth"}{"italian language","bologna"}{"german language","freiburg"}{"english language","denver"}{"english language","boston"}{"english language","bristol"}{"latin","boston"}{"english language","adelaide"}{"spanish language","puebla"}{"spanish language","heredia"}{"spanish language","ensenada"}{"greek","alexandria"}{"portuguese language","porto"}{"spanish language","cochabamba"}{"english language","chicago"}</seedInstances><seedExtractionPatterns>&#8220;arg1 school in arg2&#8221; &#8220;arg1 schools in arg2&#8221; &#8220;arg1 comunity in arg2&#8221; &#8220;arg1 comuniteis in arg2&#8221; </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-11-20</editDate><author>ontExt</author><curator /><description>Describes the language schools for specific languages in a city</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="245"><relationName>sportSchoolInCountry</relationName><humanFormat>arg1 is a sport {taught in} the country arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>sport</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>sportFansInCountry, isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfSportSchoolInCOuntry</inverse><seedInstances>{"surf","australia"}{"surf","uk"}{"surf","south africa"}{"ski","canada"}{"ski","austria"}{"ski","france"}{"ski","switzerland"}{"surf","wales"}{"aikido","japan"}{"ski","australia"}{"judo","japan"}{"surf","caribbean"}{"swim","new zealand"}{"surf","south"}{"jujitsu","japan"}{"ju-jitsu","japan"}{"ski","japan"}{"ski","bulgaria"}{"surf","mexico"}{"swim","usa"}{"surf","region"}{"ski","andorra"}{"bjj","brazil"}{"racing","usa"}{"ski","germany"}{"surf","new zealand"}{"judo","korea"}{"baseball","india"}{"racing","philippines"}{"ski","south"}{"hapkido","south korea"}{"hapkido","korea"}{"ski","middle"}</seedInstances><seedExtractionPatterns>&#8220;arg1 school in arg2&#8221; &#8220;arg1 schools in arg2&#8221; &#8221;arg1 club in arg2&#8221; &#8220;arg1 clubs in arg2&#8221; &#8220;arg1 comunity in arg2&#8221; &#8220;arg1 comuniteis in arg2&#8221; </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-11-20</editDate><author>ontExt</author><curator /><description>Describes the sports practiced in a country</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="246"><relationName>sportFansInCountry</relationName><humanFormat>arg1 is a sport {with fans in} the country arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>sport</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>sportSchoolInCountry, isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfSportFansInCountry</inverse><seedInstances>{"cricket","india"}{"baseball","japan"}{"cricket","australia"}{"cricket","england"}{"cricket","south africa"}{"cricket","zimbabwe"}{"cricket","sri lanka"}{"baseball","canada"}{"cricket","pakistan"}{"baseball","taiwan"}{"baseball","cuba"}{"cricket","uk"}{"polo","uk"}{"cricket","new zealand"}{"sumo","japan"}{"racing","japan"}{"baseball","usa"}{"cricket","caribbean"}{"baseball","mexico"}{"racing","new zealand"}{"cricket","wales"}{"judo","japan"}{"cricket","usa"}{"cricket","region"}{"ski","canada"}{"ski","andorra"}{"baseball","korea"}{"rugby league","new zealand"}{"motorsport","uk"}{"futbol","mexico"}{"track","usa"}{"track","uk"}{"baseball","uk"}{"motorsport","new zealand"}{"baseball","caribbean"}{"ski","switzerland"}{"college football","usa"}{"baseball","germany"}{"futsal","new zealand"}{"baseball","netherlands"}{"racing","region"}{"cricket","denmark"}</seedInstances><seedExtractionPatterns>&#8220;arg1 fans in arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-11-20</editDate><author>ontExt</author><curator /><description>Describes the sports that have fans living in a country</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="247"><relationName>stateOrProvinceIsBorderedByStateOrProvince</relationName><humanFormat>arg1 is a state that {is bordered by} the state arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>stateOrProvince</domain><range>stateOrProvince</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>stateOrProvinceIsBorderedByStateOrProvince</inverse><seedInstances>{"kansas","nebraska"}{"iowa","minnesota"}{"texas","oklahoma"}{"california","oregon"}{"nebraska","south dakota"}{"south dakota","north dakota"}{"new jersey","new york"}{"utah","idaho"}{"massachusetts","new hampshire"}{"west virginia","pennsylvania"}{"nebraska","iowa"}{"wisconsin","minnesota"}{"virginia","west virginia"}{"wyoming","montana"}{"maryland","pennsylvania"}{"minnesota","wisconsin"}{"vermont","massachusetts"}{"new mexico","texas"}{"rhode island","massachusetts"}{"texas","new mexico"}{"indiana","ohio"}{"washington","idaho"}{"colorado","nebraska"}{"nevada","utah"}{"ohio","pennsylvania"}{"arizona","utah"}{"new mexico","arizona"}{"saskatchewan","manitoba"}{"north dakota","montana"}{"delaware","pennsylvania"}{"utah","arizona"}{"pennsylvania","new york"}{"missouri","iowa"}{"kentucky","illinois"}{"california","nevada"}{"maryland","delaware"}{"arizona","california"}{"vermont","new hampshire"}{"idaho","washington"}{"oklahoma","texas"}{"alabama","georgia"}{"new york","vermont"}{"nevada","oregon"}{"oregon","california"}{"oregon","washington"}{"kerala","tamil nadu"}{"arizona","new mexico"}{"north dakota","minnesota"}{"west virginia","ohio"}{"georgia","south carolina"}</seedInstances><seedExtractionPatterns>&#8220;arg1 is bordered by arg2&#8221; &#8220;arg1 is bounded by arg2&#8221; &#8220;arg1 border with arg2&#8221; &#8220;arg1 borders arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-11-20</editDate><author>ontExt</author><curator /><description>Describes the states that borders a state</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="248"><relationName>personGraduatedFromUniversity</relationName><humanFormat>arg1 is a person who {graduated from} the university arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personGraduatedSchool</generalizations><domain>person</domain><range>university</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives>{"mary","high school"}{"jobs","high school"}{"mike","high school"}{"scott","high school"}{"dan","high school"}{"i","high school"}{"linda","high school"}</knownNegatives><inverse>inverseOfPersonGraduatedFromUniversity</inverse><seedInstances>{"mike","california state university"}{"jim","ohio state university"}{"scott","indiana university"}{"mike","michigan state university"}{"jim","law school"}{"mike","law school"}{"william","harvard"}{"dan","michigan state university"}{"scott","california state university"}{"jonathan","trinity college"}{"lisa","ohio university"}{"daniel","cornell university"}{"scott","west point"}{"george","yale"}{"jobs","reed college"}{"jim","princeton university"}{"jay","stanford"}{"scott","law school&#8221;}{"mike","ohio state university"}{"jason","new york university"}{"lisa","indiana university"}{"mike","cornell university"}{"scott","american university"}{"dan","ohio state university"}{"jim","cornell university"}{"scott","brigham young university"}{"mike","rutgers university"}{"greg","california state university"}</seedInstances><seedExtractionPatterns>&#8220;arg1 graduated from arg2&#8221; &#8220;arg1 attended arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-11-20</editDate><author>ontExt</author><curator /><description>Describes the people graduated from a university</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="249"><relationName>buildingFeatureMadeFromBuildingMaterial</relationName><humanFormat>arg1 is a building feature {made from} the building material arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>buildingFeature</domain><range>buildingMaterial</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfBuildingFeatureMadeFromBuildingMaterial</inverse><seedInstances>{"walls","glass"}{"walls","concrete"}{"doors","steel"}{"doors","glass"}{"floors","concrete"}{"walls","rocks"}{"gates","steel"}{"walls","steel"}{"blinds","pvc"}{"doors","iron"}{"stairs","steel"}{"doors","fiberglass"}{"garage doors","steel"}{"exterior walls","glass"}{"floors","glass"}{"shutters","steel"}{"front doors","glass"}{"arches","filigree"}{"stairs","glass"}{"facades","glass"}{"doors","silver"}{"entry doors","fiberglass"}{"interior doors","steel"}{"knob","solid brass"}{"shower doors","glass"}{"doors","pvc"}{"doors","rocks"}{"front door","steel"}{"double doors","iron"}{"decks","fiberglass"}{"arches","glass"}{"doors","steel plate"}{"door frames","steel"}{"gates","rocks"}{"roofs","iron"}{"walls","silver"}{"facades","steel"}{"blinds","steel"}{"front gates","iron"}{"gates","iron"}{"entry door","fiberglass"}{"exterior doors","iron"}</seedInstances><seedExtractionPatterns>&#8220;arg1 made from arg2&#8221; &#8220;arg1 are made from arg2&#8221;  &#8220;arg1 made of arg2&#8221; &#8220;arg1 are made of arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-11-20</editDate><author>ontExt</author><curator /><description>Describes the building features that are made of a building material</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="250"><relationName>clothingMadeFromPlant</relationName><humanFormat>arg1 is a clothing item {made from} the plant arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>clothing</domain><range>plant</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfClothingMadeFromPlant</inverse><seedInstances>{"clothes","bamboo"}{"socks","bamboo"}{"shirts","bamboo"}{"skirts","grass"}{"wear","bamboo"}{"hat","bamboo"}{"sandals","sagebrush"}{"hats","bamboo"}{"clothes","moss"}{"underwear","bamboo"}{"dresses","balloons"}{"robes","bamboo"}{"dresses","bamboo"}{"outfits","grass"}{"shoes","grass"}{"skirt","grass"}{"robe","bamboo"}{"shoes","reeds"}{"shirt","bamboo"}{"dress","balloons"}{"costumes","bamboo"}{"dress","flower"}{"t-shirts","bamboo"}{"hat","flower"}{"skirts","bamboo"}{"underwear","trees"}{"sandals","plants"}{"glasses","bamboo"}{"gloves","bamboo"}{"skirts","palm trees"}{"hat","grass"}{"earrings","bamboo"}{"shoes","bamboo"}{"jackets","grass"}{"dresses","moss"}{"sandals","reeds"}{"jacket","bamboo"}</seedInstances><seedExtractionPatterns>&#8220;arg1 made from arg2&#8221; &#8220;arg1 are made from arg2&#8221;  &#8220;arg1 made of arg2&#8221; &#8220;arg1 are made of arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-11-20</editDate><author>ontExt</author><curator /><description>Describes the clothing items made of a plant</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="251"><relationName>personMovedToStateOrProvince</relationName><humanFormat>arg1 is a person who {moved to} the state arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personHasResidenceInLocation</generalizations><domain>person</domain><range>stateOrProvince</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfPersonMovedToStateOrProvince</inverse><seedInstances>{"mike","california"}{"mary","new york"}{"mary","california"}{"robinson","new york"}{"mike","new york"}{"greg","california"}{"ed","california"}{"jim","california"}{"william","california"}{"jim","new york"}{"collins","california"}{"evans","new york"}{"mike","colorado"}{"roberts","new york"}{"jay","new york"}{"charles","new york"}{"amy","new york"}{"george","new york"}{"dan","california"}{"dan","new york"}{"karen","california"}{"george","california"}{"william","texas"}{"graham","new york"}{"lisa","new york"}{"diane","new york"}{"daniel","california"}{"hill","california"}{"welch","new york"}{"young","california"}{"scott","missouri"}{"scott","new york"}{"jane","new york"}{"kate","new york"}{"jason","texas"}{"karen","new york"}{"scott","new jersey"}{"william","washington"}{"charles","california"}{"william","indiana"}{"evans","california"}{"greg","alaska"}{"karen","colorado"}{"william","kentucky"}{"jim","colorado"}{"ed","alaska"}{"jason","new york"}{"fred","california"}{"william","missouri"}{"dean","new york"}</seedInstances><seedExtractionPatterns>&#8220;arg1 moved to arg2&#8221; &#8220;arg1 came to arg2&#8221; &#8220;arg1 returned to arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-11-20</editDate><author>ontExt</author><curator /><description>Describes the people that moved to live in a state or province</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="252"><relationName>maleMovedToStateOrProvince</relationName><humanFormat>arg1 is a male person who {moved to} the state (or province) arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personMovedToStateOrProvince</generalizations><domain>male</domain><range>stateOrProvince</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfMaleMovedToStateOrProvince</inverse><seedInstances>{"stephen","new york"}{"alex","new york"}{"edwards","new york"}{"stephen","california"}{"alex","california"}{"richardson","washington"}{"edwards","washington"}{"alex","colorado"}{"alex","utah"}{"alex","kentucky"}{"alex","maine"}{"alex","new jersey"}{"luther","massachusetts"}{"edwards","california"}{"stephen","texas"}{"richardson","new mexico"}{"alex","illinois"}{"richardson","kentucky"}{"alex","louisiana"}{"stephen","british columbia"}{"richardson","new york"}{"doyle","california"}{"edwards","arizona"}{"stephen","arkansas"}</seedInstances><seedExtractionPatterns>&#8220;arg1 moved to arg2&#8221; &#8220;arg1 came to arg2&#8221; &#8220;arg1 returned to arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-11-20</editDate><author>ontExt</author><curator /><description>Describes the male people that moved to live in a state or province</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="253"><relationName>fishServedWithFood</relationName><humanFormat>arg1 is a fish that can be {served with} the food arg2 in a meal (or dish) </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>fish</domain><range>food</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfFishServedWithFood</inverse><seedInstances>{"mahi mahi","sauce"}{"tuna","sauce"}{"raw fish","condiments"}{"white fish","chips"}{"plaice","chips"}{"salmon","rye bread"}{"tuna","ponzu sauce"}{"flathead","chips"}{"snapper","salsa"}{"haddock","chips"}{"salmon","salad"}{"salmon","ponzu sauce"}{"salmon","mustard"}{"salmon","pancakes"}{"salmon","salad"}{"salmon","horseradish sauce"}{"red snapper","butter sauce"}{"sea bass","fennel"}{"tuna","mayonnaise sauce"}{"salmon","teriyaki"}{"pike","sauce"}{"salmon","bacon"}{"salmon","red wine sauce"}{"tuna","vinaigrette"}{"salmon","sauce"}{"salmon","fennel"}{"tuna","ginger sauce"}{"salmon","sauce"}{"tuna","mayonnaise"}{"salmon","miso"}{"tuna","wasabi"}{"sea bass","sauce"}{"salmon","hollandaise sauce"}{"salmon","chicken"}{"salmon","french bread"}{"turbot","truffles"}{"anchovies","caesar dressing"}{"trout","sausage"}{"trout","chips"}{"trout","rice pilaf"}{"salmon","dill mayonnaise"}{"anchovies","chicken"}{"trout","salsa"}{"salmon","cocktail sauce"}{"anchovies","chicken"}{"sardines","bread"}{"shellfish","noodles"}{"cod","chips"}</seedInstances><seedExtractionPatterns>&#8220;arg1 served with arg2&#8221; &#8220;arg1 accompanied by arg2&#8221; &#8220;arg1 are served with arg2&#8221; &#8220;arg2 on the top of arg1&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2011-11-20</editDate><author>ontExt</author><curator /><description>Describes the kind of food that are tipically serverd with a fish</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="254"><relationName>academicFieldSuchAsAcademicField</relationName><humanFormat>arg2 is a {type of} arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>academicField</domain><range>academicField</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>InverseOfAcademicFieldSuchAsAcademicField</inverse><seedInstances>{"sciences","economics"}{"social sciences","economics"}{"sciences","sociology"}{"science","physics"}{"business","finance"}{"sciences","anthropology"}{"sciences","medicine"}{"natural sciences","physics"}{"social sciences","anthropology"}{"sciences","genetics"}{"sciences","astronomy"}{"arts","literature"}{"sciences","botany"}{"sciences","engineering"}{"sciences","physiology"}{"science","astronomy"}{"biology","botany"}{"sciences","meteorology"}{"biology","genetics"}{"sciences","molecular biology"}{"sciences","philosophy"}{"science","mathematics"}{"business","planning"}{"sciences","archaeology"}{"science","engineering"}{"science","genetics"}{"sciences","ecology"}{"art","literature"}{"arts","visual arts"}{"industry","telecommunications"}{"arts","architecture"}{"life sciences","biology"}{"biology","biochemistry"}</seedInstances><seedExtractionPatterns>&#8220;arg1 such as arg2&#8221; &#8220;arg1 including arg2&#8221; &#8220;arg2 is a form of arg1&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-12</editDate><author>ontExt</author><curator /><description>Describes a specialization fo an Academic Field</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="255"><relationName>agriculturalProductCameFromCountry</relationName><humanFormat>arg1 {is an agricultural product} produced in arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>itemExistsAtLocation</generalizations><domain>agriculturalProduct</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>InverseOfAgriculturalProductCameFromCountry</inverse><seedInstances>{"coffee","ethiopia"}{"silk","japan"}{"tomatoes","mexico"}{"cotton","egypt"}{"cattle","spain"}{"eggs","germany"}{"cocoa","mexico"}{"flowers","taiwan"}{"tea","china"}{"raw sugar","mexico"}{"silk","china"}{"cocoa","africa"}{"tea","africa"}{"vegetables","mexico"}{"vegetables","holland"}{"flowers","turkey"}{"coffee","africa"}{"okra","africa"}{"sugar","india"}{"tea","vietnam"}{"cotton","india"}{"corn","turkey"}{"coffee","egypt"}{"corn","mexico"}{"flowers","philippines"}{"cotton","uzbekistan"}{"sugar","mexico"}{"cotton","usa"}{"tobacco","south"}{"tea","japan"}</seedInstances><seedExtractionPatterns>&#8220;arg1 came from arg2&#8221; &#8220;arg1 originated in arg2&#8221; &#8220;arg1 produced in arg2&#8221; &#8220;arg1 producers in arg2&#8221; &#8220;arg1 is produced in arg2&#8221; </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-12</editDate><author>ontExt</author><curator /><description>Describes the agricultural products that came from a country</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="256"><relationName>agriculturalProductComingFromVertebrate</relationName><humanFormat>arg1 {is an agricultural product} coming from arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>agriculturalProduct</domain><range>vertebrate</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>InverseOfAgriculturalProductComingFromVertebrate</inverse><seedInstances>{"milk","cows"}{"milk","buffalo"}{"beef","cows"}{"milk","water buffalo"}{"cheeses","jersey cows"}{"cattle","herds"}{"milk","herds"}{"eggs","hens"}{"dairy products","ruminants"}{"wool","sheep"}</seedInstances><seedExtractionPatterns>&#8220;arg1 cominh from arg2&#8221; &#8220;arg2 produce arg1&#8221; </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-12</editDate><author>ontExt</author><curator /><description>Describes the agricultural products that come from a vertebrate</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="257"><relationName>agriculturalProductContainChemical</relationName><humanFormat>arg1 {is an agricultural product} that contains arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>agriculturalProduct</domain><range>chemical</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>itemUsedWithItem isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>InverseOfAgriculturalProductContainChemical</inverse><seedInstances>{"vegetables","antioxidants"}{"sugar","liquids"}{"vegetables","enzymes"}{"tea","antioxidants"}{"vegetables","chemicals"}{"herbs","chemicals"}{"vegetables","starch"}</seedInstances><seedExtractionPatterns>&#8220;arg1 contain arg2&#8221; &#8220;arg1 that contain arg2&#8221; &#8220;arg1 containing arg2&#8221; &#8220;arg2 found in arg1&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-12</editDate><author>ontExt</author><curator /><description>Describes the agricultural products that contain a chemical</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="258"><relationName>agriculturalProductCookedWithAgriculturalProduct</relationName><humanFormat>arg1 {is an agricultural product} that is usually cooked with arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>agriculturalProduct</domain><range>agriculturalProduct</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>agriculturalProductIncludingAgriculturalProduct isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>InverseOfAGriculturalProductCookedWithAgricultureProduct</inverse><seedInstances>{"beef","onions"}{"vegetables","spices"}{"potatoes","tomatoes"}{"milk","sugar"}{"beef","vegetables"}{"lentils","onions"}{"peas","onions"}{"beef","potatoes"}{"okra","tomatoes"}{"lentils","spices"}{"potatoes","herbs"}{"peas","herbs"}{"vegetables","onions"}{"eggs","tomatoes"}{"potatoes","onions"}{"cauliflower","tomatoes"}{"spices","lentils"}{"spices","potatoes"}{"okra","onions"}{"foods","olive oil"}{"spinach","potatoes"}{"spinach","onions"}{"vegetables","spinach"}{"peas","spices"}{"beef","carrots"}{"cauliflower","onions"}{"potatoes","peas"}{"vegetables","olive oil"}{"cauliflower","spices"}{"spinach","spices"}{"vegetables","herbs"}{"carrots","milk"}{"beef","cabbage"}{"beef","spices"}{"potatoes","spices"}{"peas","tomatoes"}{"flowers","sugar"}{"potatoes","cauliflower"}{"spices","tomatoes"}{"lentils","spinach"}{"peas","carrots"}{"onions","spices"}{"foods","milk"}{"cabbage","sugar"}{"eggs","spinach"}</seedInstances><seedExtractionPatterns>&#8220;arg1 cooked with arg2&#8221; &#8221;arg2 on top of arg1&#8221; </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-12</editDate><author>ontExt</author><curator /><description>Describes the agricultural products that are usually cooked with another agricultural product</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="259"><relationName>agriculturalProductCutIntoGeometricShape</relationName><humanFormat>arg1 {is an agricultural product} that is usually cut into arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>agriculturalProduct</domain><range>geometricShape</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>InverseOfAGriculturalProductCutIntoGeometricShape</inverse><seedInstances>{"potatoes","squares"}{"beef","cubes"}{"corn","rounds"}{"cheeses","cubes"}{"potatoes","shapes"}{"carrots","rounds"}{"onions","rounds"}{"beets","cubes"}{"potatoes","rounds"}{"onions","squares"}{"carrots","cubes"}{"eggs","rounds"}{"vegetables","shapes"}{"potatoes","stars"}</seedInstances><seedExtractionPatterns>&#8220;arg1 cut into arg2&#8221; </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-12</editDate><author>ontExt</author><curator /><description>Describes the agricultural products that are usually cut into geometric shapes</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="260"><relationName>agriculturalProductGrowingInStateOrProvince</relationName><humanFormat>arg1 {is an agricultural product} growing in arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>itemExistsAtLocation</generalizations><domain>agriculturalProduct</domain><range>stateOrProvince</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>InverseOfAgriculturalProductGrowingInStateOrProvince</inverse><seedInstances>{"tobacco","maryland"}{"coffee","hawaii"}{"tobacco","virginia"}{"corn","iowa"}{"corn","illinois"}{"crops","california"}{"tobacco","ontario"}{"tea","assam"}{"tea","sikkim"}{"cotton","texas"}{"flowers","alaska"}{"crops","nebraska"}{"crops","nevada"}{"cotton","madhya pradesh"}{"corn","nebraska"}{"cotton","gujarat"}{"taro","hawaii"}{"cotton","oklahoma"}{"corn","minnesota"}{"crops","oregon"}{"flowers","tennessee"}{"varieties","california"}{"tobacco","andhra pradesh"}{"tobacco","tennessee"}{"flowers","ohio"}{"sugar","louisiana"}{"corn","new jersey"}{"corn","kansas"}</seedInstances><seedExtractionPatterns>&#8220;arg1 growing in arg2&#8221; &#8220;arg1 is grown in arg2&#8221; </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-12</editDate><author>ontExt</author><curator /><description>Describes the agricultural products that are produced in a state or province</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="261"><relationName>agriculturalProductGrownInLandscapeFeatures</relationName><humanFormat>arg1 {is an agricultural product} grown in arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>agriculturalProduct</domain><range>landscapeFeatures</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfAgriculturalProductGrownInLandscapeFeature</inverse><seedInstances>{"crops","farmlands"}{"herbs","mountains"}{"crops","islands"}{"coffee","mountains"}{"coffee","islands"}{"crops","uplands"}{"tea","mountains"}{"coffee","rainforest"}{"tea","foothills"}{"olives","valleys"}{"crops","dry areas"}{"cabbage","mountains"}{"crops","rainforest"}{"potatoes","mountains"}{"vegetables","mountains"}{"crops","parks"}{"vegetables","islands"}{"olives","foothills"}{"onions","woods"}{"corn","foothills"}{"vegetables","farmlands"}{"flowers","valleys"}{"tea","valleys"}{"crops","river valley"}{"herbs","islands"}</seedInstances><seedExtractionPatterns>&#8220;arg1 grown in arg2&#8221; &#8220;arg1 are grown in arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-12</editDate><author>ontExt</author><curator /><description>Describes the agricultural products that are grown in landscape features</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="262"><relationName>agriculturalProductIncludingAgriculturalProduct</relationName><humanFormat>arg1 {is a generalization of} arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>agriculturalProduct</domain><range>agriculturalProduct</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>agriculturalProductCookedWithAgriculturalProduct</mutexExceptions><knownNegatives /><inverse>inverseOfAgriculturalProductIncludingAgriculturalProduct</inverse><seedInstances>{"dairy products","milk"}{"livestock","cattle"}{"vegetables","tomatoes"}{"grains","corn"}{"vegetables","onions"}{"crops","tomatoes"}{"crops","vegetables"}{"crops","tobacco"}{"herbs","parsley"}{"vegetables","peas"}{"green vegetables","spinach"}{"crops","cereals"}{"livestock","goats"}{"vegetables","asparagus"}{"vegetables","cucumbers"}{"crops","grains"}{"vegetables","green beans"}{"crops","sugar"}{"crops","corn"}{"crops","carrots"}{"spices","parsley"}{"crops","peas"}{"livestock","pigs"}{"vegetables","beets"}{"dairy products","cheeses"}{"crops","sugarcane"}{"crops","onions"}{"leafy vegetables","broccoli"}{"cereals","corn"}{"leafy vegetables","lettuce"}{"root crops","potatoes"}{"crops","tea"}{"green leafy vegetables","spinach"}{"vegetables","sweet potatoes"}{"vegetables","broccoli"}</seedInstances><seedExtractionPatterns>&#8220;arg1 including arg2&#8221; &#8220;arg1 include arg2&#8221; &#8220;arg2 and other arg1&#8221; &#8220;arg2 are among arg1&#8221; &#8220;arg1 included arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-12</editDate><author>ontExt</author><curator /><description>Describes the agricultural products that are generalizations of other agriculture products</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="263"><relationName>agriculturalProductToAttractInsect</relationName><humanFormat>arg1 {is an agricultural product} that atracts arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>agriculturalProduct</domain><range>insect</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfAgriculturalProductToAttractInsect</inverse><seedInstances>{"flowers","insects"}{"flowers","butterflies"}{"flowers","bumblebees"}{"sugar","ants"}{"flowers","flies"}{"flowers","honeybees"}{"flowers","honey bees"}{"flowers","moths"}{"flowers","adult butterflies"}{"flowers","wasps"}{"herbs","butterflies"}{"flowers","beetles"}{"weeds","insects"}{"flowers","ladybugs"}{"milk","flies"}{"flowers","colorful butterflies"}{"flowers","insects"}{"flowers","ants"}{"flowers","parasitic wasps"}{"flowers","bugs"}{"wool","moths"}{"sugar","flies"}{"flowers","syrphid flies"}{"flowers","butterflies"}{"flowers","hawkmoths"}{"flowers","beautiful butterflies"}{"flowers","halictid bees"}{"flowers","weevils"}{"flowers","beetle"}{"sugar","bugs"}{"crops","insects"}{"tomatoes","hornworms"}{"flowers","parasitoids"}{"parsley","caterpillars"}{"watermelon","butterflies"}{"onions","maggots"}{"crops","aphids"}{"crops","honey bees"}{"flowers","swallowtail butterflies"}{"flowers","blister beetles"}{"potatoes","bugs"}{"corn","moths"}{"wool","carpet beetles"}</seedInstances><seedExtractionPatterns>&#8220;arg1 to attract arg2&#8221; &#8220;arg2 are attracted to arg1&#8221; &#8220;arg1 attract arg2&#8221; &#8220;arg1 will attract arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-12</editDate><author>ontExt</author><curator /><description>Describes the agricultural products that attract insects</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="264"><relationName>animalSuchAsFish</relationName><humanFormat>arg2 {is a type of} arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>animalTypeHasAnimal</generalizations><domain>animal</domain><range>fish</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfAnimalSuchAsFish</inverse><seedInstances>{"marine life","sharks"}{"marine life","tropical fish"}{"predators","tuna"}{"marine animals","sharks"}{"invertebrates","shellfish"}{"sea creatures","sharks"}{"marine life","shellfish"}{"predators","larger fish"}{"marine life","stingrays"}{"marine life","salmon"}{"marine life","moray eels"}{"predators","striped bass"}{"prawns","shellfish"}{"creatures","small fish"}{"predators","largemouth bass"}{"marine life","manta rays"}{"marine life","dolphin"}{"predators","trout"}{"predators","sharks"}{"marine life","reef fish"}{"predators","large fish"}{"vertebrates","sharks"}{"creatures","stingrays"}{"predators","jacks"}{"predators","shark"}{"creatures","whale sharks"}{"marine animals","shellfish"}{"predators","cod"}{"vertebrates","zebrafish"}{"creatures","trout"}{"rays","pelagics"}{"marine life","barracuda"}{"predators","swordfish"}{"sea creatures","shellfish"}{"sea creatures","tropical fish"}{"marine life","whale sharks"}{"creatures","eels"}{"predators","barracuda"}{"marine life","eagle rays"}{"carnivores","sharks"}{"predators","lake trout"}{"predators","walleye"}{"predators","groupers"}{"creatures","shellfish"}{"sea creatures","small fish"}{"marine life","reef sharks"}{"creatures","salmon"}{"creatures","manta rays"}{"endangered species","salmon"}</seedInstances><seedExtractionPatterns>&#8220;arg1 such as arg2&#8221; &#8220;arg1 include arg2&#8221; &#8220;arg1 including arg2&#8221; </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-12</editDate><author>ontExt</author><curator /><description>Describes the fish that are from a specific type of animals</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="265"><relationName>animalSuchAsInvertebrate</relationName><humanFormat>arg2 {is a type of} arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>animalTypeHasAnimal</generalizations><domain>animal</domain><range>invertebrate</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>arthropodAndOtherArthropod</mutexExceptions><knownNegatives /><inverse>inverseOfAnimalSuchAsInvertebrate</inverse><seedInstances>{"invertebrates","corals"}{"invertebrates","snails"}{"invertebrates","crustaceans"}{"invertebrates","mollusks"}{"creatures","snails"}{"invertebrates","molluscs"}{"invertebrates","insect larvae"}{"prawns","crustaceans"}{"marine life","sponges"}{"invertebrates","sponges"}{"pests","nematodes"}{"invertebrates","mussels"}{"invertebrates","clams"}{"invertebrates","jellyfish"}{"marine animals","corals"}{"small animals","snails"}{"creatures","crustaceans"}{"marine life","corals"}{"creatures","clams"}{"sea creatures","jellyfish"}{"creatures","jellyfish"}{"marine life","crustaceans"}{"sea creatures","clams"}{"zooplankton","rotifers"}{"invertebrates","oysters"}{"pests","snails"}{"filter feeders","mussels"}{"sea creatures","corals"}{"invertebrates","bivalves"}{"invertebrates","polychaetes"}{"small animals","crustaceans"}{"invertebrates","nematodes"}{"marine life","clams"}{"invertebrates","nudibranchs"}{"marine animals","jellyfish"}{"sea creatures","sponges"}{"filter feeders","clams"}{"creatures","sponges"}{"creatures","mussels"}{"filter feeders","corals"}{"invertebrates","larvae"}{"invertebrates","squids"}{"creatures","nudibranchs"}{"marine animals","crustaceans"}{"marine life","mussels"}{"filter feeders","oysters"}{"invertebrates","octopuses"}{"invertebrates","leeches"}{"invertebrates","urchins"}{"marine life","oysters"}</seedInstances><seedExtractionPatterns>&#8220;arg1 such as arg2&#8221; &#8220;arg1 include arg2&#8221; &#8220;arg1 including arg2&#8221; </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-12</editDate><author>ontExt</author><curator /><description>Describes the invertebrate that are from a specific type of animals</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="266"><relationName>animalSuchAsInsect</relationName><humanFormat>arg2 {is a type of} arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>animalSuchAsInvertebrate</generalizations><domain>animal</domain><range>insect</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>arthropodAndOtherArthropod</mutexExceptions><knownNegatives /><inverse>inverseOfAnimalSuchAsInsect</inverse><seedInstances>{"pests","insects"}{"pests","termites"}{"small animals","insects"}{"invertebrates","insects"}{"pests","flies"}{"pests","mites"}{"creatures","butterflies"}{"creatures","insects"}{"pests","ants"}{"social insects","ants"}{"pests","ticks"}{"pests","bugs"}{"locusts","insects"}{"pests","fleas"}{"creatures","ants"}{"invertebrates","beetles"}{"predators","ants"}{"pests","caterpillars"}{"invertebrates","earthworms"}{"predators","ladybugs"}{"pests","spider mites"}{"pests","beetles"}{"invertebrates","aquatic insects"}{"predators","lady beetles"}{"pests","wasps"}{"predators","ladybirds"}{"predators","insects"}{"invertebrates","ants"}{"pests","fruit flies"}{"pests","mosquitos"}{"pests","grasshoppers"}{"pests","whiteflies"}{"pests","scale"}{"pests","carpenter ants"}{"creatures","flies"}{"predators","insects"}{"invertebrates","termites"}{"pests","grubs"}{"creatures","earthworms"}{"pests","gypsy moth"}{"invertebrates","flies"}{"pests","trojans"}{"pests","aphids"}{"invertebrates","grasshoppers"}{"pests","scales"}{"predators","wasps"}{"creatures","beetles"}{"invertebrates","butterflies"}{"pests","fruit fly"}{"pests","cutworms"}</seedInstances><seedExtractionPatterns>&#8220;arg1 such as arg2&#8221; &#8220;arg1 include arg2&#8221; &#8220;arg1 including arg2&#8221; </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-12</editDate><author>ontExt</author><curator /><description>Describes the insect that are from a specific type of animals</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="267"><relationName>animalSuchAsMollusk</relationName><humanFormat>arg2 {is a type of} arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>animalSuchAsInvertebrate</generalizations><domain>animal</domain><range>mollusk</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfAnimalSuchAsMollusk</inverse><seedInstances>{"invertebrates","sea urchins"}{"predators","starfish"}{"invertebrates","octopus"}{"predators","octopus"}{"invertebrates","starfish"}{"creatures","starfish"}{"creatures","sea stars"}{"sea creatures","starfish"}{"marine life","starfish"}{"marine animals","sea urchins"}{"predators","sea stars"}{"sea creatures","sea horses"}{"creatures","sea urchins"}{"invertebrates","sea stars"}{"creatures","sea horses"}{"creatures","sea anemones"}{"marine life","sea horses"}{"marine animals","starfish"}{"marine life","sea anemones"}{"prawns","sea food"}{"creatures","giant squid"}{"marine life","octopus"}{"sea creatures","sea urchins"}{"sea creatures","octopus"}{"creatures","sea anemone"}{"invertebrates","squid"}{"marine life","sea urchins"}{"predators","sea lion"}{"creatures","nudibranch"}{"rays","seafloor"}{"marine animals","squid"}{"creatures","sea shells"}{"creatures","octopus"}{"predators","sea anemone"}{"invertebrates","sea anemones"}{"marine life","cuttlefish"}{"horse","seabiscuit"}{"predators","squid"}</seedInstances><seedExtractionPatterns>&#8220;arg1 such as arg2&#8221; &#8220;arg1 include arg2&#8221; &#8220;arg1 including arg2&#8221; </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-12</editDate><author>ontExt</author><curator /><description>Describes the mollusk that are from a specific type of animals</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="268"><relationName>animalThatFeedOnInsect</relationName><humanFormat>arg1 {feeds on} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>animalPreysOn</generalizations><domain>animal</domain><range>insect</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfAnimalFeedOnInsect</inverse><seedInstances>{"predators","insects"}{"pests","insects"}{"predators","aphids"}{"creatures","insects"}{"predators","mosquito larvae"}{"predators","thrips"}{"carnivores","insects"}{"predators","caterpillars"}{"pests","bugs"}{"pests","predatory insects"}{"predators","mites"}{"creatures","mosquitos"}{"carnivores","grubs"}{"creatures","bugs"}{"pests","lacewings"}{"scavengers","insects"}{"mantis","grasshopper"}{"insectivores","insects"}{"various species","caterpillars"}{"pests","mites"}{"predators","fly larvae"}{"predators","moths"}{"insectivores","ants"}{"predators","pest insects"}{"predators","ants"}{"creatures","grasshoppers"}{"predators","grasshoppers"}{"predators","aquatic insects"}{"cow","flies"}{"cow","maggots"}{"creatures","grubs"}{"creatures","ants"}{"mantis","beetle"}{"pests","ladybugs"}{"predators","bugs"}{"creatures","garden pests"}{"pests","grubs"}{"creatures","maggots"}{"mantis","aphids"}{"various species","insects"}</seedInstances><seedExtractionPatterns>&#8220;arg1 that feed on arg2&#8221; &#8220;arg1 that eat arg2&#8221; &#8221;arg1 eating arg2&#8221; &#8220;arg1 feeding on arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-12</editDate><author>ontExt</author><curator /><description>Describes the animals that feed on Insects</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="269"><relationName>arteryArisesFromArtery</relationName><humanFormat>arg1 {arises from} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>artery</domain><range>artery</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfArteryArisesFromArtery</inverse><seedInstances>{"aorta","left ventricle"}{"aorta","right ventricle"}{"pulmonary artery","right ventricle"}{"pulmonary artery","left ventricle"}{"left coronary artery","pulmonary artery"}{"coronary artery","pulmonary artery"}{"thyroid artery","thyrocervical trunk"}{"subclavian artery","brachiocephalic artery"}{"pulmonary artery","right pulmonary artery"}{"left common carotid artery","innominate artery"}{"carotid artery","innominate artery"}{"common carotid artery","innominate artery"}{"carotid artery","aorta"}{"pulmonary artery","aorta"}{"subclavian artery","brachiocephalic trunk"}{"external carotid artery","common carotid artery"}{"coronary artery","main pulmonary artery"}{"ductus arteriosus","aorta"}{"right common carotid","brachiocephalic trunk"}{"left common carotid artery","aorta"}{"hepatic artery","left gastric artery"}{"common carotid","brachiocephalic trunk"}{"common carotid","subclavian artery"}{"subclavian artery","innominate artery"}{"vertebral artery","subclavian artery"}{"hepatic artery","superior mesenteric artery"}{"tibial artery","popliteal artery"}{"great artery","left ventricle"}{"common carotid artery","aorta"}{"carotid artery","common carotid artery"}{"glomerulus","afferent arteriole"}{"coronary artery","aorta"}</seedInstances><seedExtractionPatterns>&#8220;arg1 arises from arg2&#8221; &#8220;arg1 originates from arg2&#8221; &#8220;arg1 branches from arg2&#8221;</seedExtractionPatterns><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-12</editDate><author>ontExt</author><curator /><description>Describes the arteries that arises from other arteries</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="270"><relationName>arteryCalledArtery</relationName><humanFormat>arg1 {is called} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>artery</domain><range>artery</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>arteriesSuchAsArteries isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfArteryCalledArtery</inverse><seedInstances>{"blood vessels","capillaries"}{"arteries","arterioles"}{"tiny blood vessels","capillaries"}{"vessels","arteries"}{"blood vessels","coronary arteries"}{"arteries","coronary arteries"}{"blood vessel","aorta"}{"smaller vessels","capillaries"}{"smaller arteries","arterioles"}{"blood vessels","glomerulus"}{"arteries","aorta"}{"blood vessel","ductus arteriosus"}{"large artery","aorta"}{"vessels","arterioles"}{"blood vessels","aorta"}{"blood vessels","arterioles"}{"smaller vessels","arterioles"}{"vessels","capillaries"}{"vessels","coronary arteries"}{"blood vessels","arteries"}{"vessels","aorta"}{"large arteries","aorta"}{"major artery","aorta"}{"small arteries","arterioles"}{"blood vessels","sinusoids"}{"blood vessels","vascular system"}{"tiny blood vessels","arterioles"}{"main artery","aorta"}{"arteries","carotid arteries"}{"major arteries","aorta"}{"vessels","pulmonary arteries"}{"capillaries","sinusoids"}{"capillaries","glomerulus"}{"aorta","renal artery"}{"aorta","ductus arteriosus"}{"blood vessel","pulmonary artery"}{"vessels","pulmonary artery"}{"arteries","iliac arteries"}{"blood vessel","femoral artery"}{"aorta","arteries"}{"blood vessels","carotid arteries"}{"arteries","carotid artery"}{"vessels","blood vessels"}{"vessels","carotid artery"}{"blood vessels","pulmonary artery"}{"vessels","dorsal aorta"}{"vessels","carotid arteries"}{"blood vessels","carotid artery"}{"blood vessels","microvessels"}{"pulmonary artery","ductus arteriosus"}</seedInstances><seedExtractionPatterns>&#8220;arg1 called arg2&#8221;&#8221;arg1 are called arg2&#8221; &#8220;arg1 known as arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-12</editDate><author>ontExt</author><curator /><description>Describes the names an artery can be called</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="271"><relationName>arthropodAndOtherArthropod</relationName><humanFormat>arg1 is an arthropod {as well as} arg2 also is</humanFormat><populate>1</populate><visible>1</visible><generalizations>animalIsTypeOfAnimal</generalizations><domain>arthropod</domain><range>arthropod</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>animalSuchAsInsect, animalSuchAsInvertebrate</mutexExceptions><knownNegatives /><inverse>inverseOfArthropodAndOtherArthropod</inverse><seedInstances>{"spiders","arthropods"}{"bees","pollinators"}{"pollinators","beneficial insects"}{"spiders","arachnids"}{"scorpions","arachnids"}{"native bees","pollinators"}{"arachnids","arthropods"}{"scorpions","arthropods"}{"bees","pollinating insects"}{"crabs","arthropods"}{"bees","beneficial insects"}{"black widow","spiders"}{"trilobites","arthropods"}{"centipedes","scorpions"}{"spiders","small arthropods"}{"wolf spiders","spiders"}{"tarantulas","arachnids"}{"lobsters","arthropods"}{"spiders","beneficial insects"}{"black widows","spiders"}{"recluse spider","spiders"}{"centipedes","arthropods"}{"black widow spiders","spiders"}{"brown recluse","spiders"}{"crickets","arthropods"}{"maine lobster","lobsters"}{"tarantulas","spiders"}{"black widow","widow spiders"}{"brown recluse spiders","spiders"}{"bees","native bees"}{"crayfish","arthropods"}{"black widow","dangerous spiders"}{"recluse spiders","spiders"}{"tarantulas","arthropods"}{"shrimp","decapods"}{"brown recluse","recluse spiders"}{"crickets","spiders"}{"scorpions","spiders"}{"shrimp","crabs"}{"spider","arachnids"}{"blue crabs","crabs"}{"sac spiders","spiders"}{"daphnia","cladocerans"}{"shrimp","arthropods"}{"horseshoe crabs","arthropods"}{"brown recluse spider","spiders"}{"ghost shrimp","shrimp"}{"daphnia","water fleas"}{"hobo spider","spiders"}{"crab spiders","spiders"}</seedInstances><seedExtractionPatterns>&#8220;arg1 and other arg2&#8221; &#8221;arg1 such as arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-12</editDate><author>ontExt</author><curator /><description>Describes similar arthropods</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="272"><relationName>arthropodCalledArthropod</relationName><humanFormat>arg1 {is called} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>synonymFor</generalizations><domain>arthropod</domain><range>arthropod</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfArthropodCalledArthropod</inverse><seedInstances>{"spider","tarantula"}{"arthropods","trilobites"}{"arthropods","arachnids"}{"shrimps","krill"}{"shrimp","black tiger shrimp"}{"shrimp","krill"}{"spiders","orb weavers"}{"spider","brown recluse"}{"shrimp","brine shrimp"}{"arachnids","scorpions"}{"small shrimp","krill"}{"lobster","langostino"}{"crab","fiddler crab"}{"tick","deer tick"}{"orb weaver","spider"}{"louse","phylloxera"}{"tick","lone star tick"}{"spider","hobo spider"}{"crabs","lobsters"}{"spiders","crabs"}{"wasp","yellowjacket"}{"crabs","coconut crabs"}{"spider","daddy longlegs"}{"lobster","crayfish"}{"shrimp","artemia"}{"crabs","blue crabs"}{"arachnids","opiliones"}{"spider","black widow"}{"crabs","sand fleas"}{"spiders","tarantulas"}{"spider","daddy long legs"}{"crabs","fiddler crabs"}{"hairy spiders","tarantulas"}</seedInstances><seedExtractionPatterns>&#8220;arg1 called arg2&#8221; &#8220;arg1 also known as arg2&#8221; &#8220;arg1 also called arg2&#8221; &#8220;arg1 nickname is arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-12</editDate><author>ontExt</author><curator /><description>Describes the names an artery can be called</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="273"><relationName>ArthropodLooksLikeInsect</relationName><humanFormat>arg1 is an arthropod that {looks like} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>arthropod</domain><range>insect</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>ArthropodThatFeedOnInsect isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfArthropodLookLikeInsect</inverse><seedInstances>{"spiders","mites"}{"bees","wasps"}{"spiders","insects"}{"crickets","grasshoppers"}{"spiders","ants"}{"bees","wasps"}{"crickets","bugs"}{"bees","insects"}{"spiders","flies"}{"bees","ants"}{"sowbugs","insects"}{"arachnids","insects"}{"chiggers","ticks"}{"centipedes","millipedes"}{"spider","insects"}{"yellowjackets","honeybees"}{"centipedes","millipedes"}</seedInstances><seedExtractionPatterns>&#8220;arg1 look like arg2&#8221; &#8220;arg1 are often confused with arg2&#8221; &#8220;arg1 is often confused with arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-18</editDate><author>ontExt</author><curator /><description>Describes the arthropod that look like specific insects</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="274"><relationName>ArthropodThatFeedOnInsect</relationName><humanFormat>arg1 is an arthropod that {feeds on} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>arthropod</domain><range>insect</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>ArthropodLooksLikeInsect isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfArthropodFeedOnInsect</inverse><seedInstances>{"beneficial insects","aphids"}{"spiders","midges"}{"beneficial insects","caterpillars"}{"spiders","insects"}{"centipedes","insects"}{"spiders","bugs"}{"beneficial insects","whiteflies"}{"slugs","beetles"}{"pine beetles","beetles"}{"spiders","insects"}{"arthropods","insects"}{"beneficial insects","pest insects"}{"beneficial insects","garden pests"}{"psylla","insects"}{"beneficial insects","flies"}{"beneficial insects","aphid"}{"spiders","ladybugs"}{"spiders","mites"}{"scorpions","insects"}</seedInstances><seedExtractionPatterns>&#8220;arg1 that feed on arg2&#8221; &#8220;arg1 that eat arg2&#8221; &#8221;arg1 eating arg2&#8221; &#8220;arg1 feeding on arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-18</editDate><author>ontExt</author><curator /><description>Describes the names an artery can be called</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="275"><relationName>athleteBeatAthlete</relationName><humanFormat>arg1 is an athlete who {beat} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>athlete</domain><range>athlete</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfAthleteBeatAthlete</inverse><seedInstances>{"roger federer","andy roddick"}{"venus williams","lindsay davenport"}{"lennox lewis","evander holyfield"}{"pete sampras","andre agassi"}{"jack nicklaus","arnold palmer"}{"justine henin","svetlana kuznetsova"}{"roger federer","marcos baghdatis"}{"marat safin","roger federer"}{"hank aaron","babe ruth"}{"nick faldo","greg norman"}{"jimmie johnson","jeff gordon"}{"jimmie johnson","carl edwards"}{"ken norton","muhammad ali"}{"andy roddick","roger federer"}{"anastasia myskina","elena dementieva"}{"venus williams","kim clijsters"}{"phil mickelson","tiger woods"}{"gary player","arnold palmer"}{"kim clijsters","venus williams"}{"tiger woods","phil mickelson"}{"svetlana kuznetsova","elena dementieva"}{"lleyton hewitt","pete sampras"}{"elena dementieva","dinara safina"}{"barry bonds","hank aaron"}{"venus williams","jelena jankovic"}{"roger federer","marat safin"}{"elena dementieva","svetlana kuznetsova"}{"vijay singh","tiger woods"}{"stewart cink","tiger woods"}{"jeff gordon","mark martin"}{"dwayne wade","kobe bryant"}{"venus williams","vera zvonareva"}{"andre agassi","pete sampras"}{"justine henin","jelena jankovic"}{"eli manning","tom brady"}{"jelena jankovic","elena dementieva"}{"lindsay davenport","venus williams"}{"pete sampras","roger federer"}{"marat safin","pete sampras"}{"roger federer","andre agassi"}{"pete sampras","tim henman"}{"pete sampras","marat safin"}{"boris becker","ivan lendl"}{"jelena jankovic","svetlana kuznetsova"}{"tiger woods","stewart cink"}{"jack nicklaus","gary player"}{"roger federer","lleyton hewitt"}{"lleyton hewitt","tim henman"}{"pete sampras","boris becker"}{"tiger woods","vijay singh"}{"venus williams","serena williams"}{"jelena jankovic","serena williams"}{"steffi graf","monica seles"}{"justine henin","serena williams"}{"steffi graf","martina navratilova"}{"ivan lendl","john mcenroe"}{"chris evert","martina navratilova"}{"chris evert","martina navratilova"}{"lindsay davenport","martina hingis"}{"steffi graf","monica seles"}{"vera zvonareva","williams"}{"svetlana kuznetsova","williams"}{"venus williams","serena williams"}{"ivan lendl","john mcenroe"}{"lindsay davenport","serena williams"}{"ana ivanovic","maria sharapova"}{"justine henin","serena williams"}{"steffi graf","martina navratilova"}{"svetlana kuznetsova","maria sharapova"}{"venus williams","martina hingis"}{"venus williams","maria sharapova"}{"lennox lewis","mike tyson"}{"kim clijsters","maria sharapova"}{"svetlana kuznetsova","serena williams"}{"dinara safina","williams"}{"jelena jankovic","maria sharapova"}{"lindsay davenport","martina hingis"}{"eric young","sting"}{"dinara safina","williams"}{"elena dementieva","serena williams"}{"dinara safina","serena williams"}{"lindsay davenport","jennifer capriati"}{"elena dementieva","williams"}{"vera zvonareva","maria sharapova"}</seedInstances><seedExtractionPatterns>&#8220;arg1 beat arg2&#8221; &#8220;arg1 defeated arg2&#8221; &#8220;arg1 defeats arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-18</editDate><author>ontExt</author><curator /><description>Describes the athletes whom beat other athletes</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="276"><relationName>athleteInjuredHisBodyPart</relationName><humanFormat>arg1 is an athlete who {injured} his/her arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>athlete</domain><range>bodypart</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfAthleteInjuredHisBodyPart</inverse><seedInstances>{"tom brady","knee"}{"sidney crosby","ankle"}{"manu ginobili","ankle"}{"ben roethlisberger","shoulder"}{"blake","shoulder"}{"tony parker","ankle"}{"bonds","knee"}{"martin","groin"}{"shortstop","back"}{"ramirez","shoulder"}{"jameer nelson","shoulder"}{"takashi saito","elbow"}{"lebron james","ankle"}{"wade boggs","back"}{"martin havlat","shoulder"}{"steve blake","shoulder"}</seedInstances><seedExtractionPatterns>&#8220;arg1 injured his arg2&#8221; &#8220;arg1 injured her arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-18</editDate><author>ontExt</author><curator /><description>Describes the athletes that had injured any body part</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="277"><relationName>athleteLedSportsTeam</relationName><humanFormat>arg1 is an athlete who {led} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>athletePlaysForTeam</generalizations><domain>athlete</domain><range>sportsTeam</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfAthleteLedSportsTeam</inverse><seedInstances>{"kobe bryant","lakers"}{"matt cassel","patriots"}{"amare stoudemire","suns"}{"manu ginobili","spurs"}{"eli manning","giants"}{"ben gordon","bulls"}{"michael redd","bucks"}{"iverson","sixers"}{"peyton manning","colts"}{"favre","jets"}{"ben roethlisberger","steelers"}{"iverson","pistons"}{"rickey henderson","oakland athletics"}{"brett favre","jets"}{"brett favre","packers"}{"brian urlacher","bears"}{"peyton manning","indianapolis colts"}{"tom brady","patriots"}{"jackie robinson","brooklyn dodgers"}{"shaq","suns"}{"martin","nets"}{"dwight howard","magic"}{"alex rodriguez","yankees"}{"lou piniella","cubs"}{"kevin garnett","celtics"}{"iverson","nuggets"}{"deron williams","jazz"}{"eli manning","new york giants"}{"larry foote","steelers"}{"chris cooley","redskins"}{"babe ruth","yankees"}{"elton brand","sixers"}{"hank aaron","milwaukee braves"}{"shaquille o'neal","suns"}{"j.r. smith","nuggets"}{"hedo turkoglu","magic"}{"luol deng","bulls"}{"martin","yankees"}{"carlos boozer","jazz"}{"ramon sessions","bucks"}{"drew bledsoe","patriots"}{"allen iverson","nuggets"}{"ben roethlisberger","pittsburgh steelers"}{"brett favre","new york jets"}{"johan santana","mets"}{"favre","packers"}{"matt cassel","pats"}{"justin morneau","twins"}{"hernandez","mets"}{"tom brady","new england patriots"}</seedInstances><seedExtractionPatterns>&#8220;arg1 led arg2&#8221; &#8220;arg1 leads arg2&#8221; </seedExtractionPatterns><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-18</editDate><author>ontExt</author><curator /><description>Describes the athletes that lead/led a sports team</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="278"><relationName>athleteWinsAwardTrophyTournament</relationName><humanFormat>arg1 is an athlete who {wins} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>athlete</domain><range>awardTrophyTournament</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfAthleteWinsAwardTrophyTournament</inverse><seedInstances>{"jack nicklaus","masters"}{"tiger woods","u.s. open"}{"tiger woods","us open"}{"kurt warner","super bowl"}{"arnold palmer","masters"}{"roger federer","us open"}{"tiger woods","grand slam"}{"bobby jones","grand slam"}{"barry sanders","heisman trophy"}{"dinara safina","australian open"}{"arnold palmer","u.s. open"}{"andy roddick","u.s. open"}{"greg norman","masters"}{"greg norman","british open"}{"gary player","masters"}{"peyton manning","super bowl"}{"favre","super bowl"}{"nick faldo","british open"}{"arthur ashe","u.s. open"}{"andre agassi","u.s. open"}{"tom brady","super bowl"}{"bobby jones","u.s. open"}{"ana ivanovic","french open"}{"eli manning","super bowl"}{"greg norman","australian open"}{"brad lidge","world series"}{"anastasia myskina","french open"}{"dinara safina","grand slam"}{"pete sampras","us open"}{"dinara safina","french open"}{"kim clijsters","australian open"}{"santonio holmes","super bowl"}{"roger federer","grand slam"}{"curt schilling","world series"}{"martin","nextel cup"}{"jamie gold","world series"}{"ricky williams","heisman trophy"}{"andre agassi","australian open"}{"ben roethlisberger","super bowl"}{"roger clemens","world series"} {&#8220;albert pujols&#8221;,&#8221;world series&#8221;} {&#8220;jim thome&#8221;,&#8221;world series&#8221;}  {&#8220;kobe bryant&#8221;,&#8221;nba championship&#8221;}</seedInstances><seedExtractionPatterns>&#8220;arg1 wins arg2&#8221; &#8221;arg1 who won arg2&#8221; &#8220;arg1 has won arg2&#8221; &#8221;arg2 winner arg1&#8221; &#8220;arg2 champion arg1&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-18</editDate><author>ontExt, Prophet</author><curator /><description>Describes the athletes who won an award trophy tournament</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="279"><relationName>attractionMadeOfBuildingMaterial</relationName><humanFormat>arg1 is an attraction {made of} arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>attraction</domain><range>buildingMaterial</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfAttractionMadeOfBuildingMaterial</inverse><seedInstances>{"house","glass"}{"house","concrete"}{"hull","fiberglass"}{"dome","glass"}{"house","silver"}{"pyramid","glass"}{"house","rocks"}{"dome","concrete"}{"path","rocks"}{"statue of liberty","copper"}{"house","iron"}{"hull","steel"}{"palace","copper"}{"towers","steel"}{"house","steel"}{"dome","copper"}{"towers","glass"}{"palace","glass"}{"hull","concrete"}{"hull","fibreglass"}{"path","concrete"}{"towers","silver"}{"trolley","steel"}{"towers","concrete"}{"stadium","steel"}{"hull","iron"}{"memorial","glass"}{"hull","carbon fiber"}{"museums","glass"}{"coaster","tubular steel"}{"memorial","bronze"}{"arrowhead","copper"}{"artworks","silver"}{"house","fiberglass"}{"towers","carbon fiber"}{"coaster","glass"}{"pavilion","glass"}{"buses","steel"}{"dome","brass"}{"artworks","bronze"}{"dome","bronze"}{"wonderland","glass"}{"clear","glass"}{"hull","glass"}{"path","steel"}{"memorial","brass"}</seedInstances><seedExtractionPatterns>&#8220;arg1 made of arg2&#8221; &#8221;arg1 is made of arg2&#8221; &#8220;arg1 built og arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-18</editDate><author>ontExt</author><curator /><description>Describes the materials used to build attractions</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="280"><relationName>automobileMakerCarDealersInStateOrProvince</relationName><humanFormat>arg1 is a specific automobile maker dealer {in} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>automobileMaker</domain><range>stateOrProvince</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfAutomobileMakerCarDealersInStateOrProvince</inverse><seedInstances>{"jeep","kansas"}{"honda","maryland"}{"corvette","georgia"}{"dodge","pennsylvania"}{"jeep","delaware"}{"toyota","texas"}{"dodge","georgia"}{"honda","california"}{"dodge","massachusetts"}{"honda","oklahoma"}{"honda","kansas"}{"infiniti","arizona"}{"chevrolet","california"}{"nissan","ohio"}{"honda","minnesota"}{"dodge","arizona"}{"jeep","new york"}{"chrysler","texas"}{"chevrolet","missouri"}{"dodge","new york"}{"honda","iowa"}{"honda","arizona"}{"chevrolet","maine"}{"lexus","texas"}{"toyota","california"}{"toyota","pennsylvania"}{"honda","ohio"}{"gmc","michigan"}{"lexus","new jersey"}{"chevrolet","arizona"}{"honda","alabama"}{"chrysler","new york"}{"acura","texas"}{"cadillac","texas"}{"suzuki","michigan"}{"volkswagen","wisconsin"}{"nissan","new york"}{"mazda","arizona"}{"toyota","indiana"}{"chrysler","michigan"}{"toyota","virginia"}{"dodge","michigan"}{"mercury","arizona"}{"dodge","louisiana"}{"hyundai","new jersey"}{"kia","massachusetts"}{"honda","texas"}{"dodge","wisconsin"}{"volkswagen","texas"}{"nissan","texas"} </seedInstances><seedExtractionPatterns>&#8220;arg1 car dealers in arg2&#8221; &#8221;arg1 auto dealers in arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-18</editDate><author>ontExt</author><curator /><description>Describes the car dealers in a state or province</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="281"><relationName>automobileMakerChiefExecutiveCeo</relationName><humanFormat>arg2 {is the CEO} of the automobile maker company arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>companyCeo</generalizations><domain>automobileMaker</domain><range>ceo</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfAutomobileMakerChiefExecutiveCeo</inverse><seedInstances>{"gm","rick wagoner"}{"fiat","sergio marchionne"}{"chrysler","bob nardelli"}{"nissan","carlos ghosn"}{"volkswagen","martin winterkorn"}{"renault","carlos ghosn"}{"bmw","norbert reithofer"}{"honda","takeo fukui"}{"gm","richard wagoner"}{"motors","rick wagoner"}{"chrysler","dieter zetsche"}{"daimlerchrysler","dieter zetsche"}{"bmw","helmut panke"}{"nissan motor","carlos ghosn"}{"chrysler llc","bob nardelli"}</seedInstances><seedExtractionPatterns>&#8220;arg1 chief executive arg2&#8221;</seedExtractionPatterns><nrOfValues>1</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-18</editDate><author>ontExt</author><curator /><description>Describes the CEOs of automobile maker companies</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="282"><relationName>automobileMakerDealersInCity</relationName><humanFormat>arg1 is a specific automobile maker dealer {in} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>hasOfficeInCity</generalizations><domain>automobileMaker</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfAutomobileMakerDealersInCity</inverse><seedInstances>{"jeep","roanoke"}{"honda","tulsa"}{"jeep","vancouver"}{"suzuki","tucson"}{"nissan","san antonio"}{"honda","houston"}{"chevrolet","houston"}{"nissan","san diego"}{"lexus","dallas"}{"jeep","lancaster"}{"chevrolet","indianapolis"}{"dodge","san diego"}{"chevrolet","layton"}{"honda","sacramento"}{"dodge","houston"}{"honda","philadelphia"}{"audi","chicago"}{"chevrolet","seattle"}{"toyota","chicago"}{"bmw","milwaukee"}{"jeep","charleston"}{"toyota","dallas"}{"honda","san antonio"}{"hyundai","san diego"}{"jaguar","houston"}{"toyota","tucson"}{"bmw","dallas"}{"chevrolet","detroit"}{"chevrolet","philadelphia"}{"toyota","seattle"}{"honda","lancaster"}{"buick","san diego"}{"buick","columbus"}{"honda","albuquerque"}{"jeep","birmingham"}{"honda","atlanta"}{"honda","seattle"}{"chevrolet","denver"}{"chevrolet","dallas"}{"toyota","houston"}{"honda","dallas"}{"honda","denver"}{"honda","indianapolis"}{"dodge","milwaukee"}{"jaguar","coventry"}{"cadillac","dallas"}{"isuzu","knoxville"}{"acura","dallas"}{"jaguar","birmingham"}{"toyota","denver"}</seedInstances><seedExtractionPatterns>&#8220;arg1 car dealers in arg2&#8221; &#8221;arg1 auto dealers in arg2&#8221; &#8221;arg1 dealers in arg2&#8221; </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-18</editDate><author>ontExt</author><curator /><description>Describes the car dealers in a city</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="283"><relationName>automobileMakerDealersInCountry</relationName><humanFormat>arg1 is a specific automobile maker dealer {in} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>hasOfficeInCountry</generalizations><domain>automobileMaker</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfAutomobileMakerDealersInCountry</inverse><seedInstances>{"dodge","germany"}{"dodge","canada"}{"volkswagen","germany"}{"toyota","south africa"}{"dodge","uk"}{"honda","canada"}{"saab","uk"}{"mazda","usa"}{"benz","germany"}{"bmw","germany"}{"gm","canada"}{"volkswagen","canada"}{"toyota","australia"}{"bmw","usa"}{"cadillac","usa"}{"suzuki","uk"}{"honda","uk"}{"nissan","japan"}{"bmw","uk"}{"nissan","uk"}{"nissan","usa"}{"dodge","mexico"}{"saab","usa"}{"toyota","usa"}{"saab","sweden"}{"chrysler","canada"}{"mazda","uk"}{"mazda","canada"}{"citroen","uk"}{"jaguar","uk"}{"land rover","uk"}{"renault","uk"}{"bmw","spain"}{"toyota","malaysia"}{"porsche","uk"}{"chrysler","usa"}{"suzuki","canada"}{"honda","usa"}{"buick","china"}{"lexus","canada"}</seedInstances><seedExtractionPatterns>&#8220;arg1 car dealers in arg2&#8221; &#8221;arg1 auto dealers in arg2&#8221; &#8221;arg1 dealers in arg2&#8221; </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-18</editDate><author>ontExt</author><curator /><description>Describes the car dealers in a country</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="284"><relationName>bacteriaIsTheCausativeAgentOfPhysiologicalcondition</relationName><humanFormat>arg1 is a bacteria {that causes} arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>bacteria</domain><range>physiologicalCondition</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfBacteriaIsTheCausativeAgentOfPhysiologicalCondition</inverse><seedInstances>{"borrelia burgdorferi","lyme disease"}{"yersinia pestis","plague"}{"rickettsia rickettsii","fever"}{"vibrio cholerae","cholera"}{"mycobacterium leprae","leprosy"}{"listeria monocytogenes","listeriosis"}{"corynebacterium diphtheriae","diphtheria"}{"treponema pallidum","syphilis"}{"burkholderia pseudomallei","melioidosis"}{"clostridium tetani","tetanus"}{"propionibacterium acnes","acne"}{"clostridium botulinum","botulism"}{"bordetella pertussis","pertussis"}{"francisella tularensis","tularemia"}{"neisseria gonorrhoeae","gonorrhea"}{"bordetella pertussis","whooping cough"}{"bordetella pertussis","cough"}{"neisseria","meningitis"}{"entamoeba histolytica","amebiasis"}{"neisseria meningitidis","meningitis"}{"haemophilus ducreyi","chancroid"}{"entamoeba histolytica","liver abscess"}{"borrelia burgdorferi","infection"}{"mycobacterium marinum","infection"}{"ehrlichia chaffeensis","ehrlichiosis"}{"staphylococcus aureus","infection"}{"streptococcus pneumoniae","infection"}{"bacillus cereus","food poisoning"}{"entamoeba histolytica","dysentery"}{"rickettsia","typhus"}{"bartonella henselae","infection"}{"campylobacter jejuni","illness"}{"vibrio parahaemolyticus","illness"}{"pseudomonas aeruginosa","infection"}{"mycoplasma pneumoniae","pneumonia"}{"staphylococcus aureus","mastitis"}{"bartonella henselae","cat scratch disease"}{"mycobacterium bovis","tuberculosis"}{"erwinia amylovora","fire blight"}{"clostridium perfringens","gas gangrene"}{"corynebacterium diphtheriae","infectious disease"}{"legionella pneumophila","infection"}{"pseudomonas aeruginosa","tract infection"}{"staphylococcus aureus","toxic shock syndrome"}{"rickettsia prowazekii","typhus"}{"bordetella pertussis","infection"}{"bordetella bronchiseptica","cough"}{"streptococcus pneumoniae","pneumonia"}{"legionella pneumophila","illness"}</seedInstances><seedExtractionPatterns>&#8220;arg1 is the causative agent fo arg2&#8221; &#8221;arg2 is caused by infection with arg1&#8221; &#8220;arg2 is the etiologic agent of arg1&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-18</editDate><author>ontExt</author><curator /><description>Describes the bacterias that causes physiological conditions</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="285"><relationName>bankBankInCountry</relationName><humanFormat>arg1 is a bank {in} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>hasOfficeInCountry</generalizations><domain>bank</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfBankBankInCountry</inverse><seedInstances>{"barclays","uk"}{"citi","canada"}{"northern rock","england"}{"northern rock","uk"}{"anz","new zealand"}{"barclays","uk"}{"barclays","canada"}{"northern rock","uk"}{"lloyds tsb","uk"}{"anz","australia"}{"hsbc","uk"}{"hsbc","canada"}{"hsbc","usa"}{"hsbc","australia"}{"barclays","india"}{"citigroup","uk"}{"lloyds tsb","uk"}{"barclays","britain"}{"citi","india"}{"hsbc","hong kong"}{"northern rock","britain"}{"northern rock","united kingdom"}{"barclays capital","uk"}{"hsbc","hong kong"}{"fortis","belgium"}{"hsbc","uk"}{"hsbc","panama"}{"citibank","uk"}{"citibank","philippines"}{"hsbc","hong kong"}{"hdfc bank","india"}{"scotiabank","canada"}{"hsbc","india"}{"hsbc","middle east"}{"icici bank","india"}{"barclays","india"}{"hsbc","brazil"}{"anz","australia"}{"maybank","malaysia"}{"citibank","pakistan"}{"citibank","japan"}{"barclays","uk"}{"northern rock","uk"}{"hsbc","malaysia"}{"citibank","singapore"}{"hsbc","jordan"}{"hsbc","uae"}{"anz","new zealand"}{"first national bank","south africa"}{"nab","australia"}{"banamex","mexico"}{"hsbc","uk"}{"hsbc","lebanon"}{"barclays","france"}{"citibank","australia"}{"citibank","kenya"}{"barclays","england"}{"hsbc","japan"}{"hsbc","poland"}{"hsbc","bahrain"}</seedInstances><seedExtractionPatterns>&#8220;arg1 bank in arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-18</editDate><author>ontExt</author><curator /><description>Describes the banks in a country</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="286"><relationName>bankBoughtBank</relationName><humanFormat>arg1 is a bank that {bought} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>acquired</generalizations><domain>bank</domain><range>bank</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfBankBoughtBank</inverse><seedInstances>{"jp morgan","bear stearns"}{"wells fargo","wachovia"}{"citigroup","wachovia"}{"jpmorgan chase","bear stearns"}{"j.p. morgan chase","bear stearns"}{"washington mutual","providian"}{"chase bank","bank one"}{"jpmorgan chase","washington mutual"}{"citibank","banamex"}{"allianz","dresdner bank"}{"citigroup","banamex"}{"jp morgan chase","bear stearns"}{"citibank","wachovia"}{"commonwealth bank","bankwest"}{"jp morgan","bank one"}{"citi","countrywide"}{"wells fargo","wachovia bank"}{"citi","wachovia"}{"jp morgan chase","washington mutual"}{"hsbc","orchard bank"}{"jp morgan","washington mutual"}{"j.p. morgan chase","washington mutual"}{"jp morgan chase","bank one"} </seedInstances><seedExtractionPatterns>&#8220;arg1 bought arg2&#8221; &#8221;arg2 is now owned by arg1&#8221; &#8220;arg1 acquired arg2&#8221; &#8221;arg1 branch in arg2&#8221; &#8220;arg1 bank branch in arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-18</editDate><author>ontExt</author><curator /><description>Describes the banks that bought other banks</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="287"><relationName>bankChiefExecutiveCeo</relationName><humanFormat>arg1 is a bank that {has} arg2 as its CEO</humanFormat><populate>1</populate><visible>1</visible><generalizations>companyCeo</generalizations><domain>bank</domain><range>ceo</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfBankChiefExecutiveCeo</inverse><seedInstances>{"citigroup","vikram pandit"}{"goldman sachs","lloyd blankfein"}{"citigroup","charles prince"}{"washington mutual","kerry killinger"}{"jpmorgan chase","jamie dimon"}{"jp morgan chase","jamie dimon"}{"citigroup","sanford weill"}{"fannie mae","franklin raines"}{"jp morgan","jamie dimon"}{"wells fargo","john stumpf"}{"barclays","bob diamond"}{"goldman sachs","robert rubin"}{"citigroup","sandy weill"}</seedInstances><seedExtractionPatterns>&#8220;arg1 chief executive arg2&#8221;</seedExtractionPatterns><nrOfValues>1</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-18</editDate><author>ontExt</author><curator /><description>Describes the CEOs of banks</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="288"><relationName>beverageContainsProtein</relationName><humanFormat>arg1 is a beverage that {contains} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>beverage</domain><range>protein</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfBeverageContainsProtein</inverse><seedInstances>{"breast milk","antibodies"}{"breast milk","proteins"}{"breastmilk","antibodies"}{"beer","proteins"}{"breast milk","nutrient"}{"breast milk","lysozyme"}{"breast milk","growth factors"}{"juice","proteins"}{"breast milk","immunoglobulins"}{"blend","proteases"}{"skim milk","casein"}{"breast milk","enzyme&#8221;}{"juice","protease"}{"broth","collagen"}{"dairy foods","proteins"}</seedInstances><seedExtractionPatterns>&#8220;arg1 contains arg2&#8221; </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-18</editDate><author>ontExt</author><curator /><description>Describes the proteins contained in beverages</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="289"><relationName>beverageMadeFromBeverage</relationName><humanFormat>arg1 is a beverage {made from} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>beverage</domain><range>beverage</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfBeverageMadeFromBeverage</inverse><seedInstances>{"cocktail","vodka"}{"white wine","blend"}{"liqueur","blend"}{"white wines","chardonnay"}{"white wine","chardonnay"}{"red wines","pinot noir"}{"white wine","sauvignon blanc"}{"brew","mead"}{"dessert wine","blend"}{"red wines","syrah"}{"espresso","blend"}{"soup","broth"}{"soup","chicken broth"}{"red wines","cabernet sauvignon"}{"champagne","juice"}{"chai","black tea"}{"sparkling wine","chardonnay"}{"cider","juice"}{"white wine","trebbiano"}{"dessert wine","juice"}{"white wines","pinot noir"}{"green tea","white tea"}{"liquors","juice"}{"white wines","blend"}{"beer","juice"}{"liqueur","vodka"}{"cocktail","orange juice"}{"blend","lemon"}{"white wine","riesling"}{"table wine","blend"}{"punch","white wine"}{"lemonade","lemon"}{"dessert wine","white wine"}{"white wines","viognier"}{"white wine","pinot noir"}{"soup","white wine"}{"chardonnay","blend"}{"white wine","muscat"}{"juice","blend"}{"bordeaux","cabernet sauvignon"}{"soup","lemon"}{"white wine","chenin blanc"}{"blend","pinot noir"}{"punch","ginger ale"}{"punch","ale"}{"chianti","blend"}{"dessert wine","muscat"}{"white wine","semillon"}{"quality coffee","blend"}</seedInstances><seedExtractionPatterns>&#8220;arg1 made from arg2&#8221; &#8220;arg1 are made from arg2&#8221;  &#8220;arg1 made of arg2&#8221; &#8220;arg1 are made of arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-01-18</editDate><author>ontExt</author><curator /><description>Describes the names an artery can be called</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="290"><relationName>awardtrophytournamentIsTheChampionshipGameOfTheNationalSport</relationName><humanFormat>arg1 {is the award trophy} of the national arg2 league</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>awardTrophyTournament</domain><range>sport</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>inverseOfAwardTrophyTournamentIsTheChampionshipGameOfTheNationalSport</inverse><seedInstances>{&#8220;super bowl&#8221;,&#8221;football&#8221;}{&#8220;world series&#8221;,&#8221;baseball&#8221;}{&#8220;stanley cup&#8221;,&#8221;hockey&#8221;}{&#8220;nba championship&#8221;,&#8221;basketball&#8221;}{&#8220;nfl championship&#8221;,&#8220;football&#8221;}{&#8220;nba finals&#8221;,&#8220;basketball&#8221;}</seedInstances><seedExtractionPatterns>&#8220;arg1 is the championship game of the national arg2&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-03-06</editDate><author>Prophet</author><curator /><description>Describes award trophy tournaments related to specific sports</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="291"><relationName>actorSuchAsActor</relationName><humanFormat>arg1 {is a generalization of} arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>actor</domain><range>actor</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfActorSuchAsActor</inverse><seedInstances>{"16th-century actors","Richard Burbage"}{"radio actors&#8221;,&#8220;Miriam Wolfe"}{"radio actors&#8221;,"Peter Leeds"}{&#8220;theater actors&#8221;,&#8221;Raul Julia&#8221;}{&#8220;theater actors&#8221;,&#8220;John Barrymore&#8221;}{&#8220;theater actors&#8221;,&#8221;Sam Waterson&#8221;}{&#8220;talented actors&#8221;,&#8220;Tobey Maguire&#8221;}{&#8220;western movie actors&#8221;,&#8220;Clint Eastwood&#8221;}{&#8220;movie actors&#8221;,&#8220;Glenn Close&#8221;}{&#8220;movie actors&#8221;,&#8220;Robert DeNiro&#8221;}{&#8220;movie actors&#8221;,&#8220;Meryl Streep&#8221;}{&#8220;movie actors&#8221;,&#8220;Marlon Brando&#8221;}{&#8220;movie actors&#8221;,&#8220;Sigourney Weaver&#8221;}{&#8220;movie actors&#8221;,&#8220;Dustin Hoffman&#8221;}{&#8220;tv actors&#8221;,&#8220;Courteney Cox&#8221;}{&#8220;tv actors&#8221;,&#8220;Lisa Kudrow&#8221;}</seedInstances><seedExtractionPatterns>&#8220;arg1 such as arg2&#8221; &#8220;arg1 include arg2&#8221; &#8220;arg1 including arg2&#8221; &#8220;arg2 and other arg1&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-03-06</editDate><author>SubCatReader</author><curator /><description>Describes the actor types that are generalizations of specific actors</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="292"><relationName>airportSuchAsAirport</relationName><humanFormat>arg1 {is a generalization of} arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>airport</domain><range>airport</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inversoOfAirportSuchAsAirport</inverse><seedInstances>{&#8220;regional airports&#8220;,&#8220;Bordeaux M&#233;rignac Airport (BOD)&#8221;}{&#8220;Class D airports&#8221;,&#8221;Eugene's Mahlon Sweet (EUG)&#8221;}{&#8220;outer airports&#8221;,&#8221;Gatwick&#8221;}{&#8220;outer airports&#8221;,&#8221;Luton&#8221;}{{&#8220;outer airports&#8221;,&#8221;Stansted&#8221;}{&#8220;major international airports&#8221;,&#8220;Narita International Airport&#8221;}{&#8220;non-hub airports&#8221;,&#8220;Washington National (DCA)&#8221;}{&#8220;European airports&#8221;,&#8220;Rome Fiumicino&#8221;}{&#8220;European airports&#8221;,&#8220;London Heathrow&#8221;}{&#8220;hub airports&#8221;,&#8220;Frankfurt Main&#8221;}{&#8220;hub airports&#8221;,&#8220;SFO&#8221;}</seedInstances><seedExtractionPatterns>&#8220;arg1 such as arg2&#8221; &#8220;arg1 include arg2&#8221; &#8220;arg1 including arg2&#8221; &#8220;arg2 and other arg1&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-03-06</editDate><author>SubCatReader</author><curator /><description>Describes the airport types that are generalizations of specific aiports</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="293"><relationName>amphibianSuchAsAmphibian</relationName><humanFormat>arg1 {is a generalization of} arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>amphibian</domain><range>amphibian</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfAmphibianSuchAsAmphibian</inverse><seedInstances>{&#8220;giant amphibians&#8221;,&#8220;metoposaurs&#8221;}{&#8220;forest-dependent amphibians&#8221;,&#8220;woodland salamanders&#8221;}{&#8220;larval amphibians&#8221;,&#8220;tadpoles&#8221;}{&#8220;terrestrial amphibians&#8221;,&#8220;toads&#8221;}{&#8220;pet amphibians&#8221;,&#8220;frogs&#8221;}{&#8220;exotic amphibians&#8221;,&#8220;bullfrogs&#8221;}{&#8220;exotic amphibians&#8221;,&#8221;newts&#8221;}{&#8220;big amphibians&#8221;,&#8220;marine toads&#8221;}{&#8220;rare amphibians&#8221;,&#8220;Siskiyou Mountain&#8221;}{&#8220;salamanders&#8221;,&#8221;spotted salamander&#8221;}{&#8220;salamanders&#8221;,&#8221;California tiger salamander&#8221;}</seedInstances><seedExtractionPatterns>&#8220;arg1 such as arg2&#8221; &#8220;arg1 include arg2&#8221; &#8220;arg1 including arg2&#8221; &#8220;arg2 and other arg1&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-03-06</editDate><author>SubCatReader</author><curator /><description>Describes the amphibian types that are generalizations of specific amphibians</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="294"><relationName>aquariumsSuchAsAquariums</relationName><humanFormat>arg1 {is a generalization of} arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>aquarium</domain><range>aquarium</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfAquariumSuchAsAquarium</inverse><seedInstances>{&#8220;public aquariums&#8221;,&#8220;Monterey Bay Aquarium&#8221;}{&#8220;public aquariums&#8221;,&#8221;New England Aquarium&#8221;}{&#8220;public aquariums&#8221;,&#8221;The Singapore Under Water World&#8221;}{&#8220;public aquariums&#8221;,&#8221;Hong Kong's Ocean Park&#8221;}{&#8220;public aquariums&#8221;,&#8221;the Flint RiverQuarium&#8221;}{&#8220;public aquariums&#8221;,&#8221;London Aquarium&#8221;}{&#8220;public aquariums&#8221;,&#8221;The Deep&#8221;}{&#8220;public aquariums&#8221;,&#8221;The National Marine Aquarium&#8221;}{&#8220;marine aquariums&#8221;,&#8220;fish-Only Tanks&#8221;}{&#8220;marine aquariums&#8221;,&#8220;Coral-Only Tanks&#8221;}</seedInstances><seedExtractionPatterns>&#8220;arg1 such as arg2&#8221; &#8220;arg1 include arg2&#8221; &#8220;arg1 including arg2&#8221; &#8220;arg2 and other arg1&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-03-06</editDate><author>SubCatReader</author><curator /><description>Describes the specific aquarium types that are generalizations of aquariums</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="295"><relationName>arachnidsSuchAsArachnids</relationName><humanFormat>arg1 {is a generalization of} arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>arachnid</domain><range>arachnid</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfArachnidsSuchAsArachnides</inverse><seedInstances>{&#8220;blood sucking arachnids&#8221;,&#8221;mites&#8221;}{&#8220;blood sucking arachnids&#8221;,&#8221;ticks&#8221;}{&#8220;poisonous arachnids&#8221;,&#8221;black widow spiders&#8221;}{&#8220;poisonous arachnids&#8221;,&#8221;tarantulas&#8221;}{&#8220;poisonous arachnids&#8221;,&#8221;scorpions&#8221;}{&#8220;araneae&#8221;,&#8221;Loxosceles&#8221;}{&#8220;araneae&#8221;,&#8221;Latrodectus orlycosids&#8221;}{&#8220;Tarantulas&#8221;,&#8220;Hapalotremus&#8221;}{&#8220;Tarantulas&#8221;,&#8221;pink-toed treespiders&#8221;}</seedInstances><seedExtractionPatterns>&#8220;arg1 such as arg2&#8221; &#8220;arg1 include arg2&#8221; &#8220;arg1 including arg2&#8221; &#8220;arg2 and other arg1&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-03-06</editDate><author>SubCatReader</author><curator /><description>Describes the specific arachnid types that are generalizations of arachnids</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="296"><relationName>archaeaSuchAsArchaea</relationName><humanFormat>arg1 {is a generalization of} arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>archaea</domain><range>archaea</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfArchaeaSuchAsArchaea</inverse><seedInstances>{&#8220;halophilic archaea&#8221;,&#8221;Haloferax&#8221;}{&#8220;halophilic archaea&#8220;,&#8221;Haloarcula strains&#8221;}{&#8220;mesophilic archaea&#8221;,&#8220;methanogens&#8221;}{&#8220;methanobacterium&#8221;,&#8220;methanobacterium thermoautotrophicum&#8221;}{&#8220;heterotrophic archaea&#8221;,&#8220;haloferax mediter-ranei&#8221;}{&#8220;nonmethanogenic archaea&#8221;,&#8220;halobacteria&#8221;}{&#8220;nonmethanogenic archaea&#8221;,&#8220;archaeoglobus&#8221;}{&#8220;acidophilic archaea&#8221;,&#8220;sulfolobus acidocaldarius&#8221;}{&#8220;acidophilic archaea&#8221;,&#8220;mesophile ferroplasma acidarmanus&#8221;}{&#8220;acidophilic archaea&#8221;,&#8220;sulfolobus spp.&#8221;}</seedInstances><seedExtractionPatterns>&#8220;arg1 such as arg2&#8221; &#8220;arg1 include arg2&#8221; &#8220;arg1 including arg2&#8221; &#8220;arg2 and other arg1&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-03-06</editDate><author>SubCatReader</author><curator /><description>Describes the specific archaea types that are generalizations of archaeas</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="297"><relationName>architectsSuchAsArchitects</relationName><humanFormat>arg1 {is a generalization of} arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>architect</domain><range>architect</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfArchitectsSuchAsArchitects</inverse><seedInstances>{&#8220;deconstructivist architects&#8221;,&#8220;zaha hadid&#8221;}{&#8220;deconstructivist architects&#8221;,&#8220;coop himmelb(l)au&#8221;}{&#8220;renowned architects&#8221;,&#8221;renzo piano&#8221;}{&#8220;renowned architects&#8221;,&#8221;Ludwig mies van der rohe&#8221;}{&#8220;honolulu architects&#8221;,&#8220;c w dickey&#8220;}{&#8220;honolulu architects&#8221;,&#8220;hart wood&#8221;}{&#8220;honolulu architects&#8221;,&#8221;john kelly&#8221;}{&#8220;european architects&#8221;,&#8221;le corbusier&#8221;}{&#8220;european architects&#8221;,&#8221;walter gropius&#8220;}{&#8220;african american architects&#8221;,&#8221;harvey gantt&#8221;}{&#8220;african american architects&#8221;,&#8221;max bond&#8221;}{&#8220;african american architects&#8221;,&#8221;robert t coles&#8221;}{&#8220;african american architects&#8221;,&#8221;donald stull&#8221;}{&#8220;asian architects&#8221;,&#8221;&#8221;shigeru ban&#8221;}{&#8220;asian architects&#8221;,&#8221;kengo kuma&#8221;}</seedInstances><seedExtractionPatterns>&#8220;arg1 such as arg2&#8221; &#8220;arg1 include arg2&#8221; &#8220;arg1 including arg2&#8221; &#8220;arg2 and other arg1&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-03-06</editDate><author>SubCatReader</author><curator /><description>Describes the specific architect types that are generalizations of architects</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="298"><relationName>arteriesSuchAsArteries</relationName><humanFormat>arg1 {is a generalization of} arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>artery</domain><range>artery</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>arteryCalledArtery</mutexExceptions><knownNegatives /><inverse>inverseOfArterySuchAsArtery</inverse><seedInstances>{&#8220;large arteries&#8221;,&#8220;the thoracic aorta&#8221;}{&#8220;small arteries&#8221;,&#8220;the renal arteries&#8221;}{&#8220;medium-sized arteries&#8221;,&#8221;coronary arteries&#8221;}{&#8220;medium-sized arteries&#8221;,&#8221;carotid arteries&#8221;}{&#8220;medium-sized arteries&#8221;,&#8221;cerebral arteries&#8221;}{&#8220;human arteries&#8221;,&#8221;thoracic aorta&#8221;}{&#8220;human arteries&#8221;,&#8221;femoral&#8221;}{&#8220;human arteries&#8221;,&#8221;basilar&#8221;}{&#8220;human arteries&#8221;,&#8221;coronary&#8221;}{&#8220;human arteries&#8221;,&#8221;radial&#8221;}{&#8220;larger arteries&#8221;,&#8221;axillary&#8221;}{&#8220;larger arteries&#8221;,&#8221;subclavian&#8221;}{&#8220;larger arteries&#8221;,&#8221;popliteal&#8221;}{&#8220;larger arteries&#8221;,&#8221;femoral&#8221;}</seedInstances><seedExtractionPatterns>&#8220;arg1 such as arg2&#8221; &#8220;arg1 include arg2&#8221; &#8220;arg1 including arg2&#8221; &#8220;arg2 and other arg1&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-03-06</editDate><author>SubCatReader</author><curator /><description>Describes the specific artery types that are generalizations of arteries</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="299"><relationName>astronautsSuchAsAustronauts</relationName><humanFormat>arg1 {is a generalization of} arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>astronaut</domain><range>astronaut</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfAstronautSuchAsAstronaut</inverse><seedInstances>{&#8220;notable astronauts&#8221;,&#8221;neil armstrong&#8221;}{&#8220;notable astronauts&#8221;,&#8221;eileen collins&#8221;}{&#8220;notable astronauts&#8221;,&#8221;alan shepard&#8221;}{&#8220;american astronauts&#8221;,&#8220;john glenn&#8221;}{&#8220;american astronauts&#8221;,&#8220;neil armstrong&#8221;}{&#8220;legendary astronauts&#8221;,&#8221;buzz aldrin&#8221;}{&#8220;legendary astronauts&#8221;,&#8221;helen sharman&#8221;}{&#8220;legendary astronauts&#8221;,&#8221;michael foale&#8221;}{&#8220;space shuttle astronauts&#8221;,&#8221;sally ride&#8221;}{&#8220;space shuttle astronauts&#8221;,&#8221;john young&#8221;}{&#8220;space shuttle astronauts&#8221;,&#8221;guion blufordand&#8221;}</seedInstances><seedExtractionPatterns>&#8220;arg1 such as arg2&#8221; &#8220;arg1 include arg2&#8221; &#8220;arg1 including arg2&#8221; &#8220;arg2 and other arg1&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-03-06</editDate><author>SubCatReader</author><curator /><description>Describes the specific astronaut types that are generalizations of astronauts</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="300"><relationName>athletesSuchAsAthletes</relationName><humanFormat>arg1 {is a generalization of} arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>athlete</domain><range>athlete</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfAthleteSuchAsAthlete</inverse><seedInstances>{&#8220;marathon runners&#8221;,&#8220;lornal kiplagat&#8221;}{&#8220;marathon runners&#8221;,&#8220;gete wami&#8221;}{&#8220;basketball players&#8221;,&#8221;kareem abdul-jabbar&#8221;}{&#8220;basketball players&#8221;,&#8221;kevin garnett&#8221;}{&#8220;basketball players&#8221;,&#8221;wilt chamberlain&#8221;}{&#8220;basketball players&#8221;,&#8221;kobe bryant&#8221;}{&#8220;football players&#8221;,&#8221;walter payton&#8221;}{&#8220;football players&#8221;,&#8221;brett favre&#8221;}{&#8220;football players&#8221;,&#8221;ernie davis&#8221;}{&#8220;football players&#8221;,&#8221;eli manning&#8221;}{&#8220;baseball players&#8221;,&#8221;pedro martinez&#8221;}{&#8220;baseball players&#8221;,&#8221;bob lemon&#8221;}{&#8220;baseball players&#8221;,&#8221;jackie robinson&#8221;}</seedInstances><seedExtractionPatterns>&#8220;arg1 such as arg2&#8221; &#8220;arg1 include arg2&#8221; &#8220;arg1 including arg2&#8221; &#8220;arg2 and other arg1&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-03-06</editDate><author>SubCatReader</author><curator /><description>Describes the specific athlete types that are generalizations of athletes</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="301"><relationName>touristAttractionSuchAsTouristAttraction</relationName><humanFormat>arg1 {is a generalization of} arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>attraction</domain><range>attraction</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfTouristAttraction</inverse><seedInstances>{&#8220;historic tourist attraction&#8221;,&#8221;churches&#8221;}{&#8220;historic tourist attraction&#8221;,&#8220;cathedral&#8221;}{&#8220;big tourist attraction&#8221;,&#8220;sea world&#8221;}{&#8220;big tourist attraction&#8221;,&#8220;zoo&#8221;}{&#8220;big tourist attraction&#8221;,&#8220;lego land&#8221;}{&#8220;big tourist attraction&#8221;,&#8220;edinburgh castle&#8221;}{&#8220;major tourist attraction&#8220;,&#8221;temple of the reclining buddha&#8220;}{&#8220;major tourist attraction&#8220;,&#8221;giant swing&#8221;}{&#8220;major tourist attraction&#8220;,&#8221;vimarnmek place&#8221;}{&#8220;expensive tourist attractions&#8221;,&#8221;london eye&#8221;}{&#8220;expensive tourist attractions&#8221;,&#8221;madame tussauds&#8221;}{&#8220;religious tourist attractions&#8221;,&#8220;secred garden&#8221;}</seedInstances><seedExtractionPatterns>&#8220;arg1 such as arg2&#8221; &#8220;arg1 include arg2&#8221; &#8220;arg1 including arg2&#8221; &#8220;arg2 and other arg1&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-03-06</editDate><author>SubCatReader</author><curator /><description>Describes the specific tourist attraction types that are generalizations of tourist attractions</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="302"><relationName>automobileEngineSuchAsAutomobileEngine</relationName><humanFormat>arg1 {is a generalization of} arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>automobileEngine</domain><range>automobileEngine</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfAutomobileEngineSuchAsAutomobileEngine</inverse><seedInstances>{&#8220;high performance automobile engines&#8221;,&#8220;corvette engines&#8221;}{&#8220;v8 engines&#8220;,&#8221;chevy small block&#8220;}{&#8220;v8 engines&#8220;,&#8221;gm gen iiiI+ engines&#8221;}{&#8220;v6 engines&#8220;,&#8221;3.6 L LY7 V6&#8221;}{&#8220;ford engines&#8220;,&#8221;351w&#8220;}{&#8220;ford engines&#8220;,&#8221;351m/400&#8221;}{&#8220;ford engines&#8220;,&#8221;390&#8221;}</seedInstances><seedExtractionPatterns>&#8220;arg1 such as arg2&#8221; &#8220;arg1 include arg2&#8221; &#8220;arg1 including arg2&#8221; &#8220;arg2 and other arg1&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-03-06</editDate><author>SubCatReader</author><curator /><description>Describes the specific automobile Engine types that are generalizations of automobile Engines</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="303"><relationName>bookSuchAsBook</relationName><humanFormat>arg1 {is a generalization of} arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>book</domain><range>book</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfBookSuchAsBook</inverse><seedInstances>{&#8220;novels&#8221;,&#8220;Death in Venice&#8221;}{&#8220;popular bestsellers&#8221;,&#8220;The Da Vince Code&#8221;}{&#8220;thriller books&#8221;,"Blood Red Rivers"}{&#8220;romantic books&#8221;,"Romeo and Juliet"}{&#8220;classic books&#8221;,&#8221;Pride and Prejudice&#8221;}{&#8220;fiction books&#8221;,&#8220;A Door into Ocean&#8221;}{&#8220;scientific books&#8221;,&#8221;encyclopedias&#8221;}{&#8220;drama books&#8221;,&#8220;The Wonderful Wizard of Oz&#8221;}{&#8220;humor books&#8221;,&#8220;Never Eat Anything Bigger Than Your Head&#8221;}}{&#8220;humor books&#8221;,&#8220;Tiny Footprints&#8221;}</seedInstances><seedExtractionPatterns>&#8220;arg1 such as arg2&#8221; &#8220;arg1 include arg2&#8221; &#8220;arg1 including arg2&#8221; &#8220;arg2 and other arg1&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-03-06</editDate><author>SubCatReader</author><curator /><description>Describes the specific book types that are generalizations of actors</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="304"><relationName>celebritySuchAsCelebrity</relationName><humanFormat>arg1 {is a generalization of} arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>celebrity</domain><range>celebrity</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfCelebritySuchAsCelebrity</inverse><seedInstances>{&#8220;Hollywood stars&#8221;,&#8221;Glen Campbell&#8221;}{&#8220;Hollywood stars&#8221;,&#8221;Crystal Gayle&#8221;}{&#8220;global icons&#8221;,&#8221;Princess Diana&#8221;}{&#8220;artists&#8221;,&#8221;Elvis Presley&#8221;}{&#8220;artists&#8221;,&#8220;John Denver&#8221;}{&#8220;pop idols&#8221;,&#8221;Britney Spears&#8221;}{&#8220;pop idols&#8221;,&#8220;Charlotte Church&#8221;}{&#8220;iconic characters&#8221;,&#8220;James Dean&#8221;}{&#8220;iconic characters&#8221;,&#8220;Allen Ginsburg&#8221;}{&#8220;cultural icons&#8221;,&#8220;Oprah Winfrey&#8221;}{&#8220;cultural icons&#8221;,&#8220;Deepak Chopra&#8221;}{&#8220;film stars&#8221;,&#8220;Angelina Jolie&#8221;}{&#8220;film stars&#8221;,&#8220;Daniel Craig&#8221;}{&#8220;iconic film directors&#8221;,&#8220;Jean-Jacques Annaud&#8221;}{&#8220;television presenters&#8221;,&#8221;Gordon Ramsay&#8221;}{&#8220;television presenters&#8221;,&#8220;Charley Boorman&#8221;}</seedInstances><seedExtractionPatterns>&#8220;arg1 such as arg2&#8221; &#8220;arg1 include arg2&#8221; &#8220;arg1 including arg2&#8221; &#8220;arg2 and other arg1&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-03-06</editDate><author>SubCatReader</author><curator /><description>Describes the specific celebrity types that are generalizations of celebrities</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="305"><relationName>mammalSuchAsMammal</relationName><humanFormat>arg1 {is a generalization of} arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>mammal</domain><range>mammal</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfMammalSuchAsMammal</inverse><seedInstances>{&#8220;wild cats&#8221;,&#8221;tigers&#8221;}{&#8220;wild cats&#8221;,&#8221;lion&#8221;}{&#8220;big cats&#8221;,&#8221;bobcats&#8221;}{&#8220;big cats&#8221;,&#8220;cougars&#8221;}{&#8220;intelligent mammals&#8221;,&#8221;primates&#8221;}{&#8220;terrestrial mammals&#8221;,&#8221;caribou&#8221;}{&#8220;canines&#8221;,&#8220;jackals&#8221;}{&#8220;canines&#8221;,&#8220;wolves&#8221;}{&#8220;placentals&#8221;,&#8220;rodents&#8221;}{&#8220;placentals&#8221;,&#8220;horses&#8221;}{&#8220;marsupials&#8221;,&#8220;kangaroos&#8221;}{&#8220;marsupials&#8221;,&#8220;koala&#8221;}</seedInstances><seedExtractionPatterns>&#8220;arg1 such as arg2&#8221; &#8220;arg1 include arg2&#8221; &#8220;arg1 including arg2&#8221; &#8220;arg2 and other arg1&#8221;</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-03-06</editDate><author>SubCatReader</author><curator /><description>Describes the specific actors types that are generalizations of actors</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="306"><relationName>isTallerThan</relationName><humanFormat>arg1 is {taller than} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>everyPromotedThing</domain><range>everyPromotedThing</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>:siblings</mutexExceptions><knownNegatives /><inverse>isShorterThan</inverse><seedInstances>{&#8220;sears tower","empire state building&#8221;}{&#8220;empire state building&#8221;,&#8221;chrysler building&#8221;}{&#8220;giraffe&#8221;,&#8221;ostrich&#8221;}{"eiffel tower","statue of liberty"}{"eiffel tower","washington monument"}{"empire state building","eiffel tower"}{"Kareem", "Shaq"}{"Wilt Chamberlain","Shaq"}{"oak tree","maple tree"}</seedInstances><seedExtractionPatterns>"arg1 is taller than arg2","arg2 is shorter than arg1","arg1 is higher than arg2"</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 * is taller than * arg2</queryString><editDate>2012-06-22</editDate><author>Tom</author><curator /><description>Indicates that arg1 has a greater height than arg2</description><freebaseID>none</freebaseID><comment /></Relation><Relation id="307"><relationName>zipcodeInLocation</relationName><humanFormat>arg1 is the {zipcode} for arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>atLocation</generalizations><domain>zipcode</domain><range>location</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>locationInZipcode</inverse><seedInstances>{&#8220;80202&#8221;, &#8220;Denver&#8221;} {&#8220;19002&#8221;, &#8220;PA&#8221;} {&#8220;55416&#8221;, &#8220;Minneapolis&#8221;} {&#8220;33701&#8221;, &#8220;Florida&#8221;} {&#8220;20505&#8221;, &#8220;Central Intelligence Agency&#8221;} {&#8220;42223&#8221;, &#8220;Christian&#8221;} {&#8220;42223&#8221;, &#8220;Montgomery&#8221;} {&#8220;10001&#8221;, &#8220;New York City&#8221;} {&#8220;19103&#8221;, &#8220;Philadelphia&#8221;} {&#8220;33130&#8221;, &#8220;Miami&#8221;} {&#8220;77063&#8221;, &#8220;Texas&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2012-08-31</editDate><author>Bryan</author><curator /><description>Describes one or more locations to which a zipcode may correspond.</description><freebaseID /><comment /></Relation><Relation id="308"><relationName>ObjectPartOfObject</relationName><humanFormat>arg1{is part of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>visualizableObject</domain><range>visualizableObject</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>ObjectContainsObject</inverse><seedInstances>{"car","wheel"}{"person","foot"}{"aeroplane","wing"}{"computer","cpu"}{"building","door"}{"book","cover"}{"hostpital","doctor"}{"school","gymnasium"}{&#8220;desktop computer&#8221;, "keyboard"}{"car", "windshield"}{"motorcycle", "kickstand"}{"ship","anchor"}{"camera","lens"}</seedInstances><seedExtractionPatterns>"arg1 of a arg2"</seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2013-09-19</editDate><author>Alan</author><curator /><description>meronym</description><freebaseID /><comment /></Relation><Relation id="309"><relationName>ObjectFoundInScene</relationName><humanFormat>arg1 {is found in} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>visualizableObject</domain><range>visualizableScene</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>SceneContainsObject</inverse><seedInstances>{"cow","pasture"}{"ferris wheel","amusement park"}{"zebra","savanna"}{"car","car dealership"}{"Eiffel Tower","Paris"}{"washing machine", "basement"}{"telescope","observatory"}{"excavator","excavation"}{"actor","portrait studio"}{"bull","bull ring"}{"bus","bus depot"}{"taj mahal", "agra"}{"chicken", "chicken farm"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2013-09-19</editDate><author>Alan</author><curator /><description>Object found in scene (NEIL)</description><freebaseID /><comment /></Relation><Relation id="310"><relationName>ThingHasShape</relationName><humanFormat>arg1 {has shape} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>visualizableThing</domain><range>geometricShape</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>ShapeOfObject</inverse><seedInstances>{"ball","round"}{"wheel","round"}{"clock","round"}{"honeycomb","hexagonal"}{"tent","dome"}{"alley","narrow"}{"cherry","round"}{"tent","cone"}{"football field","rectangle"}{"boxing ring","square"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2013-09-19</editDate><author>Alan</author><curator /><description>Object has shape (NEIL)</description><freebaseID /><comment /></Relation><Relation id="311"><relationName>ThingHasColor</relationName><humanFormat>arg1 {has color} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>visualizableThing</domain><range>color</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan ColorOfObject</mutexExceptions><knownNegatives /><inverse>ColorOfObject</inverse><seedInstances>{"tomato","red"}{"chocolate","brown"}{"polar bear","white"}{"cabbage","green"}{"cucumber","green"}{"sunflower","yellow"}{"alarm","red"}{"corn","gold"}{"tire","black"}{"star","yellow"}{"ocean","blue"}{"sky","blue"}{"football field","green"}{"lawn","green"}{"lava flow","red"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2013-09-19</editDate><author>Alan</author><curator /><description>Object has color (NEIL)</description><freebaseID /><comment /></Relation><Relation id="312"><relationName>ObjectLooksLikeObject</relationName><humanFormat>arg1 {looks like} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>visualizableThing</domain><range>visualizableThing</range><domainWithinRange>1</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>ObjectLooksLikeObject</inverse><seedInstances>{"marc singer","kevin bacon"}{"tokyo tower","eiffel tower"}{"antelope","deer"}{"kettle","teapot"}{"monitor","television"}{"tram","bus"}{"easel","tripod"}{"bmw 320","bentley gt"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString>arg1 looks like arg2</queryString><editDate>2013-09-19</editDate><author>Alan</author><curator /><description>Object looks like (NEIL)</description><freebaseID /><comment /></Relation><Relation id="313"><relationName>academicFieldConcernsSubject</relationName><humanFormat>arg1 {concerns} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>academicField</domain><range>everyPromotedThing</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>academicProgramAtUniversity atDate atLocation economicSectorCompany generalizationOf issueOfPoliticsBill issueOfPoliticsGroup superpartOf isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>subjectConcernedByAcademicField</inverse><seedInstances>{&#8220;Astronomy&#8221;, &#8220;stars&#8221;} {&#8220;Biology&#8221;, &#8220;organisms&#8221;} {&#8220;Biology&#8221;, &#8220;taxonomy&#8221;} {&#8220;Comparative Literature&#8221;, &#8220;literature&#8221;} {&#8220;Computer Science&#8221;, &#8220;algorithms&#8221;} {&#8220;Economics&#8221;, &#8220;production&#8221;} {&#8220;Geology&#8221;, &#8220;rocks&#8221;} {&#8220;History&#8221;, &#8220;the past&#8221;} {&#8220;Linguistics&#8221;, &#8220;language&#8221;} {&#8220;Mathematics&#8221;, &#8220;proofs&#8221;} {&#8220;Physics&#8221;, &#8220;forces&#8221;} {&#8220;Psychology&#8221;, &#8220;behavior&#8221;} {&#8220;Sociology&#8221;, &#8220;critical analysis&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2013-12-10</editDate><author>Bryan</author><curator /><description>Subjects of study within a given academic field</description><freebaseID /><comment /></Relation><Relation id="314"><relationName>academicFieldHasSubfield</relationName><humanFormat>arg2 is a {subfield} of arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>superpartOf academicFieldConcernsSubject</generalizations><domain>academicField</domain><range>academicField</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>subfieldOfAcademicField</inverse><seedInstances>{&#8220;Astronomy&#8221;, &#8220;Observational Astronomy&#8221;} {&#8220;Astronomy&#8221;, &#8220;Theoretical Astromony&#8221;} {&#8220;Biology&#8221;, &#8220;Bioinformatics&#8221;} {&#8220;Biology&#8221;, &#8220;Anatomy&#8221;} {&#8220;Computer Science&#8221;, &#8220;Applied Computer Science&#8221;} {&#8220;Computer Science&#8221;, &#8220;Artificial Intelligence&#8221;} {&#8220;Economics&#8221;, &#8220;Macroeconomics&#8221;}  {&#8220;Economics&#8221;, &#8220;Game Theory&#8221;} {&#8220;Geology&#8221;, &#8220;Mineralogy&#8221;} {&#8220;Geology&#8221;, &#8220;Meteorology&#8221;} {&#8220;History&#8221;, &#8220;Military History&#8221;} {&#8220;History&#8221;, &#8220;Cultural History&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2013-12-10</editDate><author>Bryan</author><curator /><description>Subfields within a given academic field</description><freebaseID /><comment /></Relation><Relation id="315"><relationName>academicFieldUsedByEconomicSector</relationName><humanFormat>arg1 is an academic field {used in} the economic sector arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>academicField</domain><range>economicSector</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>economicSectorUsingAcademicField</inverse><seedInstances>{&#8220;Psychology&#8221;, &#8220;advertising&#8221;} {&#8220;Physics&#8221;, &#8220;aerospace&#8221;} {&#8220;Geology&#8221;, &#8220;agriculture&#8221;} {&#8220;Biology&#8221;, &#8220;biotechnology&#8221;} {&#8220;Computer Science&#8221;, &#8220;computer software&#8221;} {&#8220;Economics&#8221;, &#8220;financial services&#8221;} {&#8220;Economics&#8221;, &#8220;investment banking&#8221;} {&#8220;Economics&#8221;, &#8220;consumer banking&#8221;} {&#8220;Biology&#8221;, &#8220;pharmaceuticals&#8221;} {&#8220;Physics&#8221;, &#8220;semiconductors&#8221;} {&#8220;Computer Science&#8221;, &#8220;video games&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2013-12-10</editDate><author>Bryan</author><curator /><description>Academic fields used by economic fields</description><freebaseID /><comment /></Relation><Relation id="316"><relationName>jobPositionUsesAcademicField</relationName><humanFormat>arg2 is an academic field {useful for} the job position arg1</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>jobPosition</domain><range>academicField</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>academicFieldUsedInJobPosition</inverse><seedInstances>{&#8220;accountant&#8221;, &#8220;Economics&#8221;} {&#8220;meteorologist&#8221;, &#8220;Meteorology&#8221;} {&#8220;physician&#8221;, &#8220;Biology&#8221;} {&#8220;programmer&#8221;, &#8220;Computer Science&#8221;} {&#8220;physicist&#8221;, &#8220;Physics&#8221;} {&#8220;historian&#8221;, &#8220;History&#8221;} {&#8220;cryptoanalyist&#8221;, &#8220;Mathematics&#8221;} {&#8220;assistant treasurer&#8221;, &#8220;Economics&#8221;} {&#8220;psychologist&#8221;, &#8220;Psychology&#8221;} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2013-12-10</editDate><author>Bryan</author><curator /><description>Academic fields useful for job positions</description><freebaseID /><comment /></Relation><Relation id="317"><relationName>personInAcademicField</relationName><humanFormat>arg1 is {in the academic field} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>academicField</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>personInEconomicSector isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>academicFieldHasPerson</inverse><seedInstances>{&#8220;Azophi&#8221;, &#8220;Astronomy&#8221;} {&#8220;Charles Darwin&#8221;, &#8220;Biology&#8221;} {&#8220;Fyodor Buslaev&#8221;, &#8220;Comparative Literature&#8221;} {&#8220;William Cohen&#8221;, &#8220;Computer Science&#8221;} {&#8220;John Maynard Keynes&#8221;, &#8220;Economics&#8221;} {&#8220;Rachael Carson&#8221;, &#8220;Environmental Science&#8221;} {&#8220;James Hutton&#8221;, &#8220;Geology&#8221;} {&#8220;Herodotus&#8221;, &#8220;History&#8221;} {&#8220;Noam Chomsky&#8221;, &#8220;Linguistics&#8221;} {&#8220;Blaise Pascal&#8221;, &#8220;Mathematics&#8221;}{&#8220;Pythagoras&#8221;, &#8220;Philosophy&#8221;} {&#8220;Enrico Fermi&#8221;, &#8220;Physics&#8221;} {&#8220;Ivan Pavlov&#8221;, &#8220;Psychology&#8221;} {&#8220;Karl Marx&#8221;, &#8220;Sociology&#8221;} {&#8220;Aditya Parameswaran&#8221;, &#8220;Data Management and Mining&#8221;} {&#8220;Noah Snavely&#8221;, &#8220;Computer Vision&#8221;} {&#8220;Tuomas Sandholm&#8221;, &#8220;Market Design&#8221;} {&#8220;Tuomas Sandholm&#8221;, &#8220;Game Theory&#8221;} {&#8220;Jamie Morgenstern&#8221;, &#8220;Algorithmic Game Theory&#8221;} {&#8220;Dan Stilwell&#8221;, &#8220;Decision and Control Theory&#8221;} {&#8220;Eric Daimler&#8221;, &#8220;Computational Economics&#8221;} {&#8220;Adam Covington&#8221;, &#8220;FPGA Design&#8221;} {&#8220;Matei Zaharia&#8221;, &#8220;Big Data&#8221;} {&#8220;Carl Doersch&#8221;, &#8220;Machine Learning&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2013-12-10</editDate><author>Bryan</author><curator /><description>People trained or active in a given academic field</description><freebaseID /><comment /></Relation><Relation id="318"><relationName>personInEconomicSector</relationName><humanFormat>arg1 {works in} the economic sector arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>economicSector</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>personInAcademicField isTallerThan isShorterThan</mutexExceptions><knownNegatives /><inverse>economicSectorHasPerson</inverse><seedInstances>{&#8220;Steve Ballmer&#8221;, &#8220;computer software&#8221;} {&#8220;Fabrice Tourre&#8221;, &#8220;financial services&#8221;} {&#8220;Stephani Kwolek&#8221;, &#8220;chemical industry&#8221;} {&#8220;Steve Wozniak&#8221;, &#8220;computer hardware&#8221;} {&#8220;Albert Hofmann&#8221;, &#8220;pharmaceuticals&#8221;} {&#8220;Eric Shmidt&#8221;, &#8220;search&#8221;} {&#8220;Jeff Bezos&#8221;, &#8220;cloud computing&#8221;} {&#8220;Warren Buffet&#8221;, &#8220;investment&#8221;} {&#8220;Richard Notebaet&#8221; &#8220;telecommunications&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2013-12-10</editDate><author>Bryan</author><curator /><description>People who work in a given economic sector</description><freebaseID /><comment /></Relation><Relation id="319"><relationName>conceptPrerequisiteOf</relationName><humanFormat>arg1 {is a prerequisite of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>scientificTerm</domain><range>scientificTerm</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives>{"exponential distribution", "rejection sampling"}, {"Markov random fields", "Markov chain Monte Carlo"}, {"stochastic gradient descent", "Chain Rule"}, {"convex optimization", "Lagrange multipliers"}, {"ridge regression", "optimization problems"}, {"partial derivatives", "differential forms"}, {"optimization problems", "higher-order partial derivatives"}, {"Markov chain Monte Carlo", "importance sampling"}, {"CRP clustering", "latent Dirichlet allocation"}, {"higher-order partial derivatives", "random variables"}, {"Bayesian networks", "multivariate Gaussian distribution"}, {"differential forms", "partial derivatives"}, {"maximum likelihood", "gradient descent"}, {"maximum likelihood", "multivariate Gaussian distribution"}, {"Bellman equations", "Markov decision process (MDP)"}, {"exponential families", "Bayesian parameter estimation"}, {"sum-product on trees", "variable elimination"}, {"bases", "matrix multiplication"}, {"convex functions", "expectation and variance"}, {"matrix transpose", "matrix inverse"}, {"Lagrange multipliers", "spectral decomposition"}, {"Bayes net parameter learning", "Bayesian parameter estimation"}, {"gamma function", "expectation and variance"}, {"Metropolis-Hastings algorithm", "PDFs of functions of random variables"}, {"linear systems as matrices", "subspaces"}, {"deep belief networks", "backpropagation"}, {"functions of several variables", "dot product"}, {"Gaussian elimination", "matrix inverse"}, {"expectation and variance", "independent random variables"}, {"vector spaces", "matrix multiplication"}, {"independent random variables", "Gaussian distribution"}, {"exponential families", "mean field approximation"}, {"multivariate Gaussian distribution", "maximum likelihood"}, {"gradient", "optimization problems"}, {"binomial distribution", "multinomial coefficients"}, {"random variables", "gamma function"}, {"optimization problems", "Bayesian parameter estimation"}, {"optimization problems", "orthonormal bases"}, {"Bayes' rule", "beta distribution"}, {"mean field approximation", "exponential families"}, {"Lagrange multipliers", "entropy"}, {"cross product", "partial derivatives"}, {"the support vector machine", "Langrange duality"}, {"logistic regression", "naive Bayes"}, {"matrix transpose", "higher-order partial derivatives"}, {"optimization problems", "eigenvalues and eigenvectors"}, {"multinomial coefficients", "binomial distribution"}, {"exponential families", "maximum likelihood"}, {"weak law of large numbers", "K nearest neighbors"}, {"Markov random fields", "optimization problems"}, {"Expectation-Maximization algorithm", "Bayes net parameter learning"}, {"Indian buffet process", "Dirichlet process"}, {"mixture of Gaussians models", "maximum likelihood: multivariate Gaussians"}, {"Expectation-Maximization algorithm", "k-means"}, {"multivariate Gaussian distribution", "Bayesian networks"}, {"probabilistic PCA", "Bayesian parameter estimation: multivariate Gaussians"}, {"fitting logistic regression with iterative reweighted least squares", "the Laplace approximation"}, {"Viterbi algorithm", "sum-product on trees"}, {"maximum likelihood", "generalization"}, {"Lagrange multipliers", "convex optimization"}, {"probabilistic Latent Semantic Analysis", "Bayesian parameter estimation: multinomial distribution"}, {"Markov and Chebyshev inequalities", "independent random variables"}, {"CRP clustering", "factor analysis"}, {"generalization", "backpropagation"}, {"binary linear classifiers", "optimization problems"}, {"Bayesian parameter estimation: multivariate Gaussians", "variational Bayes"}, {"basis function expansions", "positive definite matrices"}, {"linear regression as maximum likelihood", "binary linear classifiers"}, {"dot product", "vector fields"}, {"loopy belief propagation", "variational inference"}, {"Markov and Chebyshev inequalities", "moment generating functions"}, {"MAP parameter estimation", "Taylor approximations"}, {"maximum likelihood: multivariate Gaussians", "mixture of Gaussians models"}, {"matrix inverse", "matrix transpose"}, {"expectation and variance", "conditional distributions"}, {"Bayesian networks", "restricted Boltzmann machines"}, {"independent random variables", "expectation and variance"}, {"Bayesian networks", "Markov random fields"}, {"Gaussian discriminant analysis", "naive Bayes"}, {"probabilistic PCA", "Gibbs sampling"}, {"surface integrals", "line integrals"}, {"evaluating multiple integrals: polar coordinates", "determinant"}, {"Indian buffet process", "factor analysis"}, {"evaluating multiple integrals: polar coordinates", "linear approximation"}, {"max-product on trees", "sum-product on trees"}, {"gradient descent", "probit function"}, {"maximum likelihood", "KL divergence"}, {"Metropolis-Hastings algorithm", "gradient descent"}, {"multivariate Gaussian distribution", "the kernel trick"}, {"orthonormal bases", "maximum likelihood"}, {"matrix transpose", "subspaces"}, {"Bayesian parameter estimation: multinomial distribution", "probabilistic Latent Semantic Analysis"}, {"heavy-tailed distributions", "principal component analysis"}, {"Gaussian distribution", "matrix inverse"}, {"mixture of Gaussians models", "maximum likelihood"}, {"generalization", "independent events"}, {"bases", "matrix inverse"}, {"maximum likelihood", "exponential families"}, {"gradient descent", "optimization problems"}, {"factor graphs", "inference in MRFs"}, {"evaluating multiple integrals: change of variables", "differential forms"}, {"determinant", "gamma distribution"}, {"probability", "k-means"}, {"random variables", "independent events"}, {"expectation and variance", "matrix inverse"}, {"decision trees", "generalization"}, {"importance sampling", "Markov chain Monte Carlo"}, {"matrix inverse", "backpropagation"}, {"Markov chain Monte Carlo", "multivariate Gaussian distribution"}, {"Metropolis-Hastings algorithm", "Gibbs sampling"}, {"orthogonal subspaces", "matrix inverse"}, {"optimization problems", "Bayesian networks"}, {"Kalman smoother", "forward-backward algorithm"}, {"generalization", "naive Bayes"}, {"principal component analysis", "Lagrange multipliers"}, {"convex optimization", "binary linear classifiers"}, {"Kalman smoother", "Expectation-Maximization algorithm"}, {"feed-forward neural nets", "deep belief networks"}, {"Chain Rule", "exterior derivative"}, {"Markov random fields", "Bayes net structure learning"}, {"backpropagation", "deep belief networks"}, {"matrix inverse", "conditional distributions"}, {"optimization problems", "independent random variables"}, {"conditional distributions", "expectation and variance"}, {"the kernel trick", "SVM optimality conditions"}, {"matrix multiplication", "conditional independence"}, {"sum-product on trees", "mean field approximation"}, {"MAP parameter estimation", "multivariate Gaussian distribution"}, {"Expectation-Maximization algorithm", "variational Bayes"}, {"naive Bayes", "Bayesian parameter estimation: multinomial distribution"}, {"gamma distribution", "Bayesian parameter estimation"}, {"expectation and variance", "conditional probability"}, {"expectation and variance", "optimization problems"}, {"Bayesian logistic regression", "Gaussian process regression"}, {"rejection sampling", "exponential distribution"}, {"maximum likelihood", "Markov random fields"}, {"partial derivatives", "dot product"}, {"independent events", "random variables"}, {"Dirichlet process", "agglomerative clustering"}, {"Gaussian distribution", "binomial distribution"}, {"Gaussian variable elimination", "Cholesky decomposition"}, {"binary linear classifiers", "linear regression as maximum likelihood"}, {"higher-order partial derivatives", "matrix transpose"}, {"Indian buffet process", "collapsed Gibbs sampling"}, {"Lagrange multipliers", "principal component analysis"}, {"Dirichlet process", "Chinese restaurant franchise"}, {"linear least squares", "linear regression"}, {"functions of several variables", "vectors"}, {"sum-product on trees", "max-product on trees"}, {"gamma function", "multinomial distribution"}, {"partial derivatives", "vector fields"}, {"latent Dirichlet allocation", "CRP clustering"}, {"linear regression", "maximum likelihood"}, {"covariance matrices", "singular value decomposition"}, {"Gibbs sampling", "Metropolis-Hastings algorithm"}, {"optimization problems", "inference in MRFs"}, {"inference in MRFs", "optimization problems"}, {"the evidence approximation", "probabilistic PCA"}, {"Chinese restaurant process", "collapsed Gibbs sampling"}, {"matrix multiplication", "vector spaces"}, {"dot product", "linear systems as matrices"}, {"linear systems as matrices", "cross product"}, {"mixture of Gaussians models", "Bayesian parameter estimation"}, {"logistic regression", "gradient descent"}, {"conditional probability", "expectation and variance"}, {"optimization problems", "binary linear classifiers"}, {"gamma function", "random variables"}, {"Bayesian parameter estimation: multinomial distribution", "Bayesian parameter estimation: multivariate Gaussians"}, {"principal component analysis", "variational characterization of eigenvalues"}, {"conditional distributions", "Monte Carlo estimation"}, {"Bayesian model comparison", "Bayesian estimation of Bayes net parameters"}, {"positive definite matrices", "convex sets"}, {"generalization", "unions of events"}, {"beta distribution", "conditional distributions"}, {"cumulative distribution function", "Gaussian distribution"}</knownNegatives><inverse>conceptHasPrerequisite</inverse><seedInstances>{"maximum likelihood", "maximum likelihood: multivariate Gaussians"}, {"multivariate Gaussian distribution", "maximum likelihood: multivariate Gaussians"}, {"optimization problems", "maximum likelihood: multivariate Gaussians"}, {"mean field approximation", "structured mean field"}, {"inference in MRFs", "structured mean field"}, {"sum-product on trees", "structured mean field"}, {"Kalman smoother", "Kalman smoothing as forward-backward"}, {"forward-backward algorithm", "Kalman smoothing as forward-backward"}, {"Gaussian distribution", "multivariate Gaussian distribution"}, {"covariance", "multivariate Gaussian distribution"}, {"covariance matrices", "multivariate Gaussian distribution"}, {"determinant", "multivariate Gaussian distribution"}, {"matrix inverse", "multivariate Gaussian distribution"}, {"principal component analysis", "principal component analysis (proof)"}, {"variational characterization of eigenvalues", "principal component analysis (proof)"}, {"Hopfield networks", "Boltzmann machines"}, {"maximum likelihood", "Boltzmann machines"}, {"gradient", "Boltzmann machines"}, {"Gibbs sampling", "Boltzmann machines"}, {"orthonormal bases", "singular value decomposition"}, {"matrix multiplication", "singular value decomposition"}, {"matrix transpose", "singular value decomposition"}, {"spectral decomposition", "singular value decomposition"}, {"positive definite matrices", "singular value decomposition"}, {"four fundamental subspaces", "singular value decomposition"}, {"column space and nullspace", "four fundamental subspaces"}, {"subspaces", "four fundamental subspaces"}, {"bases", "four fundamental subspaces"}, {"Gaussian elimination", "four fundamental subspaces"}, {"matrix transpose", "four fundamental subspaces"}, {"LU factorization", "Cholesky decomposition"}, {"positive definite matrices", "Cholesky decomposition"}, {"expectation and variance", "entropy"}, {"conditional distributions", "entropy"}, {"independent random variables", "entropy"}, {"optimization problems", "entropy"}, {"complex numbers", "roots of polynomials"}, {"mixture of Gaussians models", "CRP clustering"}, {"Bayesian parameter estimation", "CRP clustering"}, {"Chinese restaurant process", "CRP clustering"}, {"collapsed Gibbs sampling", "CRP clustering"}, {"random variables", "conditional distributions"}, {"multivariate distributions", "conditional distributions"}, {"conditional probability", "conditional distributions"}, {"Gibbs sampling", "collapsed Gibbs sampling"}, {"MCMC convergence", "collapsed Gibbs sampling"}, {"multivariate distributions", "collapsed Gibbs sampling"}, {"expectation and variance", "covariance"}, {"multivariate distributions", "covariance"}, {"independent random variables", "covariance"}, {"Bayesian model comparison", "the evidence approximation"}, {"optimization problems", "the evidence approximation"}, {"variational Bayes", "variational mixture of Gaussians"}, {"mixture of Gaussians models", "variational mixture of Gaussians"}, {"Bayesian parameter estimation: multivariate Gaussians", "variational mixture of Gaussians"}, {"Bayesian parameter estimation: multinomial distribution", "variational mixture of Gaussians"}, {"linear regression", "LASSO"}, {"optimization problems", "LASSO"}, {"ridge regression", "LASSO"}, {"higher-order partial derivatives", "Taylor approximations"}, {"matrix transpose", "Taylor approximations"}, {"functions of several variables", "vector fields"}, {"vectors", "vector fields"}, {"cross product", "parameterizing lines and planes"}, {"dot product", "parameterizing lines and planes"}, {"linear systems as matrices", "parameterizing lines and planes"}, {"Monte Carlo estimation", "importance sampling"}, {"conditional distributions", "importance sampling"}, {"partial derivatives", "Chain Rule"}, {"linear approximation", "Chain Rule"}, {"matrix multiplication", "Chain Rule"}, {"Gaussian distribution", "Central Limit Theorem"}, {"independent random variables", "Central Limit Theorem"}, {"expectation and variance", "Central Limit Theorem"}, {"moment generating functions", "Central Limit Theorem"}, {"expectation and variance", "conditional expectation"}, {"conditional distributions", "conditional expectation"}, {"hidden Markov models", "Baum-Welch algorithm"}, {"Expectation-Maximization algorithm", "Baum-Welch algorithm"}, {"forward-backward algorithm", "Baum-Welch algorithm"}, {"multivariate Gaussian distribution", "linear-Gaussian models"}, {"Bayesian networks", "linear-Gaussian models"}, {"bases", "change of basis"}, {"linear transformations as matrices", "change of basis"}, {"matrix multiplication", "change of basis"}, {"matrix inverse", "change of basis"}, {"vector spaces", "change of basis"}, {"conditional probability", "Bayes' rule"}, {"Bayesian parameter estimation", "variational Bayes"}, {"Bayesian model comparison", "variational Bayes"}, {"mean field approximation", "variational Bayes"}, {"Expectation-Maximization algorithm", "variational interpretation of EM"}, {"maximum likelihood", "variational interpretation of EM"}, {"KL divergence", "variational interpretation of EM"}, {"Jensen's inequality", "variational interpretation of EM"}, {"optimization problems", "variational interpretation of EM"}, {"matrix multiplication", "diagonalization"}, {"matrix inverse", "diagonalization"}, {"eigenvalues and eigenvectors", "diagonalization"}, {"bases", "diagonalization"}, {"random variables", "multivariate CDF"}, {"multiple integrals", "multivariate CDF"}, {"cumulative distribution function", "multivariate CDF"}, {"higher-order partial derivatives", "multivariate CDF"}, {"eigenvalues and eigenvectors", "multiplicity of eigenvalues"}, {"roots of polynomials", "multiplicity of eigenvalues"}, {"weight decay in neural networks", "soft weight sharing in neural nets"}, {"mixture of Gaussians models", "soft weight sharing in neural nets"}, {"optimization problems", "Lagrange multipliers"}, {"partial derivatives", "Lagrange multipliers"}, {"gradient", "Lagrange multipliers"}, {"Bayesian model comparison", "Bayesian model averaging"}, {"learning invariances in neural nets", "Tikhonov regularization"}, {"Gibbs sampling", "Gibbs sampling as a special case of Metropolis-Hastings"}, {"Metropolis-Hastings algorithm", "Gibbs sampling as a special case of Metropolis-Hastings"}, {"AdaBoost", "boosting as optimization"}, {"optimization problems", "boosting as optimization"}, {"basis function expansions", "boosting as optimization"}, {"linear regression", "linear regression: closed-form solution"}, {"linear least squares", "linear regression: closed-form solution"}, {"principal component analysis", "probabilistic PCA"}, {"computations on multivariate Gaussians", "probabilistic PCA"}, {"maximum likelihood", "probabilistic PCA"}, {"principal component analysis (proof", "probabilistic PCA)"}, {"optimization problems", "probabilistic PCA"}, {"Bayes net parameter learning", "learning Bayes net parameters with missing data"}, {"Expectation-Maximization algorithm", "learning Bayes net parameters with missing data"}, {"maximum likelihood", "learning Bayes net parameters with missing data"}, {"inference in MRFs", "learning Bayes net parameters with missing data"}, {"Gaussian distribution", "heavy-tailed distributions"}, {"Student-t distribution", "heavy-tailed distributions"}, {"expectation and variance", "heavy-tailed distributions"}, {"probabilistic PCA", "Bayesian PCA"}, {"Bayesian linear regression", "Bayesian PCA"}, {"the evidence approximation", "Bayesian PCA"}, {"Bayesian parameter estimation: multivariate Gaussians", "Bayesian PCA"}, {"the Laplace approximation", "Bayesian PCA"}, {"column space and nullspace", "computing the nullspace"}, {"Gaussian elimination", "computing the nullspace"}, {"probabilistic Latent Semantic Analysis", "latent Dirichlet allocation"}, {"Bayesian parameter estimation: multinomial distribution", "latent Dirichlet allocation"}, {"constructing kernels", "Fisher kernel"}, {"Fisher information matrix", "Fisher kernel"}, {"vectors", "parametric curves"}, {"random variables", "binomial distribution"}, {"independent events", "binomial distribution"}, {"expectation and variance", "binomial distribution"}, {"matrix inverse", "computing matrix inverses"}, {"Gaussian elimination", "computing matrix inverses"}, {"random variables", "hidden Markov models"}, {"Markov chains", "hidden Markov models"}, {"matrix multiplication", "hidden Markov models"}, {"conditional distributions", "hidden Markov models"}, {"conditional independence", "hidden Markov models"}, {"Bayesian networks", "hidden Markov models"}, {"Bayesian parameter estimation", "Bayesian parameter estimation: multinomial distribution"}, {"multinomial distribution", "Bayesian parameter estimation: multinomial distribution"}, {"backpropagation", "early stopping"}, {"generalization", "early stopping"}, {"differential forms", "exterior derivative"}, {"partial derivatives", "exterior derivative"}, {"partial derivatives", "linear approximation"}, {"dot product", "linear approximation"}, {"limits and continuity in R^n", "linear approximation"}, {"vectors", "convex sets"}, {"dot product", "convex sets"}, {"information form for multivariate Gaussians", "Gaussian MRFs"}, {"Markov random fields", "Gaussian MRFs"}, {"vectors", "topology of R^n"}, {"latent semantic analysis", "probabilistic Latent Semantic Analysis"}, {"maximum likelihood", "probabilistic Latent Semantic Analysis"}, {"optimization problems", "probabilistic Latent Semantic Analysis"}, {"Metropolis-Hastings algorithm", "Hamiltonian Monte Carlo"}, {"gradient descent", "Hamiltonian Monte Carlo"}, {"Fisher information", "Cramer-Rao bound"}, {"covariance", "Cramer-Rao bound"}, {"partial derivatives", "Cramer-Rao bound"}, {"probability", "conditional probability"}, {"hidden Markov models", "particle filter"}, {"Monte Carlo estimation", "particle filter"}, {"importance sampling", "particle filter"}, {"conditional distributions", "particle filter"}, {"Bayesian parameter estimation", "probabilistic matrix factorization"}, {"probabilistic PCA", "probabilistic matrix factorization"}, {"Gibbs sampling", "probabilistic matrix factorization"}, {"computations on multivariate Gaussians", "probabilistic matrix factorization"}, {"differential forms", "pullback"}, {"exterior derivative", "pullback"}, {"Chain Rule", "pullback"}, {"evaluating multiple integrals: change of variables", "pullback"}, {"maximum likelihood", "Akaike information criterion"}, {"generalization", "Akaike information criterion"}, {"KL divergence", "Akaike information criterion"}, {"random variables", "sufficient statistics"}, {"conditional distributions", "sufficient statistics"}, {"binary linear classifiers", "VC dimension"}, {"Bayes' rule", "Bayesian parameter estimation"}, {"beta distribution", "Bayesian parameter estimation"}, {"conditional distributions", "Bayesian parameter estimation"}, {"multivariate distributions", "Bayesian parameter estimation"}, {"expectation and variance", "Bayesian parameter estimation"}, {"linear dynamical systems", "Kalman filter"}, {"multivariate distributions", "Kalman filter"}, {"conditional distributions", "Kalman filter"}, {"computations on multivariate Gaussians", "Kalman filter"}, {"value iteration", "policy iteration"}, {"Bellman equations", "policy iteration"}, {"K nearest neighbors", "the curse of dimensionality"}, {"weak law of large numbers", "the curse of dimensionality"}, {"random variables", "beta distribution"}, {"expectation and variance", "beta distribution"}, {"gamma function", "beta distribution"}, {"evaluating multiple integrals: polar coordinates", "evaluating multiple integrals: change of variables"}, {"determinant", "evaluating multiple integrals: change of variables"}, {"linear approximation", "evaluating multiple integrals: change of variables"}, {"mean field approximation", "variational inference and exponential families"}, {"exponential families", "variational inference and exponential families"}, {"probability", "independent events"}, {"conditional probability", "independent events"}, {"linear regression", "binary linear classifiers"}, {"Markov random fields", "conditional random fields"}, {"vector spaces", "inner product"}, {"dot product", "inner product"}, {"linear regression", "bias-variance decomposition"}, {"linear regression: closed-form solution", "bias-variance decomposition"}, {"generalization", "bias-variance decomposition"}, {"entropy", "differential entropy"}, {"mutual information", "differential entropy"}, {"KL divergence", "differential entropy"}, {"expectation and variance", "differential entropy"}, {"Gaussian distribution", "differential entropy"}, {"linear regression as maximum likelihood", "Bayesian linear regression"}, {"Bayesian parameter estimation", "Bayesian linear regression"}, {"Bayesian parameter estimation: multivariate Gaussians", "Bayesian linear regression"}, {"computations on multivariate Gaussians", "Bayesian linear regression"}, {"positive definite matrices", "Schur product theorem"}, {"random variables", "PDFs of functions of random variables"}, {"multivariate distributions", "PDFs of functions of random variables"}, {"determinant", "PDFs of functions of random variables"}, {"linear approximation", "PDFs of functions of random variables"}, {"generalization", "PAC learning"}, {"unions of events", "PAC learning"}, {"independent events", "PAC learning"}, {"Chernoff bounds", "PAC learning"}, {"orthonormal bases", "QR decomposition"}, {"backpropagation", "learning invariances in neural nets"}, {"generalization", "learning invariances in neural nets"}, {"binary linear classifiers", "naive Bayes"}, {"maximum likelihood", "naive Bayes"}, {"optimization problems", "naive Bayes"}, {"the support vector machine", "support vector regression"}, {"linear regression", "support vector regression"}, {"SVM optimality conditions", "support vector regression"}, {"Gaussian distribution", "comparing normal populations"}, {"statistical hypothesis testing", "comparing normal populations"}, {"Student-t distribution", "comparing normal populations"}, {"expectation and variance", "comparing normal populations"}, {"d-separation", "Bayes Ball"}, {"Dirichlet distribution", "Chinese restaurant process"}, {"multinomial distribution", "Chinese restaurant process"}, {"gamma function", "Chinese restaurant process"}, {"mixture of Gaussians models", "comparing Gaussian mixtures and k-means"}, {"k-means", "comparing Gaussian mixtures and k-means"}, {"Expectation-Maximization algorithm", "comparing Gaussian mixtures and k-means"}, {"the support vector machine", "SVM optimality conditions"}, {"Langrange duality", "SVM optimality conditions"}, {"KKT conditions", "SVM optimality conditions"}, {"multidimensional scaling", "Isomap"}, {"precision and recall", "F measure"}, {"expectation and variance", "the bootstrap"}, {"Monte Carlo estimation", "the bootstrap"}, {"decision trees", "bagging"}, {"generalization", "bagging"}, {"Markov random fields", "factor graphs"}, {"Markov random fields", "inference in MRFs"}, {"linear approximation", "gradient"}, {"partial derivatives", "gradient"}, {"dot product", "gradient"}, {"functions of several variables", "gradient"}, {"partial derivatives", "higher-order partial derivatives"}, {"linear approximation", "higher-order partial derivatives"}, {"subspaces", "column space and nullspace"}, {"linear systems as matrices", "column space and nullspace"}, {"independent random variables", "strong law of large numbers"}, {"expectation and variance", "strong law of large numbers"}, {"weak law of large numbers", "strong law of large numbers"}, {"Monte Carlo estimation", "rejection sampling"}, {"conditional distributions", "rejection sampling"}, {"Bayesian parameter estimation: multinomial distribution", "Bayesian naive Bayes"}, {"naive Bayes", "Bayesian naive Bayes"}, {"hidden Markov models", "forward-backward algorithm"}, {"multivariate distributions", "forward-backward algorithm"}, {"conditional independence", "forward-backward algorithm"}, {"random variables", "Gaussian distribution"}, {"expectation and variance", "Gaussian distribution"}, {"linear systems as matrices", "linear least squares"}, {"projection onto a subspace", "linear least squares"}, {"matrix transpose", "linear least squares"}, {"partial derivatives", "linear least squares"}, {"four fundamental subspaces", "linear least squares"}, {"vectors", "subspaces"}, {"Kalman filter", "Kalman filter derivation"}, {"computations on multivariate Gaussians", "Kalman filter derivation"}, {"probability", "expectimax search"}, {"expectation and variance", "expectimax search"}, {"the kernel trick", "kernel ridge regression"}, {"ridge regression", "kernel ridge regression"}, {"random variables", "Bayesian networks"}, {"conditional independence", "Bayesian networks"}, {"Bayes' rule", "Bayesian networks"}, {"spectral decomposition", "variational characterization of eigenvalues"}, {"eigenvalues and eigenvectors", "variational characterization of eigenvalues"}, {"Lagrange multipliers", "variational characterization of eigenvalues"}, {"ridge regression", "ridge regression as SVD"}, {"singular value decomposition", "ridge regression as SVD"}, {"exponential families", "generalized linear models"}, {"maximum likelihood", "generalized linear models"}, {"optimization problems", "generalized linear models"}, {"linear regression as maximum likelihood", "generalized linear models"}, {"gradient descent", "generalized linear models"}, {"multivariate Gaussian distribution", "von Mises distribution"}, {"conditional distributions", "von Mises distribution"}, {"maximum likelihood", "von Mises distribution"}, {"loopy belief propagation", "loopy BP as variational inference"}, {"variational inference", "loopy BP as variational inference"}, {"Lagrange multipliers", "loopy BP as variational inference"}, {"Markov chain Monte Carlo", "MCMC convergence"}, {"covariance", "MCMC convergence"}, {"optimization problems", "multidimensional scaling"}, {"Gaussian processes", "Gaussian process regression"}, {"Bayesian linear regression", "Gaussian process regression"}, {"entropy", "mutual information"}, {"independent random variables", "mutual information"}, {"conditional distributions", "mutual information"}, {"Bayesian parameter estimation", "Bayesian decision theory"}, {"expectation and variance", "Bayesian decision theory"}, {"loss function", "Bayesian decision theory"}, {"Bayesian logistic regression", "variational logistic regression"}, {"variational Bayes", "variational logistic regression"}, {"multiple integrals", "Riemann integral"}, {"matrix transpose", "spectral decomposition"}, {"orthonormal bases", "spectral decomposition"}, {"change of basis", "spectral decomposition"}, {"matrix inverse", "spectral decomposition"}, {"eigenvalues and eigenvectors", "spectral decomposition"}, {"dot product", "matrix multiplication"}, {"SVM optimality conditions", "sequential minimal optimization"}, {"surface integrals", "Divergence Theorem"}, {"partial derivatives", "Divergence Theorem"}, {"multiple integrals", "Divergence Theorem"}, {"Gaussian variable elimination", "Gaussian variable elimination as Gaussian elimination"}, {"Gaussian elimination", "Gaussian variable elimination as Gaussian elimination"}, {"Cholesky decomposition", "Gaussian variable elimination as Gaussian elimination"}, {"random variables", "multivariate distributions"}, {"multiple integrals", "multivariate distributions"}, {"projection onto a subspace", "Fisher's linear discriminant"}, {"Gaussian discriminant analysis", "Fisher's linear discriminant"}, {"eigenvalues and eigenvectors", "Fisher's linear discriminant"}, {"optimization problems", "Fisher's linear discriminant"}, {"covariance matrices", "Fisher's linear discriminant"}, {"the kernel trick", "constructing kernels"}, {"basis function expansions", "feed-forward neural nets"}, {"optimization problems", "convex optimization"}, {"convex sets", "convex optimization"}, {"convex functions", "convex optimization"}, {"gradient", "convex optimization"}, {"Gibbs sampling", "slice sampling"}, {"Metropolis-Hastings algorithm", "slice sampling"}, {"Bayesian networks", "converting between graphical models"}, {"d-separation", "converting between graphical models"}, {"Markov random fields", "converting between graphical models"}, {"Bayesian networks", "d-separation"}, {"conditional independence", "d-separation"}, {"independent random variables", "Chernoff bounds"}, {"moment generating functions", "Chernoff bounds"}, {"Markov and Chebyshev inequalities", "Chernoff bounds"}, {"multivariate Gaussian distribution", "computations on multivariate Gaussians"}, {"conditional distributions", "computations on multivariate Gaussians"}, {"multivariate distributions", "computations on multivariate Gaussians"}, {"matrix inverse", "computations on multivariate Gaussians"}, {"covariance matrices", "computations on multivariate Gaussians"}, {"maximum likelihood", "Bayes net parameter learning"}, {"Bayesian networks", "Bayes net parameter learning"}, {"optimization problems", "Bayes net parameter learning"}, {"maximum likelihood", "maximum likelihood in exponential families"}, {"exponential families", "maximum likelihood in exponential families"}, {"optimization problems", "maximum likelihood in exponential families"}, {"Gaussian process regression", "Gaussian process classification"}, {"Bayesian logistic regression", "Gaussian process classification"}, {"factor analysis", "IBP linear-Gaussian model"}, {"Indian buffet process", "IBP linear-Gaussian model"}, {"CRP clustering", "IBP linear-Gaussian model"}, {"collapsed Gibbs sampling", "IBP linear-Gaussian model"}, {"probability", "random variables"}, {"variational Bayes", "variational Bayes EM"}, {"Expectation-Maximization algorithm", "variational Bayes EM"}, {"variational interpretation of EM", "variational Bayes EM"}, {"maximum likelihood", "sparse coding"}, {"matrix multiplication", "sparse coding"}, {"heavy-tailed distributions", "sparse coding"}, {"optimization problems", "sparse coding"}, {"the kernel trick", "Gaussian processes"}, {"multivariate Gaussian distribution", "Gaussian processes"}, {"VC dimension", "structural risk minimization"}, {"multivariate Gaussian distribution", "information form for multivariate Gaussians"}, {"Gaussian MRFs", "Gaussian BP on trees"}, {"computations on multivariate Gaussians", "Gaussian BP on trees"}, {"sum-product on trees", "Gaussian BP on trees"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2014-25-03</editDate><author>Partha</author><curator /><description>Prerequisite relationship between scientific terms (currently biased towards ML and AI areas)</description><freebaseID /><comment /></Relation><Relation id="320"><relationName>officeBuildingRoomInBuilding</relationName><humanFormat>arg1 {is a room in the building} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>locationLocatedWithinLocation</generalizations><domain>officeBuildingRoom</domain><range>building</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>buildingHasOfficeBuildingRoom</inverse><seedInstances>{&#8220;6115&#8221;, &#8220;Gates &amp; Hilman Centers&#8221;} {&#8220;7501&#8221;, &#8220;Gates and Hillman Centers&#8221;} {&#8220;Rashid Auditorium 4401&#8221;, &#8220;Gates and Hillman Centers&#8221;} {&#8220;Mauldin Auditorium&#8221;, &#8220;Newell-Simon Hall&#8221;} {&#8220;7500&#8221;, &#8220;Wean Hall&#8221;} {&#8220;1212&#8221;, &#8220;Doherty Hall&#8221;} {&#8220;Room 1495&#8221;, &#8220;Biomedical Science Tower&#8221;} {&#8220;Conference Room&#8221;, &#8220;Mellon Institute&#8221;} {&#8220;Kresge Theatre&#8221;, &#8220;College of Fine Arts&#8221;} {&#8220;Reddy Conference Room 4405&#8221;, &#8220;Gates and Hillman Centers&#8221;} {&#8220;Social Room 328&#8221;, &#8220;Mellon Institute&#8221;} {&#8220;1507&#8221;, &#8220;Newell-Simon Hall&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2014-04-25</editDate><author>Aasish (via Bryan)</author><curator /><description>Which office-style building a particular room is found in</description><freebaseID /><comment /></Relation><Relation id="321"><relationName>buildingBelongsToOrganization</relationName><humanFormat>arg1 {is a building belonging to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>locationActedInByOrganization</generalizations><domain>building</domain><range>organization</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>stadiumHomeToLeague stadiumHomeTeam</mutexExceptions><knownNegatives /><inverse>organizationHasBuilding</inverse><seedInstances>{&#8220;Gates &amp; Hillman Centers&#8221;, &#8220;CMU&#8221;} {&#8220;Gates and Hillman Centers&#8221;, &#8220;CMU&#8221;} {&#8220;Newell-Simon Hall&#8221;, &#8220;CMU&#8221;} {&#8220;Wean Hall&#8221;, &#8220;CMU&#8221;} {&#8220;Doherty Hall&#8221;, &#8220;CMU&#8221;} {&#8220;Bohannon Hall&#8221;, &#8220;UMD&#8221;} {&#8220;Atwell Hall&#8221;, &#8220;OSU&#8221;} {&#8220;Hayden Memorial Library&#8221;, &#8220;MIT&#8221;} {&#8220;Dodd Hall&#8221;, &#8220;UCLA&#8221;} {&#8220;Abelson Hall&#8221;, &#8220;WSU&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2014-04-25</editDate><author>Aasish (via Bryan)</author><curator /><description>Which organization a building belongs to</description><freebaseID /><comment /></Relation><Relation id="322"><relationName>meetingEventTitleHasMeetingEventType</relationName><humanFormat>arg1 is {part of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>meetingEventTitle</domain><range>meetingEventType</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>meetingEventTypeIncludesMeetingEventTitle</inverse><seedInstances>{&#8220;Human Powered Data Management&#8221;, &#8220;SCS Faculty Candidate&#8221;} {&#8220;Robot Futures&#8221;, &#8220;SCS Author Presentation &amp; Booksigning&#8221;} {&#8220;Finding Needles in Exponential Haystacks&#8221;, &#8220;Math Colloquium&#8221;} {&#8220;Object Storage&#8221;, &#8220;Special SDI Seminar&#8221;} {&#8220;RSA in the Real World&#8221;, &#8220;SCS Faculty Candidate&#8221;} {&#8220;Optimizing Password Composition Policies&#8221;, &#8220;Theory Lunch Seminar&#8221;} {&#8220;Calibrating the World's Photos with a Massive 3D Database&#8221;, &#8220;VASC Sminar&#8221;} {&#8220;Modern Dynamic Kidney Exchanges&#8221;, &#8220;Algorithmics Economics Seminar&#8221;} {&#8220;Brain Maps to Mechanisms: Neural Circuit Molecular Architecture&#8221;, &#8220;Joint Department of Neurobiology and Center for the Neural Basis of Cognition and Systems Neuroscience Institue Seminar&#8221;} {&#8220;Holey Grail &#8211; the Mechanism of Transport Through the Nuclear Pore of Cells&#8221;, &#8220;Biological Sciences Seminar&#8221;} {&#8220;Math, Monkeys, and the Developing Brain&#8221;, &#8220;The Cowan Young Investigator Lecture, Center for the Neural Basis of Cognition&#8221;} {&#8220;Conversation and Discussion with an Entrepreneur and Energy Visionary&#8221;, &#8220;Innovators Forum&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2014-04-25</editDate><author>Aasish (via Bryan)</author><curator /><description>What series of meetings a particular meeting belongs to, or what kind of a meeting it is</description><freebaseID /><comment /></Relation><Relation id="323"><relationName>meetingEventTitleAtDate</relationName><humanFormat>arg1 occurrs {at the date} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>eventDate</generalizations><domain>meetingEventTitle</domain><range>dateLiteral</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>dateOfMeetingEventTitle</inverse><seedInstances>{&#8220;Human Powered Data Management&#8221;, &#8220;April 3, 2013&#8221;} {&#8220;Robot Futures&#8221;, &#8220;April 3, 2013&#8221;} {&#8220;Finding Needles in Exponential Haystacks&#8221;, &#8220;April 12, 2013&#8221;} {&#8220;Object Storage&#8221;, &#8220;April 15, 2013&#8221;} {&#8220;RSA in the Real World&#8221;, &#8220;April 8, 2013&#8221;} {&#8220;Optimizing Password Composition Policies&#8221;, &#8220;April 10, 2013&#8221;} {&#8220;Calibrating the World's Photos with a Massive 3D Database&#8221;, &#8220;April 15, 2013&#8221;} {&#8220;Modern Dynamic Kidney Exchanges&#8221;, &#8220;April 16, 2013l&#8221;} {&#8220;Brain Maps to Mechanisms: Neural Circuit Molecular Architecture&#8221;, &#8220;April 16, 2013&#8221;} {&#8220;Holey Grail &#8211; the Mechanism of Transport Through the Nuclear Pore of Cells&#8221;, &#8220;April 17, 2013&#8221;} {&#8220;Math, Monkeys, and the Developing Brain&#8221;, &#8220;April 25, 2013&#8221;} {&#8220;Conversation and Discussion with an Entrepreneur and Energy Visionary&#8221;, &#8220;April 24, 2013&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2014-04-25</editDate><author>Aasish (via Bryan)</author><curator /><description>When a particular meeting will take place</description><freebaseID /><comment /></Relation><Relation id="324"><relationName>meetingEventTitleInBuilding</relationName><humanFormat>arg1 occurrs {in the building} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>eventAtLocation</generalizations><domain>meetingEventTitle</domain><range>building</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>buildingHostsMeetingEventTitle</inverse><seedInstances>{&#8220;Human Powered Data Management&#8221;, &#8220;Gates &amp; Hillman Centers&#8221;} {&#8220;Robot Futures&#8221;, &#8220;Gates and Hillman Centers&#8221;} {&#8220;Finding Needles in Exponential Haystacks&#8221;, &#8220;Wean Hall&#8221;} {&#8220;Object Storage&#8221;, &#8220;Doherty Hall&#8221;} {&#8220;RSA in the Real World&#8221;, &#8220;Gates &amp; Hillman Centers&#8221;} {&#8220;Optimizing Password Composition Policies&#8221;, &#8220;Gates and Hillman Centers&#8221;} {&#8220;Calibrating the World's Photos with a Massive 3D Database&#8221;, &#8220;Newell-Simon Hall&#8221;} {&#8220;Modern Dynamic Kidney Exchanges&#8221;, &#8220;Newell-Simon Hall&#8221;} {&#8220;Brain Maps to Mechanisms: Neural Circuit Molecular Architecture&#8221;, &#8220;Biomedical Science Tower&#8221;} {&#8220;Holey Grail &#8211; the Mechanism of Transport Through the Nuclear Pore of Cells&#8221;, &#8220;Mellon Institute&#8221;} {&#8220;Math, Monkeys, and the Developing Brain&#8221;, &#8220;Mellon Institute&#8221;} {&#8220;Conversation and Discussion with an Entrepreneur and Energy Visionary&#8221;, &#8220;College of Fine Arts&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2014-04-25</editDate><author>Aasish (via Bryan)</author><curator /><description>In which building a particular meeting will take place</description><freebaseID /><comment /></Relation><Relation id="325"><relationName>meetingEventTitleInOfficeBuildingRoom</relationName><humanFormat>arg1 occurrs {in the room} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>eventAtLocation</generalizations><domain>meetingEventTitle</domain><range>officeBuildingRoom</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>officeBuildingRoomHostsMeetingEventTitle</inverse><seedInstances>{&#8220;Human Powered Data Management&#8221;, &#8220;6115&#8221;} {&#8220;Robot Futures&#8221;, &#8220;Rashid Auditorium 4401&#8221;} {&#8220;Finding Needles in Exponential Haystacks&#8221;, &#8220;7500&#8221;} {&#8220;Object Storage&#8221;, &#8220;1212&#8221;} {&#8220;RSA in the Real World&#8221;, &#8220;6115&#8221;} {&#8220;Optimizing Password Composition Policies&#8221;, &#8220;8102&#8221;} {&#8220;Calibrating the World's Photos with a Massive 3D Database&#8221;, &#8220;Mauldin Auditorium 1305&#8221;} {&#8220;Modern Dynamic Kidney Exchanges&#8221;, &#8220;1507&#8221;} {&#8220;Brain Maps to Mechanisms: Neural Circuit Molecular Architecture&#8221;, &#8220;Room 1495&#8221;} {&#8220;Holey Grail &#8211; the Mechanism of Transport Through the Nuclear Pore of Cells&#8221;, &#8220;Conference Room&#8221;} {&#8220;Math, Monkeys, and the Developing Brain&#8221;, &#8220;Social Room 328&#8221;} {&#8220;Conversation and Discussion with an Entrepreneur and Energy Visionary&#8221;, &#8220;Kresge Theatre&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2014-04-25</editDate><author>Aasish (via Bryan)</author><curator /><description>In which room a particular meeting will take place</description><freebaseID /><comment /></Relation><Relation id="326"><relationName>meetingEventTitleHasSpeakingPerson</relationName><humanFormat>arg1 {features} the speaker arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>eventHasParticipantAgent</generalizations><domain>meetingEventTitle</domain><range>person</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>personSpeakingAtMeetingEventTitle</inverse><seedInstances>{&#8220;Human Powered Data Management&#8221;, &#8220;Aditya Parameswaran&#8221;} {&#8220;Robot Futures&#8221;, &#8220;Illah Nourbakhsh&#8221;} {&#8220;Finding Needles in Exponential Haystacks&#8221;, &#8220;Joel Spencer&#8221;} {&#8220;Object Storage&#8221;, &#8220;Brent Welch&#8221;} {&#8220;RSA in the Real World&#8221;, &#8220;Nadia Heninger&#8221;} {&#8220;Optimizing Password Composition Policies&#8221;, &#8220;Jeremiah Blocki&#8221;} {&#8220;Calibrating the World's Photos with a Massive 3D Database&#8221;, &#8220;Noah Snavely&#8221;} {&#8220;Modern Dynamic Kidney Exchanges&#8221;, &#8220;Tuomas Sandholm&#8221;} {&#8220;Brain Maps to Mechanisms: Neural Circuit Molecular Architecture&#8221;, &#8220;Stephen J . Smith&#8221;} {&#8220;Holey Grail &#8211; the Mechanism of Transport Through the Nuclear Pore of Cells&#8221;, &#8220;Sanford Simon&#8221;} {&#8220;Math, Monkeys, and the Developing Brain&#8221;, &#8220;Jessica Cantlon&#8221;} {&#8220;Conversation and Discussion with an Entrepreneur and Energy Visionary&#8221;, &#8220;Vinod Khosla&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2014-04-25</editDate><author>Aasish (via Bryan)</author><curator /><description>Who will be speaking at a particular meeting</description><freebaseID /><comment /></Relation><Relation id="327"><relationName>musicGenresSuchAsMusicGenres</relationName><humanFormat>arg1 {is a generalization of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>musicGenre</domain><range>musicGenre</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfMusicGenresSuchAsMusicGenres</inverse><seedInstances>{"metal", "black metal"} {"rock", "classic rock"} {"rock", "hard rock"} {"rock", &#8221;indie"} {"metal", "heavy metal"} {"pop", "rock"} {&#8220;rock", "punk"} {"rock", "heavy metal"} {"rock", "metal"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>40491</editDate><author>Prophet (via Lucas)</author><curator /><description>Describes the musicgenre types that are generalizations of specific musicgenres</description><freebaseID /><comment /></Relation><Relation id="328"><relationName>sportNameHasOriginLanguage</relationName><humanFormat>arg1 is a sport that {its name origin comes from} language arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>sport</domain><range>language</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>languageOfSportsGame</inverse><seedInstances>{"cricket", "english"} {"football", "english"} {"golf", "english"} {"ski", "english"} {"skiing", "english"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>40491</editDate><author>Prophet (via Lucas)</author><curator /><description>Describes the origin language of the sports name</description><freebaseID /><comment /></Relation><Relation id="329"><relationName>animalsSuchAsMammals</relationName><humanFormat>arg1 {is a generalization of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>animal</domain><range>mammal</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfAnimalsSuchAsMammals</inverse><seedInstances>{"animals002", "predators"} {"beasts", "predators"} {"beasts", "wild animals"}  {"birds001", "pets"} {"breeds", "domestic animals"} {"breeds", "farm animals"} {"carnivores", "predators"} {"child", "kids"} {"children", "kids"} {"creatures", &#8220;domestic animals"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>40491</editDate><author>Prophet (via Lucas)</author><curator /><description>Describes the animal types that are generalizations of mammals</description><freebaseID /><comment /></Relation><Relation id="330"><relationName>televisionShowIsBasedOnMovie</relationName><humanFormat>arg1 is a televisionshow that {is based on} the movie arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>televisionshow</domain><range>movie</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>movieThatGeneratesTelevisionShow</inverse><seedInstances>{&#8220;bad teacher&#8221;, &#8220;bad teacher&#8221;} {&#8220;manchester prep&#8221;, &#8220;cruel intentions&#8221;} {&#8220;timon &amp; pumbaa&#8221;, &#8220;the lion king&#8221;} {&#8220;timecop&#8221;, &#8220;timecop&#8221;} {&#8220;tox crusaders&#8221;, &#8220;the toxic avenger&#8221;} {&#8220;ferris bueller&#8221;, &#8220;ferris bueller s day off&#8221;} {&#8220;dirty dancing&#8221;, &#8220;dirty dancing&#8221;} {&#8220;beetlejuice&#8221;, &#8220;beetlejuice&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>40491</editDate><author>Prophet (via Lucas)</author><curator /><description>Movie that a television show was based in</description><freebaseID /><comment>For this relation I inserted the seed instances manually</comment></Relation><Relation id="331"><relationName>athleteFlyOutToSportsteamposition</relationName><humanFormat>arg1 is an athlete that {flied out to} position arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>athlete</domain><range>sportsTeamPosition</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>sportsTeamPositionReceivedAthlete</inverse><seedInstances>{"martin","center"}{"joseph","center"}{"chris wright","center"}{"frank","center"}{"edgardo alfonzo","center"}{"johnny damon","center"}{"mitchell","center"}{"aaron boone","center"}{"ramirez","center"}{"helton","center"}{"manny ramirez","center"}{"ramon santiago","center"}{"ted williams","center"}{"chuck knoblauch","center"}{"sosa","center"}{"brian snyder","center"}{"lowell","center"}{"willis","center"}{"jason bartlett","center"}{"mike lowell","center"}{"ivan rodriguez","center"}{"scott","center"}{"bernie williams","center"}{"todd zeile","center"}{"ruiz","center"}{"tyler johnson","center"}{"scott rolen","center"}{"damon","center"}{"paul lo duca","center"}{"jason lane","center"}{"phillips","center"}{"ryan howard","center"}{"torii hunter","center"}{"russell branyan","center"}{"ramon hernandez","center"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>40491</editDate><author>OntExt (Via Paulo)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="332"><relationName>attractionBeFallInCity</relationName><humanFormat>arg1 is an attraction that {will be fall} in city arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>attractionOfCity</generalizations><domain>attraction</domain><range>city</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>cityHostsAttraction</inverse><seedInstances>{"disneyland","anaheim"}{"busch gardens","tampa"}{"arlington national cemetery","arlington"}{"ronald reagan washington national airport","arlington"}{"forum","victoria"}{"mississippi","memphis"}{"home","louisiana"}{"tampa bay","tampa"}{"tampa","tampa bay"}{"art","wood"}{"disneyland park","anaheim"}{"elephant","portland"}{"the national museum","manila"}{"opryland","nashville"}{"opryland usa","nashville"}{"woodlawn cemetery","clinton"}{"nature","liberty"}{"menlo park","house"}{"portland","liberty"}{"house","menlo park"}{"liberty","portland"}{"the national marine aquarium","plymouth"}{"kensington gardens","kensington"}{"queens","glendale"}{"busch gardens africa","tampa"}{"nelson mandela bay","port elizabeth"}{"strawbery banke museum","portsmouth"}{"max","anaheim"}{"summit","kansas city"}{"mississippi","summit"}{"kansas city","summit"}{"forum","orange"}{"pioneer courthouse square","portland"}{"holocaust museum","tampa"}{"forbes field","oakland"}{"disneyland resort","anaheim"}{"adelphia coliseum","nashville"}{"mississippi","casino"}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>40491</editDate><author>OntExt (Via Paulo)</author><curator /><description>Attraction occurs in the city</description><freebaseID /><comment /></Relation><Relation id="333"><relationName>arthropodBeSometimesConfuseWithInsect</relationName><humanFormat>arg1 is an arthropod that {sometimes is confused} with the insect arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>arthropod</domain><range>insect</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>insectCanBeConfundedWithArthropod</inverse><seedInstances>{"damselfly","dragonfly"} {"dragonfly","damselfly"}{"millipedes","wireworm"}{"wireworm","millipedes"}{"house fly","flesh fly"}{"flesh fly","house fly"}{"deer fly","horse fly"}{"hookworm","roundworm"}{"horse fly","deer fly"}{"mayfly","dragonfly"}{"roundworm","earthworm"}{"wasp","sawfly"}{"dragonfly","mayfly"}{"earthworm","roundworm"}{"adult beetle","mountain pine beetle"}{"mountain pine beetle","adult beetle"}{"corn borer","caddisfly"}{"mite","ticks"}{"caddisfly","corn borer"}{"aphid","adelgid"}{"adelgid","aphid"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>40491</editDate><author>OntExt (Via Paulo)</author><curator /><description>Arthropodes that usually are confunded by insects</description><freebaseID /><comment /></Relation><Relation id="334"><relationName>arthropodCanBeVeryIrritatingToMammal</relationName><humanFormat>arg1 an arthropod that {can be very irritating} to mammal arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>arthropod</domain><range>mammal</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>mammalCanBeIrritatedByArthropod</inverse><seedInstances>{"flea","dog"}{"deer tick","deer"}{"flea","dogs"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>40491</editDate><author>OntExt (Via Paulo)</author><curator /><description>Arthropode that usually irritates mammal</description><freebaseID /><comment /></Relation><Relation id="335"><relationName>moviesSuchAsMovies</relationName><humanFormat>arg1 {is a generalization of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>movie</domain><range>movie</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfMoviesSuchAsMovies</inverse><seedInstances>{&#8220;horror movies&#8221;,&#8221;aliens&#8221;} {&#8220;action movies&#8221;,&#8221;die hard&#8221;} {&#8220;drama movies&#8221;,&#8221;big lebowski&#8221;} {&#8220;drama movies&#8221;,&#8221;fight club&#8221;} {&#8220;fantasy movies&#8221;,&#8221;the lord of the rings trilogy&#8221;} {&#8220;thriller movies&#8221;,&#8221;the shining&#8221;} {&#8220;action movies&#8221;,&#8221;the karate kid&#8221;} {&#8220;action movies&#8221;,&#8221;godzilla&#8221;} {&#8220;thriller movies&#8221;,&#8221;jaws&#8221;} {&#8220;comedy movies&#8221;,&#8221;movie ace ventura 2&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>40491</editDate><author>SubCatReader (via Lucas)</author><curator /><description>Describes the movies types that are generalizations of specific movies</description><freebaseID /><comment /></Relation><Relation id="336"><relationName>religionsSuchAsReligions</relationName><humanFormat>arg1 {is a generalization of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>religion</domain><range>religion</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfReligionsSuchAsReligions</inverse><seedInstances>{&#8220;christian organizations&#8221;,&#8221;advent presbyterian church&#8221;} {&#8220;christian organizations&#8221;,&#8221;advent lutheran church&#8221;} {&#8220;christian organizations&#8221;,&#8221;all nations church of god&#8221;} {&#8220;buddhist organizations&#8221;,&#8221;buddhist lamaism&#8221;} {&#8220;christian organizations&#8221;,&#8221;jehovah witness&#8221;} {&#8220;islamic organizations&#8221;,&#8221;muhammads islamic temple church&#8221;} {&#8220;buddhist organizations&#8221;,&#8221;a di da buddhist temple &#8221;} {&#8220;islamic organizations&#8221;,&#8221;markham islamic center&#8221;} {&#8220;judaic organization&#8221;,&#8221;nazarene judaism&#8221;} {&#8220;judaic organization&#8221;,&#8221;libera judaism&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>40491</editDate><author>SubCatReader (via Lucas)</author><curator /><description>Describes the religions types that are generalizations of specific religions</description><freebaseID /><comment /></Relation><Relation id="337"><relationName>weaponsSuchAsWeapons</relationName><humanFormat>arg1 {is a generalization of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>weapon</domain><range>weapon</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfWeaponsSuchAsWeapons</inverse><seedInstances>{&#8220;ranged weapons&#8221;,&#8221;ak 47&#8221;} {&#8220;ranged weapons&#8221;,&#8221;bow&#8221;} {&#8220;melee weapons&#8221;,&#8221;katana&#8221;} {&#8220;melee weapons&#8221;,&#8221;knives&#8221;} {&#8220;nukes&#8221;,&#8221;mortar bomb&#8221;} {&#8220;nukes&#8221;,&#8221;nuclear missile&#8221;} {&#8220;ranged weapons&#8221;,&#8221;concussion grenade&#8221;} {&#8220;ranged weapons&#8221;,&#8221;sub machine guns&#8221;} {&#8220;melee weapons&#8221;,&#8221;two handed sword&#8221;} {&#8220;ranged weapons&#8221;,&#8221;sling shots&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>40491</editDate><author>SubCatReader (via Lucas)</author><curator /><description>Describes the weapons types that are generalizations of specific weapons</description><freebaseID /><comment /></Relation><Relation id="338"><relationName>videoGamesSuchAsVideoGames</relationName><humanFormat>arg1 {is a generalization of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>videogame</domain><range>videogame</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives /><inverse>inverseOfVideoGamesSuchAsVideoGames</inverse><seedInstances>{&#8220;action games&#8221;,&#8221;assassin s creed 2&#8221;} {&#8220;action games&#8221;,&#8221;dynasty warriors 6&#8221;} {&#8220;adventure games&#8221;,&#8221;duck tales 2&#8221;} {&#8220;rpg games&#8221;,&#8221;breath of fire 4&#8221;} {&#8220;rpg games&#8221;,&#8221;dragon quest 8&#8221;} {&#8220;rts games&#8221;,&#8221;age of empires 2&#8221;} {&#8220;sports games&#8221;,&#8221;all star baseball 2003&#8221;} {&#8220;fps games&#8221;,&#8221;bioshock 2&#8221;} {&#8220;fps games&#8221;,&#8221;battlefield bad company 2&#8221;} {&#8220;sports games&#8221;,&#8221;fifa 2005&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>40491</editDate><author>SubCatReader (via Lucas)</author><curator /><description>Describes the videogame types that are generalizations of specific videogames</description><freebaseID /><comment /></Relation><Relation id="339"><relationName>televisionshowsSuchAstelevisionshows</relationName><humanFormat>arg1 {is a generalization of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>televisionshow</domain><range>televisionshow</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOftelevisionshowsSuchAstelevisionshows</inverse><seedInstances>{"televisionshows", "office"} {"televisionshows", "season"} {"televisionshows", "hawaii"} {"televisionshows", "white"} {"televisionshows", "practice"} {"televisionshows", "agreement"} {"televisionshows", "weekend"} {"televisionshows", "upn"} {"televisionshows", "house"} {"televisionshows", "classes"} {"televisionshows", "registration"} {"televisionshows", "money"} {"televisionshows", "last week"} {"televisionshows", "press release"} {"televisionshows", "jail"} {"televisionshows", "five"} {"televisionshows", "conflict"} {"televisionshows", "video"} {"televisionshows", "captain"} {"televisionshows", "telemundo"} {"televisionshows", "signature"} {"televisionshows", "laws"} {"televisionshows", "friday"} {"televisionshows", "experiment"} {"televisionshows", "eight"} {"televisionshows", "body"} {"televisionshows", "anne of green gables"} {"televisionshows", "america"} {"televisionshows", "yangon"} {"televisionshows", "twilight"} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>40498</editDate><author>SubCatFinder</author><curator> </curator><description> Describes the televisionshows types that are generalizations of specific televisionshows</description><freebaseID /><comment /></Relation><Relation id="340"><relationName>conferencesSuchAsconferences</relationName><humanFormat>arg1 {is a generalization of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>conference</domain><range>conference</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfconferencesSuchAsconferences</inverse><seedInstances>{"conferences", "ifpi"} {"conferences", "rain"} {"conferences", "mkx"} {"conferences", "jazz"} {"conferences", "aavg"} {"conferences", "zipi"} {"conferences", "zaap"} {"conferences", "ysii"} {"conferences", "xavier leroy"} {"conferences", "wsdm"} {"conferences", "world usability day"} {"conferences", "wncg"} {"conferences", "wmcs"} {"conferences", "wage"} {"conferences", "vdnx"} {"conferences", "ulis"} {"conferences", "uffc"} {"conferences", "uae"} {"conferences", "tyria"} {"conferences", "trsm"} {"conferences", "ton"} {"conferences", "tocs"} {"conferences", "the journal of supercomputing"} {"conferences", "tgis"} {"conferences", "tase"} {"conferences", "symposium on principles of database systems"} {"conferences", "symposium on applied computing"} {"conferences", "suka"} {"conferences", "strc"} {"conferences", "splash conference"} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>2014-11-17</editDate><author>SubCatFinder</author><curator> </curator><description> Describes the conferences types that are generalizations of specific conferences</description><freebaseID /><comment /></Relation><Relation id="341"><relationName>musicfestivalsSuchAsmusicfestivals</relationName><humanFormat>arg1 {is a generalization of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>musicfestival</domain><range>musicfestival</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfmusicfestivalsSuchAsmusicfestivals</inverse><seedInstances>{"musicfestivals", "annual meeting"} {"musicfestivals", "annual conference"} {"musicfestivals", "beyond black"} {"musicfestivals", "award ceremony"} {"musicfestivals", "annual event"} {"musicfestivals", "abbey road on the river"} {"musicfestivals", "yuan tan"} {"musicfestivals", "yosemite international jazz festival"} {"musicfestivals", "york early music festival"} {"musicfestivals", "yolo county fair"} {"musicfestivals", "yellow pine harmonica festival"} {"musicfestivals", "yamaha music festival"} {"musicfestivals", "x fest"} {"musicfestivals", "wyoming state fair"} {"musicfestivals", "wygant state natural area"} {"musicfestivals", "wrightwood mountain music festival"} {"musicfestivals", "world pipe band championships"} {"musicfestivals", "world ice art championships"} {"musicfestivals", "world festival of sacred music"} {"musicfestivals", "world electronic music festival"} {"musicfestivals", "world creole music festival"} {"musicfestivals", "woodstock jazz festival"} {"musicfestivals", "womad"} {"musicfestivals", "wolf creek inn state heritage site"} {"musicfestivals", "wireless festival"} {"musicfestivals", "winstock country music festival"} {"musicfestivals", "wing ding"} {"musicfestivals", "winchuck state recreation site"} {"musicfestivals", "william m  tugman state park"} {"musicfestivals", "willamette stone"} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>2014-11-17</editDate><author>SubCatFinder</author><curator> </curator><description> Describes the musicfestivals types that are generalizations of specific musicfestivals</description><freebaseID /><comment /></Relation><Relation id="342"><relationName>hobbiesSuchAshobbies</relationName><humanFormat>arg1 {is a generalization of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>hobby</domain><range>hobby</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfhobbiesSuchAshobbies</inverse><seedInstances>{"hobbies", "studio"} {"hobbies", "troops"} {"hobbies", "reading"} {"hobbies", "talks"} {"hobbies", "pictures"} {"hobbies", "science"} {"hobbies", "polls"} {"hobbies", "hunting"} {"hobbies", "fiji"} {"hobbies", "volunteer"} {"hobbies", "discussions"} {"hobbies", "boating"} {"hobbies", "venice"} {"hobbies", "places"} {"hobbies", "gallery"} {"hobbies", "fly fishing"} {"hobbies", "locations"} {"hobbies", "hiking"} {"hobbies", "cardiff"} {"hobbies", "camps"} {"hobbies", "activities"} {"hobbies", "water pipes"} {"hobbies", "trips"} {"hobbies", "submissions"} {"hobbies", "service areas"} {"hobbies", "repairs"} {"hobbies", "paddling"} {"hobbies", "leicester"} {"hobbies", "inspiration"} {"hobbies", "ideas"} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>2014-11-17</editDate><author>SubCatFinder</author><curator> </curator><description> Describes the hobbies types that are generalizations of specific hobbies</description><freebaseID /><comment /></Relation><Relation id="343"><relationName>professionsSuchAsprofessions</relationName><humanFormat>arg1 {is a generalization of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>profession</domain><range>profession</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfprofessionsSuchAsprofessions</inverse><seedInstances>{"professions", "professionals"} {"professions", "staff"} {"professions", "providers"} {"professions", "practitioners"} {"professions", "workers"} {"professions", "experts"} {"professions", "specialists"} {"professions", "nurses"} {"professions", "leaders"} {"professions", "doctors"} {"professions", "professional"} {"professions", "physicians"} {"professions", "teachers"} {"professions", "services"} {"professions", "faculty"} {"professions", "members"} {"professions", "care professionals"} {"professions", "instructors"} {"professions", "employees"} {"professions", "individuals"} {"professions", "consultants"} {"professions", "nursing"} {"professions", "engineers"} {"professions", "educators"} {"professions", "technicians"} {"professions", "craftsmen"} {"professions", "lawyers"} {"professions", "jobs"} {"professions", "therapists"} {"professions", "clinicians"} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>2014-11-17</editDate><author>SubCatFinder</author><curator> </curator><description> Describes the professions types that are generalizations of specific professions</description><freebaseID /><comment /></Relation><Relation id="344"><relationName>countriesSuchAscountries</relationName><humanFormat>arg1 {is a generalization of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>country</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfcountriesSuchAscountries</inverse><seedInstances>{"countries", "usa"} {"countries", "u  s"} {"countries", "india"} {"countries", "america"} {"countries", "uk"} {"countries", "england"} {"countries", "canada"} {"countries", "the us"} {"countries", "australia"} {"countries", "france"} {"countries", "south vietnam"} {"countries", "japan"} {"countries", "russia"} {"countries", "mexico"} {"countries", "spain"} {"countries", "poland"} {"countries", "south africa"} {"countries", "israel"} {"countries", "iran"} {"countries", "korea"} {"countries", "sweden"} {"countries", "germany"} {"countries", "papua new guinea"} {"countries", "iraq"} {"countries", "uk "} {"countries", "switzerland"} {"countries", "norway"} {"countries", "brazil"} {"countries", "scotland"} {"countries", "saudi arabia"} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>2014-11-17</editDate><author>SubCatFinder</author><curator> </curator><description> Describes the countries types that are generalizations of specific countries</description><freebaseID /><comment /></Relation><Relation id="345"><relationName>toolsSuchAstools</relationName><humanFormat>arg1 {is a generalization of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>tool</domain><range>tool</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOftoolsSuchAstools</inverse><seedInstances>{"tools", "tools"} {"tools", "accessories"} {"tools", "plants"} {"tools", "supplements"} {"tools", "grips"} {"tools", "components"} {"tools", "abrasive jet machining"} {"tools", "versatility"} {"tools", "toolkit"} {"tools", "thermistors"} {"tools", "taps and dies"} {"tools", "system components"} {"tools", "studs"} {"tools", "spreaders"} {"tools", "spokeshave"} {"tools", "spin welding"} {"tools", "solenoids"} {"tools", "sheet metal forming"} {"tools", "sector 2"} {"tools", "secateurs"} {"tools", "schedule software"} {"tools", "scalpels"} {"tools", "sawhorses"} {"tools", "safety pins"} {"tools", "rubrics"} {"tools", "reamers"} {"tools", "ratchets"} {"tools", "ratchet"} {"tools", "protractors"} {"tools", "project management software"} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>2014-11-17</editDate><author>SubCatFinder</author><curator> </curator><description> Describes the tools types that are generalizations of specific tools</description><freebaseID /><comment /></Relation><Relation id="346"><relationName>criminalsSuchAscriminals</relationName><humanFormat>arg1 {is a generalization of} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>criminal</domain><range>criminal</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfcriminalsSuchAscriminals</inverse><seedInstances>{"criminals", "york city"} {"criminals", "murder"} {"criminals", "sites"} {"criminals", "authorities"} {"criminals", "files"} {"criminals", "web sites"} {"criminals", "menu"} {"criminals", "abuse"} {"criminals", "suggestions"} {"criminals", "mike price"} {"criminals", "criminals"} {"criminals", "neil cavuto"} {"criminals", "jesse"} {"criminals", "hill"} {"criminals", "england area"} {"criminals", "confederates"} {"criminals", "walter scott"} {"criminals", "red sox"} {"criminals", "patrick o brian"} {"criminals", "link"} {"criminals", "law enforcement"} {"criminals", "king john"} {"criminals", "former president bill clinton"} {"criminals", "felons"} {"criminals", "destruction"} {"criminals", "death"} {"criminals", "david mitchell"} {"criminals", "burke"} {"criminals", "bruno hauptmann"} {"criminals", "abu jamal"} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>2014-11-17</editDate><author>SubCatFinder</author><curator> </curator><description> Describes the criminals types that are generalizations of specific criminals</description><freebaseID /><comment /></Relation><Relation id="347"><relationName>awardTrophyTournamentWasAwardedOnStadium</relationName><humanFormat>arg1 is a awardtrophytournament that {was awarded in} stadiumoreventvenue arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>atLocation</generalizations><domain>awardtrophytournament</domain><range>stadiumoreventvenue</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfAwardTrophyTournamentWasAwardedOnStadium</inverse><seedInstances>{"alan i  rothenberg trophy", "foxboro stadium"} {"alan i  rothenberg trophy", "rfk memorial stadium"} {"alan i  rothenberg trophy", "crew stadium"} {"world series", "fenway park"} {"world series", "u s  bank arena"}  {"european champion clubs  cup", "estadio da luz"}  {"european champion clubs  cup", "wembley stadium"}  {"european champion clubs  cup", "allianz arena"}  {"vince lombardi trophy", "lucas oil stadium"} {"vince lombardi trophy", "stanford stadium"} {"vince lombardi trophy", "metlife stadium"}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>41993</editDate><author>Prophet</author><curator> </curator><description>Stadium of event venue where a award trophy tournament was at least once awarded</description><freebaseID /><comment /></Relation><Relation id="348"><relationName>athleteFracturedBone</relationName><humanFormat>arg1 is an athlete that {fractured} his bone arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>athleteInjuredHisBodyPart</generalizations><domain>athlete</domain><range>bone</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfAthleteFracturedBone</inverse><seedInstances>{&#8220;reggie bush&#8221;,&#8221;tibia&#8221;} {&#8220;joe theismann&#8221;,&#8221;tibia&#8221;} {&#8220;kendry morales&#8221;,&#8221;tibia&#8221;} {&#8220;lance armstrong&#8221;,&#8221;collar bone&#8221;} {&#8220;oscar moller&#8221;,&#8221;collar bone&#8221;} {&#8220;matt leinart&#8221;,&#8221;collar bone&#8221;} {&#8220;jake locker&#8221;,&#8221;metatarsal bones&#8221;} {&#8220;le veon bell&#8221;,&#8221;metatarsal bones&#8221;} {&#8220;matt schaub&#8221;,&#8221;metatarsal bones&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>41993</editDate><author>Prophet</author><curator> </curator><description>Bone fracture that an athlete had</description><freebaseID /><comment /></Relation><Relation id="349"><relationName>bacteriaCanCauseIllnessFromFood</relationName><humanFormat>arg1 is a bacteria that {can cause illness from} food arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>bacteria</domain><range>food</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfBacteriaCanCauseIllnessFromFood</inverse><seedInstances>{"campylobacter jejuni", "milk"} {"campylobacter jejuni", "water"} {"campylobacter jejuni", "chiken"} {"clostridium botulinum", "fish"}  {"clostridium botulinum", "wrapped food"}  {"escherichia coli", "ground beef"}  {"escherichia coli", "vegetables"} {"escherichia coli", "apple juice"}  {"salmonella", "eggs"}  {"salmonella", "seafood"}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>41993</editDate><author>Prophet</author><curator> </curator><description>Describes the foods that bacterias can cause illness from</description><freebaseID /><comment /></Relation><Relation id="350"><relationName>softwareIsProgrammedInProgrammingLanguage</relationName><humanFormat>arg1 is a software {programmed in} programminlanguage arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>software</domain><range>programminglanguage</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfSoftwareProgrammedInProgrammingLanguage</inverse><seedInstances>{&#8220;opera mini&#8221;,&#8221;java&#8221;} {&#8220;rtext&#8221;,&#8221;java&#8221;} {&#8220;86 dos&#8221;,&#8221;assembly&#8221;} {&#8220;quake engine&#8221;,&#8221;assembly&#8221;} {&#8220;quake II engine&#8221;,&#8221;assembly&#8221;} {&#8220;matlab&#8221;,&#8221;c&#8221;} {&#8220;nemo&#8221;,&#8221;c&#8221;} {&#8220;easyeclipse&#8221;,&#8221;python&#8221;} {&#8220;mako&#8221;,&#8221;python&#8221;} {&#8220;appletviwer&#8221;,&#8221;java&#8221;} {&#8220;bioclipse&#8221;,&#8221;java&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>41993</editDate><author>Prophet</author><curator> </curator><description>Relates a software to its programming language</description><freebaseID /><comment /></Relation><Relation id="351"><relationName>muscleLocatedInBodyPart</relationName><humanFormat>arg1 a muscle {located in} bodypart arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>subpartOf</generalizations><domain>muscle</domain><range>bodypart</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> </knownNegatives><inverse>bodyPartContainsMuscle</inverse><seedInstances>{"trapezius",&#8221;neck"} {"pectoralis major",&#8221;chest"} {"pectoralis minor",&#8221;chest"} {"deltoid",&#8221;shoulders"} {"triceps",&#8221;arms"} {"biceps",&#8221;arms"} {"abs",&#8221;chest"} {"sartorius",&#8221;tights"} {"abductor longus",&#8221;thighs"} {"brachialis",&#8221;arms"}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>41993</editDate><author>Prophet</author><curator> </curator><description>Describes the muscles in body parts</description><freebaseID /><comment /></Relation><Relation id="352"><relationName>actorWorkedWithDirector</relationName><humanFormat>arg1 is an actor that {worked with} the director arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentCollaboratesWithAgent</generalizations><domain>actor</domain><range>director</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> </knownNegatives><inverse>directorWorkedWithActor</inverse><seedInstances>{"simon pegg", "j j  abrams"} {"alec baldwin", "woody allen"} {"scarlett johansson", "woody allen"} {"jean reno", "luc besson"} {"sharlto copley", "neill blomkamp"} {"ewan mcgregor", "danny boyle"} {"robert de niro", "brian de palma"} {"morgan freeman", "clint eastwood"} {"peter sellers", "blake edwards"} {"nicolas cage", "francis ford coppola"} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>41993</editDate><author>Prophet</author><curator> </curator><description>Relates the actors and directors that at least once worked together</description><freebaseID /><comment /></Relation><Relation id="353"><relationName>criminalArrestedInCountry</relationName><humanFormat>arg1 is a criminal {arrested in} country arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentRelatedToLocation</generalizations><domain>criminal</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> </knownNegatives><inverse>inverseOfCriminalArrestedInCountry</inverse><seedInstances>{&#8220;al capone&#8221;, &#8220;united states of america&#8221;} {&#8220;charles ponzi&#8221;, &#8220;italy&#8221;} {&#8220;lary hoover&#8221;, &#8220;united states of america&#8221;} {&#8220;barry minkow&#8221;, &#8220;united states of america&#8221;} {&#8220;fernandinho beira mar&#8221;, &#8220;brazil&#8221;} {&#8220;carlinhos beira mar&#8221;, &#8220;brazil&#8221;} {&#8220;joseph bonanno&#8221;, &#8220;united states of america&#8221;} {&#8220;hawley harvey crippen&#8221;, &#8220;england&#8221;} {&#8220;donald neilson&#8221;, &#8220;england&#8221;} {&#8220;augusto pinochet&#8221;, &#8220;spain&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>41993</editDate><author>Prophet</author><curator> </curator><description>Country where criminal was arrested</description><freebaseID /><comment /></Relation><Relation id="354"><relationName>athletePlayedForSchool</relationName><humanFormat>arg1 is an athlete that {played for} the team of school arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>personBelongsToOrganization</generalizations><domain>athlete</domain><range>school</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> </knownNegatives><inverse>inverseOfAthletePlayedForSchool</inverse><seedInstances>{&#8220;desean jackson&#8221;,&#8220;long beach polytechnic high school&#8221;} {&#8220;willie mcginest&#8221;,&#8220;long beach polytechnic high school&#8221;} {&#8220;winston justice&#8221;,&#8220;long beach polytechnic high school&#8221;} {&#8220;andrew luck&#8221;,&#8220;stanford university&#8221;} {&#8220;tom brady&#8221;,&#8220;junipero serra high school&#8221;} {&#8220;matt barkley&#8221;,&#8220;mater dei high school&#8221;} {&#8220;leron ellis&#8221;,&#8220;mater dei high school&#8221;} {&#8220;danny espinosa&#8221;,&#8220;mater dei high school&#8221;} {&#8220;amani toomer&#8221;,&#8220;de la salle high school&#8221;} {&#8220;stefan frei&#8221;,&#8220;de la salle high school&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>41993</editDate><author>Prophet</author><curator> </curator><description>The school that an athlete used to play for its team</description><freebaseID /><comment /></Relation><Relation id="355"><relationName>publicationPublishedInMagazine</relationName><humanFormat>arg1 is a publication {published} in magazine arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>subpartOf</generalizations><domain>publication</domain><range>magazine</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> </knownNegatives><inverse>MagazineContainsPublication</inverse><seedInstances>{&#8220;the technological singularity: what about an unintelligent singularity?&#8221;, &#8220;acm&#8221;} {&#8220;computers versus humanity: do we compete?: the technological singularity&#8221;, &#8220;acm&#8221;} {&#8220;caffe neve&#8221;, &#8220;acm&#8221;} {&#8220;pessential knowledge aggregation, Delivery, and assessment&#8221;, &#8220;acm&#8221;} {&#8220;does innovation create or destroy jobs?&#8221;, &#8220;acm&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>41993</editDate><author>Prophet</author><curator /><description>Magazine in which a publication was published in</description><freebaseID /><comment /></Relation><Relation id="356"><relationName>restaurantLocatedInSkyscraper</relationName><humanFormat>arg1 is a restaurant {located in} skyscraper arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>locationLocatedWithinLocation</generalizations><domain>restaurant</domain><range>skyscraper</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> </knownNegatives><inverse>skyscraperContainsRestaurant</inverse><seedInstances>{&#8220;hutong&#8221;,&#8220;the shard&#8221;} {&#8220;city social&#8221;,&#8220;tower42&#8221;}{&#8220;oblix&#8221;,&#8220;the shard&#8221;} {&#8220;sushi samba&#8221;,&#8220;heron tower&#8221;} {&#8220;madison&#8221;,&#8220;st paul s&#8221;} {&#8220;duck and waffle&#8221;,&#8220;heron tower&#8221;} {&#8220;searcys&#8221;,&#8220;the gherkin&#8221;} {&#8220;quartier restaurant&#8221;,&#8220;eight club&#8221;} {&#8220;paramount&#8221;,&#8220;centre point&#8221;} {&#8220;oxo tower&#8221;,&#8220;oxo tower&#8221;} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>41993</editDate><author>Prophet</author><curator> </curator><description>Describes restaurants located in skyscrapers</description><freebaseID /><comment /></Relation><Relation id="357"><relationName>vegetableCanBeServedWithGrain</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>itemUsedWithItem</generalizations><domain>vegetable</domain><range>grain</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> </knownNegatives><inverse>inverseOfvegetableCanBeServedWithGrain</inverse><seedInstances>{"corn","sugar"} {"wheat","barley"} {"potatoes","sugar"} {"potato","sugar"} {"wheat","sorghum"} {"wheat","oatmeal"} {"rice","oatmeal"} {&#8220;tomatoes&#8221;,&#8221;rice&#8221;} {&#8220;tomatoes&#8221;, &#8220;beans&#8221;} {&#8220;lettuce&#8221;,&#8221;rice&#8221;} {&#8220;lettuce&#8221;,&#8221;beans&#8221;} {&#8220;onions&#8221;,&#8221;lettuce&#8221;} {&#8220;onions&#8221;,&#8221;beans&#8221;} {&#8220;carrot&#8221;,&#8221;rice&#8221;} {&#8220;carrot&#8221;,&#8221;beans&#8221;} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>06 04 2015</editDate><author>Prophet+Ontext (915)</author><curator> </curator><description>Describes the vegetables that are usually served with a grain</description><freebaseID /><comment /></Relation><Relation id="358"><relationName>insectEatsGrain</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>animalEatFood</generalizations><domain>insect</domain><range>grain</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> </knownNegatives><inverse>inverseOfinsectEatsGrain</inverse><seedInstances>{"insects","sugar"} {"bugs","crops"} {"beneficial insects","crops"} {"moths","crops"} {"beetles","crops"} {"spiders","sugar"}  {"moth","crops"} {"mites","crops"} {&#8220;mosquitos&#8221;,&#8221;corn&#8221;} {&#8220;weevil&#8221;,&#8221;rice&#8221;} {&#8220;ants&#8221;,&#8221;rice&#8221;} {&#8220;ants&#8221;,&#8221;corn&#8221;} {&#8220;ants&#8221;,&#8221;sugar&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>06 04 2015</editDate><author>Prophet+Ontext (915)</author><curator> </curator><description>Describes the grains eaten by an insect</description><freebaseID /><comment /></Relation><Relation id="359"><relationName>athletePublishesInBlog</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>athlete</domain><range>blog</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfathletePublishesInBlog</inverse><seedInstances>{&#8220;Tom Hall&#8221;,&#8221;http://tomh all.ca/&#8221;} {&#8220;Ryan Semple&#8221;,&#8221;www.ryansemple.com&#8221;} {&#8220;Rosanna Tomiuk&#8221;,&#8221;www.rosannatomiuk.com&#8221;} {&#8220;Paula Findlay&#8221;,&#8221;paulafindlay.blogspot.com&#8221;} {&#8220;Megan Imrie&#8221;,&#8221;www.meganimrie.com&#8221;} {&#8220;Bobby Jones&#8221;,&#8221;  http://www.yardbarker.com/blog/bobbysworld/home&#8221;} {&#8220;Lauryn Williams&#8221;,&#8221;http://www.yardbarker.com/blog/lwheels/home&#8221;} {&#8220;Cletis Gordon&#8221;,&#8221;http://www.yardbarker.com/blog/cletis gordon/home&#8221;} {&#8220;Ikaika Alama-Francis&#8221;,&#8221;http://www.yardbarker.com/blog/ikaika/home&#8221;} {&#8220;Isaac Bruce&#8221;,&#8221;http://www.yardbarker.com/blog/isaacbruce/home&#8221;} {&#8220;Joshua Riker-Fox&#8221;,&#8221;www.riker-fox.com#sthash.1kydX5zG.dpuf&#8221;} {&#8220;Heather Moyse&#8221;,&#8221;www.heathermoyse.net#sthash.1kydX5zG.dpuf&#8221;} {&#8220;Benoit Huot&#8221;,&#8221;www.benoithuot.com#sthash.1kydX5zG.dpuf&#8221;} {&#8220;Nicole Forrester&#8221;,&#8221;www.nicole-forrester.blogspot.com/#sthash.1kydX5zG.dpuf&#8221;} {&#8220;Alexandra Orlando&#8221;,&#8221;www.alexandraorlando.ca/#sthash.1kydX5zG.dpuf&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>06 04 2015</editDate><author>Prophet+Ontext (915)</author><curator> </curator><description>The blog where an athlete publishes</description><freebaseID /><comment /></Relation><Relation id="360"><relationName>UniversityLedMusicFestival</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentParticipatedInEvent</generalizations><domain>university</domain><range>musicfestival</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> </knownNegatives><inverse>inverseOfUniversityLedMusicFestival</inverse><seedInstances>{&#8221;University of Kentucky&#8221;,&#8220;Boomslang: A Celebration of Sound &amp; Art&#8221;} {&#8221;Mississippi State University&#8221;,&#8220;2015 Old Main Music Festival&#8221;} {&#8221;University of Miami&#8221;,&#8220;Festival Miama&#8221;} {&#8220;Florida State University&#8221;,&#8220;Festival of New Music&#8221;} {&#8221;University of Tehran&#8221;,&#8220;Summer Music Festival&#8221;} {&#8220;Hacettepe University&#8221;,&#8221;International Ankara Music Festival&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>06 04 2015</editDate><author>Prophet+Ontext (915)</author><curator> </curator><description>identifies the university that led a Musical Festival</description><freebaseID /><comment /></Relation><Relation id="361"><relationName>companyProducesVideoGameSystem</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>company</domain><range>videogamesystem</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfcompanyProducesVideoGameSystem</inverse><seedInstances>{&#8220;sony&#8221;,&#8221;psone&#8221;} {&#8220;sony&#8221;,&#8221;ps2&#8221;} {&#8220;sony&#8221;,&#8221;ps3&#8221;} {&#8220;sony&#8221;,&#8221;ps4&#8221;} {&#8220;microsoft&#8221;,&#8221;xboxone&#8221;} {&#8220;microsoft&#8221;,&#8221;xbos360&#8221;} {&#8220;nintendo&#8221;,&#8221;wii&#8221;} {&#8220;nintendo&#8221;,&#8221;3ds&#8221;} {&#8220;sega&#8221;,&#8221;saturn&#8221;} {&#8220;sega&#8221;,&#8221;dreamcast&#8221;} {&#8220;microsoft&#8221;,&#8221;xbox&#8221;} {&#8220;nintendo&#8221;,&#8221;SNES&#8221;} {&#8220;nintendo&#8221;,&#8221;n64&#8221;} {&#8220;nintendo&#8221;,&#8221;game cube&#8221;} {&#8220;sega&#8221;,&#8221;mega drive&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>06 04 2015</editDate><author>Prophet+Ontext (915)</author><curator> </curator><description>company produces a video game system</description><freebaseID /><comment /></Relation><Relation id="362"><relationName>birdMayConsumeProtein</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>bird</domain><range>protein</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfbirdMayConsumeProtein</inverse><seedInstances>{"frugivorous","insects"} {"granivorous","insects"} {"game birds","insects"} {"sparrow","insects"} {"finches","potassium"} {"chiken","insects"} {"chiken","seeds"}  {"frugivourous","seeds"} {"sparrow","seeds"}  </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>06 04 2015</editDate><author>Prophet+Ontext (915)</author><curator> </curator><description>Describes the proteins eaten by a bird</description><freebaseID /><comment /></Relation><Relation id="363"><relationName>coachWorksInCountry</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>agentActsInLocation</generalizations><domain>coach</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> </knownNegatives><inverse>inverseOfcoachWorksInCountry</inverse><seedInstances>{"hiddink", &#8220;usa&#8221;} {"bob bradley","tanzania"} {"stoops",&#8221;usa&#8221;} {"kelvin sampson",&#8221;usa&#8221;} {"clinton white", "usa"} {&#8220;steve spurrier","usa"} {"kelvin sampson","usa"} {"summers",&#8221;england&#8221;} {&#8220;Oswaldo de Oliveira&#8221;, &#8220;Brazil&#8221;} {&#8220;Tite&#8221;, &#8220;Brazil&#8221;} {&#8220;muricy ramalho&#8221;, &#8220;Brazil&#8221;} {&#8220;Jose Mourinho&#8221;, &#8220;england&#8221;} {&#8220;mike Tomlin&#8221;,&#8221;usa&#8221;} {&#8220;Clint Hurdle&#8221;,&#8221;usa&#8221;} {&#8220;Erick Spoelstra&#8221;,&#8221;usa&#8221;} {&#8220;Marc Willmots&#8221;,&#8221;belgium&#8221;} {&#8220;Miguel Herrera&#8221;,&#8221;Mexico&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>06 04 2015</editDate><author>Prophet+Ontext (915)</author><curator> </curator><description>Describes the country where a coach works</description><freebaseID /><comment /></Relation><Relation id="364"><relationName>magazineIsLeadByCeo</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>magazine</domain><range>ceo</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfmagazineIsLeadByCeo</inverse><seedInstances>{&#8220;Family Circle&#8221;,&#8221;Joseph H. Ceryanec&#8221;} {&#8220;People&#8221;,&#8221;Joseph A. Ripp&#8221;} {&#8220;national geographic&#8221;,&#8221;Gary Knell&#8221;} {&#8220;Forbes&#8221;,&#8221;Mike Perlis&#8221;} {&#8220;Good Housekeeping&#8221;,&#8221;Steve Swartz&#8221;} {&#8220;readers digest&#8221;,&#8221;Robert Guth&#8221;} {&#8220;Game Informer&#8221;,&#8221; J. Paul Raines&#8221;} {&#8220;Awake!&#8221;,&#8221;W. H. Conley&#8221;} {&#8220;Tesco Magazine&#8221;,&#8221;John D. Wren&#8221;} {&#8220;What's Cooking&#8221;,&#8221;Steve Lacy&#8221;} {&#8220;Chatelaine&#8221;,&#8221;Guy Laurence&#8221;} {&#8220;Mclean's&#8221;,&#8221;Guy Laurence&#8221;} {&#8220;Canadian Living&#8221;,&#8221;Francois Olivier&#8221;} {&#8220;Style at Home&#8221;,&#8221;Francois Olivier&#8221;} {&#8220;Asda Magazine&#8221;,&#8221;Maurice Levy&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>06 04 2015</editDate><author>Prophet+Ontext (915)</author><curator> </curator><description>Identifies the CEO of a Magazine</description><freebaseID /><comment /></Relation><Relation id="365"><relationName>musicSongIsATrackOfMusicAlbum</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>musicSong</domain><range>musicalbum</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfmusicSongIsATrackOfMusicAlbum</inverse><seedInstances>{"lazaretto","lazaretto"} {"sixteen saltines","blunderbus"} {"Something From Nothing","Sonic Highways"} {"Bridge Burning","Wasting Light"} {"Dear Rosemary","Wasting Light"} {"Walk","Wasting Light"} {"I Sat By the Ocean","Like Clockwork"} {"Quasar","Oceania"} {"Go Right Ahead","Lex Hives"} {"Superhuman","Contraband"}  {&#8220;No One Knows&#8221;,&#8221;Song for the Deaf&#8221;} {&#8220;A Song for the Dead&#8221;,&#8221;Song for the Deaf&#8221;} {&#8220;Feel good hit of the Summer&#8221;,&#8221;Rated R&#8221;} {&#8220;The lost art of keeping a secret&#8221;,&#8221;Rated R&#8221;} {&#8220;Warning&#8221;,&#8221;Warning&#8221;} {&#8220;Waiting&#8221;,&#8221;Warning&#8221;} {&#8220;Minority&#8221;,&#8221;Warning&#8221;} {&#8220;Terrible Lie&#8221;,&#8221;Pretty Hate Machine&#8221;} {&#8220;Something i can never have&#8221;,&#8221;Pretty Hate Machine&#8221;} {&#8220;The day the world went away&#8221;,&#8221;The Fragile&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>06 04 2015</editDate><author>Prophet+Ontext (915)</author><curator> </curator><description>Identifies a music song which is a track of a music album</description><freebaseID /><comment /></Relation><Relation id="366"><relationName>arachnidIsEatenByBird</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>animalPreysOn</generalizations><domain>arachnid</domain><range>bird</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> </knownNegatives><inverse>inverseOfarachnidIsEatenByBird</inverse><seedInstances>{"scorpions","wild birds"} {"scorpions","songbirds"} {"scorpions","penguins"} {"scorpions","owls"} {"scorpions","ducks"} {"scorpions","chickens"} {"ticks","wild birds"} {"ticks","songbirds"} {"ticks","penguins"} {"ticks","parrots"} {"ticks","owls"} {"ticks","hummingbirds"} {"ticks","eagles"} {"ticks","eagle"} {"ticks","ducks"} {"ticks","chickens"} {"tarantulas","exotic birds"}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>06 04 2015</editDate><author>Prophet+Ontext (915)</author><curator> </curator><description>Describes arachnids that are hunted and eaten by this bird</description><freebaseID /><comment /></Relation><Relation id="367"><relationName>islandHasSkiArea</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>island</domain><range>skiarea</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfislandHasSkiArea</inverse><seedInstances>{&#8220;Iceland&#8221;,&#8221;Blafjoll&#8221;} {&#8220;Iceland&#8221;,&#8221;Hlidarfjall&#8221;} {&#8220;Vancouver Island&#8221;,&#8221;Mount Washington Ski Resort&#8221;} {&#8220;Central North Island&#8221;,&#8221;Whakapapa's&#8221;} {&#8220;Central North Island&#8221;,&#8221;Turoa&#8221;} {&#8220;Central North Island&#8221;,&#8221;Tukino&#8221;} {&#8220;New Zeland's North Island&#8221;,&#8221;Taranaki&#8221;} {&#8220;Vancouver Island&#8221;,&#8221;Mt. Cain Ski Resort&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>06 04 2015</editDate><author>Prophet+Ontext (915)</author><curator> </curator><description>Describes island that have ski a area</description><freebaseID /><comment /></Relation><Relation id="368"><relationName>hotelWasBuiltAtFarm</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>locationLocatedWithinLocation</generalizations><domain>hotel</domain><range>farm</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> </knownNegatives><inverse>inverseOfhotelWasBuiltAtFarm</inverse><seedInstances>{&#8220;Knott's Berry Farm Resort Hotel&#8221;,&#8221;Knott's Berry Farm&#8221;} {&#8220;Secluded Boutique Hotel&#8221;,&#8221;1929 Plantation&#8221;} {&#8220;Farmhouse Hotel&#8221;,&#8221;XV century farm&#8221;} {&#8220;Park Farm Country Hotel&#8221;,&#8221;A Norwich Farm&#8221;} {&#8220;Elvey farm hotel&#8221;,&#8221;Elvey farm&#8221;} {&#8220;Days Inn Woodbury&#8221;,&#8221;Woodybury Farm&#8221;} {&#8220;Best Wester Woodbury Inn&#8221;,&#8221;Woodbury Farm&#8221;} {&#8220;Billerwell Farmhouse Bed &amp; Breakfast&#8221;,&#8221;Billerwell Farmhouse&#8221;} {&#8220;Penquite Farm Hotel&#8221;,&#8221;Penquite Farm&#8221;} {&#8220;Mennabroom Farm Cottages&#8221;, &#8220;Mennabroom Farm&#8221;} {&#8220;Downs Barn Farm Hotel&#8221;,&#8221;Downs Barn Farm&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>06 04 2015</editDate><author>Prophet+Ontext (915)</author><curator> </curator><description>Describes hotels built at farms</description><freebaseID /><comment /></Relation><Relation id="369"><relationName>DiseaseMayBeCausedByDrug</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>disease</domain><range>drug</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfDiseaseMayBeCausedByDrug</inverse><seedInstances>{"heart disease","caffeine"} {"cancer","acid"} {"blood pressure","caffeine"} {"cancer","calcium"} {"suburb","april"} {"side effects","hormones"} {"type 2 diabetes","caffeine"}  {"surgeon","epitome"} {"surgeon","cyclobenzaprine"} {&#8221;hallucinations&#8221;,&#8220;cimetidine&#8221;} {&#8221;hallucinations&#8221;,&#8220;ranitidine&#8221;} {&#8221;hallucinations&#8221;,&#8220;famotidine&#8221;} {&#8220;heart disease&#8221;,&#8221;cocaine&#8221;} {&#8220;cirrhosis&#8221;,&#8221;tabacco&#8221;} {&#8220;heart disease&#8221;,&#8221;heroin&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>06 04 2015</editDate><author>Prophet+Ontext (915)</author><curator> </curator><description>Describes a disease that can be caused by a drug</description><freebaseID /><comment /></Relation><Relation id="370"><relationName>politicianUsWentToSchool</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>politicianus</domain><range>school</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfpoliticianUsWentToSchool</inverse><seedInstances>{&#8220;Barack Obama&#8221;,&#8221;Punahou School&#8221;} {&#8220;George W. Bush&#8221;,&#8221;Harvard Business School&#8221;} {&#8220;Woodrow Wilson &#8221;,&#8221;Davidson College&#8221;} {&#8220;Franklin D. Roosevelt&#8221;,&#8221;Harvard University&#8221;} {&#8220;John F. Kennedy&#8221;,&#8221;Harvard University&#8221;} {&#8220;John F. Kennedy&#8221;,&#8221;London School of Economics&#8221;} {&#8220;Edward Davey&#8221;,&#8221;Jesus College&#8221;} {&#8220;Edward Garnier&#8221;,&#8221;Jesus College&#8221;} {&#8220;Neal Blewett&#8221;,&#8221;Jesus College&#8221;} {&#8220;Joseph Clearihue&#8221;,&#8221;Jesus College&#8221;} {&#8220;Harold Wilson&#8221;,&#8221;Jesus College&#8221;} {&#8220;Vladimir Putin&#8221;,&#8221;Leningrad State University&#8221;} {&#8220;Al gore&#8221;,&#8221;Harvard College&#8221;} {&#8220;Hailemariam Desalegn Boshe&#8221;,&#8221;Addis Ababa University&#8221;} {&#8220;Bill Peduto&#8221;,&#8221;Pittsburgh University&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>06 04 2015</editDate><author>Prophet+Ontext (915)</author><curator> </curator><description>Describes the school where a US politician studied</description><freebaseID /><comment /></Relation><Relation id="371"><relationName>stadiumOrEventVenuedisclosesCompany</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>stadiumoreventvenue</domain><range>company</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfstadiumOrEventVenuedisclosesCompany</inverse><seedInstances>{"quicken loans arena","wews"} {"pirates cove","wews"} {"ohio theatre   playhouse square","wews"} {"browns stadium","wews"} {"air canada center&#8221;,"wews"} {"air canada center","westjet"} {"usana amphitheater","skywest"} {"energysolutions arena","skywest"} {&#8220;Lucas Oil Stadium&#8221;,&#8221;Lucas Oil&#8221;} {&#8220;CenturyLink Field&#8221;,&#8221;CenturyLink&#8221;} {&#8220;Emirates Stadium&#8221;,&#8221;Emirates&#8221;} {&#8220;Suncorp Stadium&#8221;,&#8221;Suncorp-Metway&#8221;} {&#8220;Aviva Stadium&#8221;,&#8221;Aviva&#8221;} {&#8220;Allianz Parque Arena&#8221;,&#8221;Allianz&#8221;} {&#8220;Emirates Durham International Cricket Ground&#8221;,&#8221;Emirates&#8221;}  {&#8220;Brit Oval&#8221;,&#8221;Brit Insurance&#8221;} {&#8220;Est&#225;dio Municipal de Braga&#8221;,&#8221;AXA&#8221;} {&#8220;Bootham Crescent&#8221;,&#8221;Nestle&#8221;} {&#8220;Priestfield Stadium&#8221;,&#8221;Kent Reliance Building Society&#8221;} {&#8220;Rebook Stadium&#8221;,&#8221;Burden Way&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>06 04 2015</editDate><author>Prophet+Ontext</author><curator /><description>Describes a stadium or event venue that discloses a company</description><freebaseID /><comment /></Relation><Relation id="372"><relationName>numberOfKilledInBombing</relationName><humanFormat>arg1 is the number of people {killed in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>nonNegInteger</domain><range>bombingEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>bombingKilled</inverse><seedInstances>{&#8220;3&#8221;,&#8221;Boston Marathon bombings&#8221;} {&#8220;145&#8221;,&#8221;2014 Peshawar School Massacre&#8221;}  {&#8220;18&#8221;,&#8221;2007 Zahedan bombings&#8221;} {&#8220;82&#8221;,&#8221;Aleppo University bombings&#8221;} {&#8220;364&#8221;,&#8221;Bombing of Plaza de Mayo&#8221;} {"Nine","1327689011"} {"12","1315999912"} {"two","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"21","Iraq: Militants set off own car bomb, 21 dead"} {"one","Death toll in Beirut blast rises to 7"} {"71","Nigerian bus station bombing kills 71 on edge of capital"} {"22","18 Shia pilgrims killed in Pakistan"} {"Three","Three killed in Lebanese suicide bombing"} {"13","12 killed and many injured in Pakistan blast"} {"four","Car bomb hits Shiite suburb of Beirut, killing 2"} </seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="373"><relationName>victimInBombing</relationName><humanFormat>arg1 was a {victim in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>bombingEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>bombingVictim</inverse><seedInstances>{&#8220;Krystle Marie Campbell&#8221;,&#8221;Boston Marathon bombings&#8221;} {&#8220;Lu Lingzi&#8221;,&#8221;Boston Marathon bombings&#8221;} {&#8220;Martin William Richard&#8221;,&#8221;Boston Marathon bombings&#8221;} {&#8220;Students&#8221;,&#8221;2014 Peshawar School Massacre&#8221;} {&#8220;Guards&#8221;,&#8221;2007 Zahedan bombings&#8221;} {&#8220;Students&#8221;,&#8221;Aleppo University bombings&#8221;} {&#8220;Civilians&#8221;,&#8221;Bombing of Plaza de Mayo&#8221;} {"12 people","1326222641"} {"four children","1326222641"} {"four people","1326222641"} {"three women","1326222641"} {"14 people","1315999912"} {"12 policeman","Bombing at Egypt police station kills 12"} {"13 people","Bombing at Egypt police station kills 12"} {"girl","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"two people","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"instructor","Iraq: Militants set off own car bomb, 21 dead"} {"militant","Iraq: Militants set off own car bomb, 21 dead"} {"70 people","70 killed in Nigeria bus blasts"} {"Mohammad Shaar","Death toll in Beirut blast rises to 7"} {"Mohammad al-Chaar","Death toll in Beirut blast rises to 7"} {"two people","Blast hits Bangkok"} {"15 people","16 killed in suicide bombing in Russia's south"} {"71 people","Nigerian bus station bombing kills 71 on edge of capital"} {"six people","Bombing wave hits Egypt amid fear of more violence"} {"20 people","Bomb kills 20 at Pakistan vegetable market"} {"31 people","Bombers kill 31 at Iraq campaign rally for Shiites | The Japan Times"} {"22 people","18 Shia pilgrims killed in Pakistan"} {"Shia pilgrims","18 Shia pilgrims killed in Pakistan"} {"troops","Three killed in Lebanese suicide bombing"} {"51 people","Twin blasts kill at least 35 in Nigeria"} {"six people","Deadly blast sets Egypt on edge ahead of revolt&amp;#x2019;s anniversary"} {"Akhtar Ali","12 killed and many injured in Pakistan blast"} {"Fazal Akbar","12 killed and many injured in Pakistan blast"} {"Hussain Ghulam","12 killed and many injured in Pakistan blast"} {"Sohrab","12 killed and many injured in Pakistan blast"} {"five people","Beirut bombing: Thurs. blast in Hezbollah-run area of Beirut claimed 5 lives"} {"four people","Car bomb hits Shiite suburb of Beirut, killing 2"} {"nine persons","Suicide blast near Imambargah kills nine, injures 50 in Peshawar"} {"51 people","90 killed in 2 attacks in northern Nigeria"} {"children","90 killed in 2 attacks in northern Nigeria"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="374"><relationName>numberOfInjuredInBombing</relationName><humanFormat>arg1 is the number of people {injured in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>nonNegInteger</domain><range>bombingEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>bombingInjured</inverse><seedInstances>{&#8220;264&#8221;,&#8221;Boston Marathon bombings&#8221;} {&#8220;114&#8221;,&#8221;2014 Peshawar School Massacre&#8221;} {&#8220;31&#8221;,&#8221;2007 Zahedan bombings&#8221;} {&#8220;160&#8221;,&#8221;Aleppo University bombings&#8221;} {&#8220;700&#8221;,&#8221;Bombing of Plaza de Mayo&#8221;} {"60","1327689011"} {"90","1326222641"} {"17","1315999912"} {"100","Bombing at Egypt police station kills 12"} {"28","Blasts Injure 28 protesters in Bangkok"} {"124","70 killed in Nigeria bus blasts"} {"dozens","Blast hits Bangkok"} {"three","Blast hits Bangkok"} {"four","Israel bombs Syria army targets after Golan attack"} {"124","Nigerian bus station bombing kills 71 on edge of capital"} {"70","Bomb kills 20 at Pakistan vegetable market"} {"24","18 Shia pilgrims killed in Pakistan"} {"four","Three killed in Lebanese suicide bombing"} </seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="375"><relationName>commentatorOfBombing</relationName><humanFormat>arg1 {commented about} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>bombingEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>bombingCommentedBy</inverse><seedInstances>{&#8220;Barack Obama&#8221;,&#8221;Boston Marathon bombings&#8221;} {&#8220;Chris Buckley&#8221;,&#8221;Boston Marathon bombings&#8221;} {&#8220;Petr Gandalovic&#8221;,&#8221;Boston Marathon bombings&#8221;} {&#8220;Ramzan Kadyrov&#8221;,&#8221;Boston Marathon bombings&#8221;} {&#8220;Michael Cohen&#8221;,&#8221;Boston Marathon bombings&#8221;} {"Assam Chief Minister Tarun Gogoi","1327689011"} {"Chief Minister Tarun Gogoi","1327689011"} {"Interior Ministry Chief Rehman Malik","1315999912"} {"Nasir Durrani","1315999912"} {"President Asif Ali Zardari","1315999912"} {"Interior Minister Mohammed Ibrahim","Bombing at Egypt police station kills 12"} {"Prime Minister Hazem el-Beblawi","Bombing at Egypt police station kills 12"} {"Sherif Shawki","Bombing at Egypt police station kills 12"} {"Nantiya Thientawatchai","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"Paradorn Pattanathuabutr","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"Sathit Wongnongtoey","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"Thanabhum Newanit","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"Abbas Idris","70 killed in Nigeria bus blasts"} {"Air Commodore Charles Otegbade","70 killed in Nigeria bus blasts"} {"Police spokesman Frank Mba","70 killed in Nigeria bus blasts"} {"Prime Minister Yingluck Shinawatra","Blast hits Bangkok"} {"Defence Minister Moshe Yaalon","Israel bombs Syria army targets after Golan attack"} {"Andrei Soldatov","16 killed in suicide bombing in Russia's south"} {"Vladimir Markin","16 killed in suicide bombing in Russia's south"} {"Kole Shettima","Nigerian bus station bombing kills 71 on edge of capital"} {"Health Saira Afzal Tarar","Bomb kills 20 at Pakistan vegetable market"} {"Javed Akram Qazi","Bomb kills 20 at Pakistan vegetable market"} {"Shahidullah Shahid","Bomb kills 20 at Pakistan vegetable market"} {"Vice Chancellor Prof Javed Akram","Bomb kills 20 at Pakistan vegetable market"} {"market worker","Bomb kills 20 at Pakistan vegetable market"} {"President Mamnoon Hussain","18 Shia pilgrims killed in Pakistan"} {"Prime Minister Nawaz Sharif","18 Shia pilgrims killed in Pakistan"} {"government official Shafqat Shahwani","18 Shia pilgrims killed in Pakistan"} {"Prime Minister Tammam Salam","Three killed in Lebanese suicide bombing"} {"Borno state police commissioner Lawal Tanko","Twin blasts kill at least 35 in Nigeria"} {"MQM chief Altaf Hussain","12 killed and many injured in Pakistan blast"} {"Lebanese Red Cross","Car bomb hits Shiite suburb of Beirut, killing 2"} {"Hassan Ali","90 killed in 2 attacks in northern Nigeria"} {"Red Cross official","90 killed in 2 attacks in northern Nigeria"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="376"><relationName>locationOfBombing</relationName><humanFormat>arg1 is the {location of} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>location</domain><range>bombingEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>bombingOccuredIn</inverse><seedInstances>{&#8220;Boston&#8221;,&#8221;Boston Marathon bombings&#8221;} {&#8220;Peshawar&#8221;,&#8221;2014 Peshawar School Massacre&#8221;} {&#8220;Zahedan&#8221;,&#8221;2007 Zahedan bombings&#8221;} {&#8220;Aleppo&#8221;,&#8221;Aleppo University bombings&#8221;} {&#8220;Buenos Aires&#8221;,&#8221;Bombing of Plaza de Mayo&#8221;} {"Assam","1327689011"} {"Sadr City","1326222641"} {"Sadr City slum","1326222641"} {"UM Al-maaleef market","1326222641"} {"Pakistan","1315999912"} {"Rawalpindi","1315999912"} {"Mansoura","Bombing at Egypt police station kills 12"} {"BANGKOK","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"Ratchaprasong intersection","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"Bangkok","Blasts Injure 28 protesters in Bangkok"} {"protest site","Blasts Injure 28 protesters in Bangkok"} {"BAGHDAD","Iraq: Militants set off own car bomb, 21 dead"} {"training camp","Iraq: Militants set off own car bomb, 21 dead"} {"Abuja","70 killed in Nigeria bus blasts"} {"bus station","70 killed in Nigeria bus blasts"} {"Beirut","Death toll in Beirut blast rises to 7"} {"Bangkok","Blast hits Bangkok"} {"Central World shopping mall","Blast hits Bangkok"} {"shopping district","Blast hits Bangkok"} {"Golan","Israel bombs Syria army targets after Golan attack"} {"Syria","Israel bombs Syria army targets after Golan attack"} {"army positions","Israel bombs Syria army targets after Golan attack"} {"Volgograd","16 killed in suicide bombing in Russia's south"} {"railway station","16 killed in suicide bombing in Russia's south"} {"ABUJA","Nigerian bus station bombing kills 71 on edge of capital"} {"bus station","Nigerian bus station bombing kills 71 on edge of capital"} {"Cairo","Bombing wave hits Egypt amid fear of more violence"} {"security compound","Bombing wave hits Egypt amid fear of more violence"} {"Islamabad","Bomb kills 20 at Pakistan vegetable market"} {"vegetable market","Bomb kills 20 at Pakistan vegetable market"} {"Baghdad","Bombers kill 31 at Iraq campaign rally for Shiites | The Japan Times"} {"Industrial Stadium","Bombers kill 31 at Iraq campaign rally for Shiites | The Japan Times"} {"Balochistan province","18 Shia pilgrims killed in Pakistan"} {"bus","18 Shia pilgrims killed in Pakistan"} {"BAALBEK","Three killed in Lebanese suicide bombing"} {"Maiduguri","Twin blasts kill at least 35 in Nigeria"} {"Cairo","Deadly blast sets Egypt on edge ahead of revolt&amp;#x2019;s anniversary"} {"KOHAT","12 killed and many injured in Pakistan blast"} {"Peshawar Chowk","12 killed and many injured in Pakistan blast"} {"Beirut","Beirut bombing: Thurs. blast in Hezbollah-run area of Beirut claimed 5 lives"} {"Beirut","Car bomb hits Shiite suburb of Beirut, killing 2"} {"Koocha Risaldar street","Suicide blast near Imambargah kills nine, injures 50 in Peshawar"} {"PESHAWAR","Suicide blast near Imambargah kills nine, injures 50 in Peshawar"} {"Qissa Khwani Bazaar","Suicide blast near Imambargah kills nine, injures 50 in Peshawar"} {"Maiduguri","90 killed in 2 attacks in northern Nigeria"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="377"><relationName>attackerInBombing</relationName><humanFormat>arg1 is the {attacker in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>agent</domain><range>bombingEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>bombingAttacker</inverse><seedInstances>{&#8220;Dzhokhar Tsarnaev&#8221;,&#8221;Boston Marathon bombings&#8221;} {&#8220;Tamerlan Tsarnaev&#8221;,&#8221;Boston Marathon bombings&#8221;} {&#8220;Tehrik-i-Taliban Pakistan&#8221;,&#8221;2014 Peshawar School Massacre&#8221;} {&#8220;Jundallah&#8221;,&#8221;2007 Zahedan bombings&#8221;} {&#8220;Unknown&#8221;,&#8221;Aleppo University bombings&#8221;} {"Ulfa","1327689011"} {"Ulfa terrorists","1327689011"} {"United Liberation Front","1327689011"} {"suicide bomber","1315999912"} {"Ansar Beit al-Maqdis","Bombing at Egypt police station kills 12"} {"Muslim Brotherhood","Bombing at Egypt police station kills 12"} {"ISIL","Iraq: Militants set off own car bomb, 21 dead"} {"al-Qaida breakaway group","Iraq: Militants set off own car bomb, 21 dead"} {"Boko Haram","70 killed in Nigeria bus blasts"} {"Gunmen","Blast hits Bangkok"} {"Israel","Israel bombs Syria army targets after Golan attack"} {"Israel Defense Forces","Israel bombs Syria army targets after Golan attack"} {"Chechen rebel leader Doku Umarov","16 killed in suicide bombing in Russia's south"} {"Islamist insurgency","16 killed in suicide bombing in Russia's south"} {"female suicide bomber","16 killed in suicide bombing in Russia's south"} {"suicide bomber","16 killed in suicide bombing in Russia's south"} {"Boko Haram","Nigerian bus station bombing kills 71 on edge of capital"} {"Boko Haram militants","Nigerian bus station bombing kills 71 on edge of capital"} {"Levant","Bombers kill 31 at Iraq campaign rally for Shiites | The Japan Times"} {"Baalbek Brigade","Three killed in Lebanese suicide bombing"} {"suicide bomber","Three killed in Lebanese suicide bombing"} {"Boko Haram","Twin blasts kill at least 35 in Nigeria"} {"Ansar Beit al-Maqdis","Deadly blast sets Egypt on edge ahead of revolt&amp;#x2019;s anniversary"} {"Al-Nusra Front","Car bomb hits Shiite suburb of Beirut, killing 2"} {"TTP","Suicide blast near Imambargah kills nine, injures 50 in Peshawar"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="378"><relationName>damagedInBombing</relationName><humanFormat>arg1 was {dameged in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>geolocatablething</domain><range>bombingEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>bombingDamaged</inverse><seedInstances>{&#8220;sidewalk&#8221;,&#8221;Boston Marathon bombings&#8221;} {&#8220;The army public school&#8221;,&#8221;2014 Peshawar School Massacre&#8221;} {&#8220;Aleppo University&#8221;,&#8221;Aleppo University bombings&#8221;} {&#8220;Plaza de Mayo&#8221;,&#8221;Bombing of Plaza de Mayo&#8221;} {"cars","1327689011"} {"houses","1327689011"} {"motorcycles","1327689011"} {"buildings","1326222641"} {"buildings","1315999912"} {"restaurant","1315999912"} {"vehicles","1315999912"} {"bank","Bombing at Egypt police station kills 12"} {"buildings","Bombing at Egypt police station kills 12"} {"police vehicles","Bombing at Egypt police station kills 12"} {"theater","Bombing at Egypt police station kills 12"} {"16 luxury coaches","70 killed in Nigeria bus blasts"} {"24 minibuses","70 killed in Nigeria bus blasts"} {"vehicles","70 killed in Nigeria bus blasts"} {"buildings","Twin blasts kill at least 35 in Nigeria"} {"buildings","90 killed in 2 attacks in northern Nigeria"} {"cars","1327689011"} {"houses","1327689011"} {"motorcycles","1327689011"} {"buildings","1326222641"} {"buildings","1315999912"} {"restaurant","1315999912"} {"vehicles","1315999912"} {"bank","Bombing at Egypt police station kills 12"} {"buildings","Bombing at Egypt police station kills 12"} {"police vehicles","Bombing at Egypt police station kills 12"} {"theater","Bombing at Egypt police station kills 12"} {"16 luxury coaches","70 killed in Nigeria bus blasts"} {"24 minibuses","70 killed in Nigeria bus blasts"} {"vehicles","70 killed in Nigeria bus blasts"} {"buildings","Twin blasts kill at least 35 in Nigeria"} {"buildings","90 killed in 2 attacks in northern Nigeria"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="379"><relationName>bombingHasWitness</relationName><humanFormat>arg2 was a {witness in} the event arg1 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>bombingEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>bombingWitness</inverse><seedInstances>{&#8220;Jeff Bauman&#8221;,&#8221;Boston Marathon bombings&#8221;} {&#8220;School Staff&#8221;,&#8221;2014 Peshawar School Massacre&#8221;} {&#8220;Islamic Revolutionary Guards Corps&#8221;,&#8221;2007 Zahedan bombings&#8221;} {&#8220;Students&#8221;,&#8221;Aleppo University bombings&#8221;} {&#8220;Civilians&#8221;,&#8221;Bombing of Plaza de Mayo&#8221;} {"Abdul-Jabar Saad","1326222641"} {"Eyewitness Mimi Daniels","70 killed in Nigeria bus blasts"} {"Mimi Daniels","Nigerian bus station bombing kills 71 on edge of capital"} {"two Associated Press reporters","Bombers kill 31 at Iraq campaign rally for Shiites | The Japan Times"} {"Ali Oleik","Beirut bombing: Thurs. blast in Hezbollah-run area of Beirut claimed 5 lives"} {"Associated Press reporter","90 killed in 2 attacks in northern Nigeria"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="380"><relationName>targetInBombing</relationName><humanFormat>arg1 was the {target in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>everyPromotedThing</domain><range>bombingEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>bombingtarget</inverse><seedInstances>{&#8220;Boston Marathon&#8221;,&#8221;Boston Marathon bombings&#8221;} {&#8220;Army Public School&#8221;,&#8221;2014 Peshawar School Massacre&#8221;} {&#8220;Islamic Revolutionary Guards Corps&#8221;,&#8221;2007 Zahedan bombings&#8221;} {&#8220;Plaza de Mayo&#8221;,&#8221;Bombing of Plaza de Mayo&#8221;} {"Interior Ministry official","1326222641"} {"police convoy","1326222641"} {"security forces","Bombing at Egypt police station kills 12"} {"protesters","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"police","Bombing wave hits Egypt amid fear of more violence"} {"Shiite militias","Bombers kill 31 at Iraq campaign rally for Shiites | The Japan Times"} {"army checkpoint","Three killed in Lebanese suicide bombing"} {"Hezbollah group","Car bomb hits Shiite suburb of Beirut, killing 2"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="381"><relationName>injuredInBombing</relationName><humanFormat>arg1 was {injured in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>bombingEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>bombingInjuried</inverse><seedInstances>{&#8220;Jeff Bauman&#8221;,&#8221;Boston Marathon bombings&#8221;} {&#8220;Students&#8221;,&#8221;2014 Peshawar School Massacre&#8221;} {&#8220;Students&#8221;,&#8221;2014 Peshawar School Massacre&#8221;} {&#8220;Guards&#8221;,&#8221;2007 Zahedan bombings&#8221;} {&#8220;Civilians&#8221;,&#8221;Bombing of Plaza de Mayo&#8221;} {"Salim Mutar","1326222641"} {"101 people","Bombing at Egypt police station kills 12"} {"three dozen people","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"protesters","Blasts Injure 28 protesters in Bangkok"} {"children","Blast hits Bangkok"} {"soldiers","Israel bombs Syria army targets after Golan attack"} {"70 people","Bomb kills 20 at Pakistan vegetable market"} {"14 others","12 killed and many injured in Pakistan blast"} {"35 people","Car bomb hits Shiite suburb of Beirut, killing 2"} {"50 others","Suicide blast near Imambargah kills nine, injures 50 in Peshawar"} {"five children","Suicide blast near Imambargah kills nine, injures 50 in Peshawar"} {"nine women","Suicide blast near Imambargah kills nine, injures 50 in Peshawar"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="382"><relationName>explosivesInBombing</relationName><humanFormat>arg1 was the explosive type {used in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>chemical</domain><range>bombingEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>bombingCausedByExplosive</inverse><seedInstances>{&#8220;low explosive&#8221;,&#8221;Boston Marathon bombings&#8221;} {&#8220;suicidal bomber&#8221;,&#8221;2014 Peshawar School Massacre&#8221;} {&#8220;Missiles&#8221;,&#8221;Aleppo University bombings&#8221;} {&#8220;nuke&#8221;,&#8221;Bombing of Plaza de Mayo&#8221;} {"IED","1327689011"} {"bomb","1327689011"} {"grenade","1327689011"} {"car bombs","1326222641"} {"grenade","Girl Killed, Dozens Hurt In Attack On Thai Protest"} {"ball bearings","12 killed and many injured in Pakistan blast"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="383"><relationName>timeOfBombing</relationName><humanFormat>arg1 is the {time of} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>time</domain><range>bombingEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>bombingEventTime</inverse><seedInstances>{&#8220;2:49 pm&#8221;,&#8221;Boston Marathon bombings&#8221;} {&#8220;10:30 pm&#8221;,&#8221;2014 Peshawar School Massacre&#8221;} {&#8220;6:30 pm&#8221;,&#8221;2007 Zahedan bombings&#8221;} {&#8220;12:40 pm&#8221;,&#8221;Bombing of Plaza de Mayo&#8221;} {"1:10 a.m.","Bombing at Egypt police station kills 12"} {"2014","70 killed in Nigeria bus blasts"} {"6:45","70 killed in Nigeria bus blasts"} {"April 14","70 killed in Nigeria bus blasts"} {"8:00 pm","Suicide blast near Imambargah kills nine, injures 50 in Peshawar"} </seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="384"><relationName>numberOfArrestedInBombing</relationName><humanFormat>arg1 is the number of {arrested in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>nonNegInteger</domain><range>bombingEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>bombingArrested</inverse><seedInstances>{"24","Iraq: Militants set off own car bomb, 21 dead"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="385"><relationName>securityInBombing</relationName><humanFormat>arg1 was responsible for {security in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>agent</domain><range>bombingEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>bombingSecurity</inverse><seedInstances>{&#8220;Boston Police&#8221;,&#8221;Boston Marathon bombings&#8221;} {&#8220;Afghan security forces&#8221;,&#8221;2014 Peshawar school massacre&#8221;} {&#8220;Islamic Revolutionary Guards Corps&#8221;,&#8221;2007 Zahedan bombings&#8221;} {"security forces","Iraq: Militants set off own car bomb, 21 dead"} {"soldiers","16 killed in suicide bombing in Russia's south"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="386"><relationName>locationOfEarthquake</relationName><humanFormat>arg1 is the {location of} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>location</domain><range>earthquakeEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>earthquakeOcurredIn</inverse><seedInstances>{&#8220;New Zealand&#8221;,&#8221;2011 Christchurch earthquake&#8221;} {&#8220;Japan&#8221;,&#8221;2011 T&#333;hoku earthquake and tsunami&#8221;} {&#8220;Nicaragua&#8221;,&#8221;2000 Nicaragua earthquake&#8221;} {&#8220;San Francisco&#8221;,&#8221;1906 San Francisco earthquake&#8221;} {&#8220;Africa&#8221;,&#8221;2008 Lake Kivu earthquake&#8221;} {"Japan","Violent Earthquake Hits Japan, Disrupts Toyota, Honda, Nissan Production"} {"Xinjiang","Quake rocks China, no casualities reported"} {"Philippines","Philippines rocked by 20 earthquakes in two days"} {"Taiwan","Magnitude-5.4 earthquake hits North Taiwan"} {"Turkey","Earthquake strikes south of Turkey"} {"Chile","Strong quake jolts Chile's North, no major damage"} {"Japan","Tokyo 5.5 Magnitude Earthquake Shakes Buildings, No Injuries Reported"} {"HEALDSBURG","4.5 Magnitude Quake Rattles Sonoma County"} {"Guerrero","Strong quake shakes Mexico, breaks bridge"} {"Sumatra island","6.2-magnitude earthquake strikes off Indonesia"} {"TOKYO","Big earthquake shakes Tokyo, 17 injured"} {"Nawabshah","Magnitude 5 earthquake rattles southern Pakistan, killing 1 person, injuring 70"} {"Guerrero state","Strong quake shakes Mexico City"} {"Guerrero state","Strong earthquake shakes Mexico's Pacific coast"} {"Nawabshah","One dead, 30 injured in southern Pakistan quakes"} {"Bangkok","Strong earthquake shakes northern Thailand"} {"Chiang Rai","Quake causes light damage in Thailand, Myanmar"} {"Myanmar","Quake causes light damage in Thailand, Myanmar"} {"Phan district","Quake causes light damage in Thailand, Myanmar"} {"Thailand","Quake causes light damage in Thailand, Myanmar"} {"Myanmar","Strong 6.0-magnitude earthquake rattles northern Thailand"} {"Thailand","Strong 6.0-magnitude earthquake rattles northern Thailand"} {"Guerrero state","Strong earthquake shakes Mexico City"} {"TOKYO","Big quake rattles Tokyo, 17 injured"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="387"><relationName>timeOfEarthquake</relationName><humanFormat>arg1 is the {time of} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>time</domain><range>earthquakeEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>earthquakeEventTime</inverse><seedInstances>{&#8220;12:51 pm&#8221;,&#8221;2011 Christchurch earthquake&#8221;} {&#8220;2:46 pm&#8221;,&#8221;2011 T&#333;hoku earthquake and tsunami&#8221;} {&#8220;7:30 pm&#8221;,&#8221;2000 Nicaragua earthquake&#8221;} {&#8220;7:34 am&#8221;,&#8221;2008 Lake Kivu earthquake&#8221;} {"7.07am","Two earthquakes hit the East Midlands"} {"12.24","4.5 Magnitude Quake Rattles Sonoma County"} {"5:18","Big earthquake shakes Tokyo, 17 injured"} {"3:51am","One dead, 30 injured in southern Pakistan quakes"} {"6:08 pm","Strong earthquake shakes northern Thailand"} </seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="388"><relationName>sourceOfEarthquake</relationName><humanFormat>arg1 is the {source of} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>everypromotedthing</domain><range>earthquakeEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>earthquakeHadSource</inverse><seedInstances>{"British Geological Survey","Two earthquakes hit the East Midlands"} {"US Geological Survey","Quake rocks China, no casualities reported"} {"Central Weather Bureau","Magnitude-5.4 earthquake hits North Taiwan"} {"Pacific Tsunami Warning Centre","Strong quake jolts Chile's North, no major damage"} {"U.S. Geological Survey","4.5 Magnitude Quake Rattles Sonoma County"} {"Pacific Tsunami Warning Center","Strong quake shakes Mexico, breaks bridge"} {"U.S. Geological Survey","Strong quake shakes Mexico City"} {"U.S. Geological Survey","Strong earthquake shakes Mexico's Pacific coast"} {"US Geological Survey","One dead, 30 injured in southern Pakistan quakes"} {"US Geological Survey","Strong earthquake shakes northern Thailand"} {"U.S. Geological Survey","Quake causes light damage in Thailand, Myanmar"} {"U.S. Geological Survey","Strong 6.0-magnitude earthquake rattles northern Thailand"} {"USGS","Strong earthquake shakes Mexico City"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="389"><relationName>epicenterOfEarthquake</relationName><humanFormat>arg1 is the {epicenter of} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>geolocatablething</domain><range>earthquakeEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>earthquakeHadEpicenter</inverse><seedInstances>{&#8220;43.5834&#176;S 172.7012&#176;E&#8221;,&#8221;2011 Christchurch earthquake&#8221;} {&#8220;38.322&#176;N 142.369&#176;E&#8221;,&#8221;2011 T&#333;hoku earthquake and tsunami&#8221;} {&#8220;11.884&#176;N 85.988&#176;W&#8221;,&#8221;2000 Nicaragua earthquake&#8221;} {&#8220;37.75&#176;N 122.55&#176;W&#8221;,&#8221;1906 San Francisco earthquake&#8221;} {&#8220;2.314&#176;S 28.896&#176;E&#8221;,&#8221;2008 Lake Kivu earthquake&#8221;} {"Oakham","Two earthquakes hit the East Midlands"} {"Yutian county","Quake rocks China, no casualities reported"} {"Avsallar","Earthquake strikes south of Turkey"} {"Mediterranean Sea","Earthquake strikes south of Turkey"} {"Iquique","Strong quake jolts Chile's North, no major damage"} {"Geysers","4.5 Magnitude Quake Rattles Sonoma County"} {"Guerrero state","Strong quake shakes Mexico, breaks bridge"} {"BANDA ACEH","6.2-magnitude earthquake strikes off Indonesia"} {"Izu Oshima island southwest","Big earthquake shakes Tokyo, 17 injured"} {"Tecpan de Galeana","Strong quake shakes Mexico City"} {"Tecpan de Galeana","Strong earthquake shakes Mexico's Pacific coast"} {"Taj Colony neighbourhood","One dead, 30 injured in southern Pakistan quakes"} {"Chiang Rai","Strong earthquake shakes northern Thailand"} {"Mae Lao","Quake causes light damage in Thailand, Myanmar"} {"Chiang Rai","Strong 6.0-magnitude earthquake rattles northern Thailand"} {"Tecpan de Galeana","Strong earthquake shakes Mexico City"} {"Izu Oshima island southwest","Big quake rattles Tokyo, 17 injured"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="390"><relationName>damagedInEarthquake</relationName><humanFormat>arg1 was {damaged in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>geolocatablething</domain><range>earthquakeEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>earthquakeDamaged</inverse><seedInstances>{&#8220;New Zealand&#8221;,&#8221;2011 Christchurch earthquake&#8221;} {&#8220;Tohoku&#8221;,&#8221;2011 T&#333;hoku earthquake and tsunami&#8221;} {&#8220;Houses&#8221;,&#8221;2000 Nicaragua earthquake&#8221;} {&#8220;San Francisco&#8221;,&#8221;1906 San Francisco earthquake&#8221;} {&#8220;Rwanda&#8221;,&#8221;2008 Lake Kivu earthquake&#8221;} {&#8220;Burundi&#8221;,&#8221;2008 Lake Kivu earthquake&#8221;} {&#8220;Dr Congo&#8221;,&#8221;2008 Lake Kivu earthquake&#8221;} {&#8220;Kenya&#8221;,&#8221;2008 Lake Kivu earthquake&#8221;} {"bridge","Strong earthquake shakes Mexico City"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="391"><relationName>magnitudeOfEarthquaque</relationName><humanFormat>arg1 is the {magnitude of} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>everypromotedthing</domain><range>earthquakeEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>earthquakeHadMagnitude</inverse><seedInstances>{&#8220;6.3 M&#8221;,&#8221;2011 Christchurch earthquake&#8221;} {&#8220;9.0 M&#8221;,&#8221;2011 T&#333;hoku earthquake and tsunami&#8221;} {&#8220;5.2 M&#8221;,&#8221;2000 Nicaragua earthquake&#8221;} {&#8220;7.8 M&#8221;,&#8221;1906 San Francisco earthquake&#8221;} {&#8220;5.9 M&#8221;,&#8221;2008 Lake Kivu earthquake&#8221;} {"3.2","Two earthquakes hit the East Midlands"} {"6.9","Quake rocks China, no casualities reported"} {"7.0,","Strong quake jolts Chile's North, no major damage"} {"4.5","4.5 Magnitude Quake Rattles Sonoma County"} {"6.8","Strong quake shakes Mexico, breaks bridge"} {"6.4","6.2-magnitude earthquake strikes off Indonesia"} {"5.8","Big earthquake shakes Tokyo, 17 injured"} {"4.3","Magnitude 5 earthquake rattles southern Pakistan, killing 1 person, injuring 70"} {"4.7","One dead, 30 injured in southern Pakistan quakes"} {"6.0","Quake causes light damage in Thailand, Myanmar"} {"6.3","Strong earthquake shakes Mexico City"} {"5.8","Big quake rattles Tokyo, 17 injured"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="392"><relationName>commentatorOfEarthquake</relationName><humanFormat>arg1 {commented about} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>earthquakeEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>earthquakeComentedBy</inverse><seedInstances>{"Xinjiang earthquake administration","Quake rocks China, no casualities reported"} {"ONEMI emergency office","Strong quake jolts Chile's North, no major damage"} {"U.S. Geological Survey","Strong quake jolts Chile's North, no major damage"} {"Mohammed Hashim","Magnitude 5 earthquake rattles southern Pakistan, killing 1 person, injuring 70"} {"meteorologist Toseef Ahmed","Magnitude 5 earthquake rattles southern Pakistan, killing 1 person, injuring 70"} {"Carmen Lopez","Strong quake shakes Mexico City"} {"businesswoman Carmen Lopez","Strong earthquake shakes Mexico's Pacific coast"} {"Ghulam Mustafa","One dead, 30 injured in southern Pakistan quakes"} {"Mohammad Hashim","One dead, 30 injured in southern Pakistan quakes"} {"Japan Meteorological Agency","Big quake rattles Tokyo, 17 injured"} {"US Geological Survey","Big quake rattles Tokyo, 17 injured"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="393"><relationName>InjuredInEarthquake</relationName><humanFormat>arg1 was {injured in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>victim</domain><range>earthquakeEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>earthquakeInjured</inverse><seedInstances>{&#8220;Civilians&#8221;,&#8221;2011 Christchurch earthquake&#8221;} {&#8220;Civilians&#8221;,&#8221;2011 T&#333;hoku earthquake and tsunami&#8221;} {&#8220;Civilians&#8221;,&#8221;2000 Nicaragua earthquake&#8221;} {&#8220;Civilians&#8221;,&#8221;1906 San Francisco earthquake&#8221;} {&#8220;Civilians&#8221;,&#8221;2008 Lake Kivu earthquake&#8221;} {"17 people","Big earthquake shakes Tokyo, 17 injured"} {"17 people","Big quake rattles Tokyo, 17 injured"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="394"><relationName>victimInEarthquake</relationName><humanFormat>arg1 was a {victim in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>victim</domain><range>earthquakeEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>earthquakeHadVictim</inverse><seedInstances>{&#8220;Civilians&#8221;,&#8221;2011 Christchurch earthquake&#8221;} {&#8220;Civilians&#8221;,&#8221;2011 T&#333;hoku earthquake and tsunami&#8221;} {&#8220;Civilians&#8221;,&#8221;2000 Nicaragua earthquake&#8221;} {&#8220;Civilians&#8221;,&#8221;1906 San Francisco earthquake&#8221;} {&#8220;Civilians&#8221;,&#8221;2008 Lake Kivu earthquake&#8221;} {"one person","Magnitude 5 earthquake rattles southern Pakistan, killing 1 person, injuring 70"} {"two persons","One dead, 30 injured in southern Pakistan quakes"} {"woman","Strong earthquake shakes northern Thailand"}  {"17 people","Big earthquake shakes Tokyo, 17 injured"} {"17 people","Big quake rattles Tokyo, 17 injured"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="395"><relationName>numberOfInjuredInEarthquake</relationName><humanFormat>arg1 is the number of people {injured in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>nonNegInteger</domain><range>earthquakeEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>earthquakeInjuredNumber</inverse><seedInstances>{&#8220;2000+&#8221;,&#8221;2011 Christchurch earthquake&#8221;} {&#8220;6152&#8221;,&#8221;2011 T&#333;hoku earthquake and tsunami&#8221;} {&#8220;42&#8221;,&#8221;2000 Nicaragua earthquake&#8221;} {&#8220;349&#8221;,&#8221;2008 Lake Kivu earthquake&#8221;} {"30","One dead, 30 injured in southern Pakistan quakes"} </seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="396"><relationName>numberOfCasualtiesInEarthquake</relationName><humanFormat>arg1 is the number of people that {died in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>nonNegInteger</domain><range>earthquakeEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>earthquakeCasualtiesNumber</inverse><seedInstances>{&#8220;185&#8221;,&#8221;2011 Christchurch earthquake&#8221;} {&#8220;15981&#8221;,&#8221;2011 T&#333;hoku earthquake and tsunami&#8221;} {&#8220;7&#8221;,&#8221;2000 Nicaragua earthquake&#8221;} {&#8220;3000+&#8221;,&#8221;1906 San Francisco earthquake&#8221;} {&#8220;44&#8221;,&#8221;2008 Lake Kivu earthquake&#8221;}</seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="397"><relationName>productLauchCompetingCompany</relationName><humanFormat>arg2 {competes with the company} responsible for arg1 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>productLaunchEvent</domain><range>company</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>companyCompetingWithProduuctLaunch</inverse><seedInstances>{&#8220;Rolls Royce Launches Ghost Series II&#8221;,&#8221;Jaguar&#8221;} {&#8220;Launch of xbox360&#8221;,&#8221;sony&#8221;} {&#8220;Launch of ps3&#8221;,&#8221;microsoft&#8221;} {&#8220;Launch of galaxy s5&#8221;,&#8221;apple&#8221;} {&#8220;Launch of iphone6&#8221;,&#8221;samsung&#8221;} {"Samsung Galaxy S5","Apple"} {"Samsung Galaxy Gear","Apple"} {"Samsung Galaxy Gear","Huawei"} {"Samsung Galaxy Gear","Pebble"} {"Samsung Galaxy Gear","Sony"} {"Nokia Lumia 525 vs. Lumia 720 Specs and Price Comparison in Australia","Android"} {"Nokia Lumia 525 vs. Lumia 720 Specs and Price Comparison in Australia","iOS"} {"First Look: HTC One (M8)","Samsung"} {"Hacker To Release A Dual-Boot Tool For iOS 6, iOS 7","Apple"} {"Microsoft Surface Pro 3 to launch alongside Surface Mini?","Apple"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="398"><relationName>productLauchVenue</relationName><humanFormat>arg1 was {in} arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>productLaunchEvent</domain><range>location</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>venueOfProductLaunch</inverse><seedInstances>{&#8220;Rolls Royce Launches Ghost Series II&#8221;,&#8221;South India&#8221;} {&#8220;Launch of xbox360&#8221;,&#8221;usa&#8221;} {&#8220;Launch of ps3&#8221;,&#8221;Japan&#8221;} {&#8220;Launch of galaxy s5&#8221;,&#8221;usa&#8221;} {&#8220;Launch of iphone6&#8221;,&#8221;usa&#8221;} {"Samsung Galaxy S5","Mobile World Congress"} {"Samsung Galaxy Gear","Barcelona"} {"Samsung Galaxy Gear","Mobile World Congress"} {"iPhone 5C","Apple Online Store"} {"HTC reveals HTC One M8 Google Play Edition, by mistake","Online"} {"Microsoft confirms Office for Apple iPad","iTunes App Store"} {"Samsung introduces free streaming radio service","Google Play"} {"Nvidia Unveils Mobile Chip 'Faster' Than PS3: 5 Fast Facts About The Tegra K1","CES 2014"} {"Nvidia Unveils Mobile Chip 'Faster' Than PS3: 5 Fast Facts About The Tegra K1","Las Vegas"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="399"><relationName>productLauchPredecessor</relationName><humanFormat>arg2 was {the predecessor} of the product launched in arg1 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>productLaunchEvent</domain><range>product</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>predecessorOfProductLaunch</inverse><seedInstances>{&#8220;Rolls Royce Lauches Ghost Series II&#8221;,&#8221;Rolls Royce Ghost Series I&#8221;} {&#8220;Launch of  xbox360&#8221;,&#8221;xbox&#8221;} {&#8220;Launch of ps3&#8221;,&#8221;ps2&#8221;} {&#8220;Launch of galaxy s5&#8221;,&#8221;galaxy s4&#8221;} {&#8220;Launch of iphone6&#8221;,&#8221;iphone5s&#8221;} {"Samsung Galaxy S5","Galaxy S4"} {"Samsung Galaxy Gear","Galaxy Gear smartwatch"} {"HTC reveals HTC One M8 Google Play Edition, by mistake","HTC One"} {"First Look: HTC One (M8)","M7"} {"Nvidia Unveils Mobile Chip 'Faster' Than PS3: 5 Fast Facts About The Tegra K1","Tegra 4"} {"Moto E price, specs, release date, features: &#163;89 smartphone set to 'end feature phones'","Moto G"} {"HTC announces One Mini 2 with 13 megapixel camera and looks of the M8","One Mini"} {"LG 2014 Smart TVs: Everything You Need To Know","1080p"} {"LG 2014 Smart TVs: Everything You Need To Know","720p"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="400"><relationName>productBeingLauched</relationName><humanFormat>arg2 was the product {launched in} arg1 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>productLaunchEvent</domain><range>product</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>productOfProductLaunch</inverse><seedInstances>{&#8220;Rolls Royce Launches Ghost Series II&#8221;,&#8221;Rolls Royce Ghost Series II&#8221;} {&#8220;Launch of  xbox360&#8221;,&#8221;xbox360&#8221;} {&#8220;Launch of ps3&#8221;,&#8221;ps3&#8221;} {&#8220;Launch of galaxy s5&#8221;,&#8221;galaxy s5&#8221;} {&#8220;Launch of iphone6&#8221;,&#8221;iphone6&#8221;} {"Samsung Galaxy S5","Galaxy S5"} {"Samsung Galaxy Gear","Gear 2"} {"Samsung Galaxy Gear","Gear 2 Neo"} {"Samsung Galaxy Gear","Gear Fit"} {"iPhone 5C","iPhone 5C"} {"Honda NM4 Concept Motorcycle","NM4 Vultus"} {"Nokia Lumia 525 vs. Lumia 720 Specs and Price Comparison in Australia","Lumia 1520"} {"HTC reveals HTC One M8 Google Play Edition, by mistake","M8"} {"HTC reveals HTC One M8 Google Play Edition, by mistake","New HTC One"} {"First Look: HTC One (M8)","HTC One"} {"First Look: HTC One (M8)","HTC One M8"} {"Microsoft confirms Office for Apple iPad","Excel"} {"Microsoft confirms Office for Apple iPad","Office"} {"Microsoft confirms Office for Apple iPad","PowerPoint"} {"Microsoft confirms Office for Apple iPad","Word"} {"BlackBerry Z30 Smartphone Now Available On ShopBlackBerry.com in the U.S.","BlackBerry Z30"} {"Samsung introduces free streaming radio service","Internet radio service"} {"Samsung introduces free streaming radio service","Milk Music"} {"Xiaomi's Redmi Note Will Expand Beyond China, Will Be Priced Starting At $129","Xiaomi Redmi Note"} {"Nvidia Unveils Mobile Chip 'Faster' Than PS3: 5 Fast Facts About The Tegra K1","Tegra"} {"Nvidia Unveils Mobile Chip 'Faster' Than PS3: 5 Fast Facts About The Tegra K1","Tegra K1"} {"Hacker To Release A Dual-Boot Tool For iOS 6, iOS 7","battery life"} {"Microsoft to offer Xbox One without Kinect","Xbox One"} {"LG G3 Fully Detailed Ahead of Launch","LG G3"} {"Microsoft Surface Pro 3 to launch alongside Surface Mini?","Surface Pro 3"} {"Huawei Ascend P7 hands-on review: Latest Android flagship is sleek and affordable","Ascend P7"} {"Huawei Ascend P7 hands-on review: Latest Android flagship is sleek and affordable","Huawei Ascend P7"} {"Moto E price, specs, release date, features: &#163;89 smartphone set to 'end feature phones'","Moto E"} {"HTC announces One Mini 2 with 13 megapixel camera and looks of the M8","HTC One Mini 2"} {"HTC announces One Mini 2 with 13 megapixel camera and looks of the M8","One Mini 2"} {"Motorola Moto E Launched in India Carrying a Price Tag of Rs. 6,999 | NDTV Gadgets","Moto E"} {"LG 2014 Smart TVs: Everything You Need To Know","4K"} {"Galaxy S5 Zoom To Be Unveiled On April 29th As Samsung Galaxy K","Galaxy S5 Zoom"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="401"><relationName>launchingProductCompany</relationName><humanFormat>arg2 was {responsible for} arg1 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>productLaunchEvent</domain><range>company</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>companyOfProductLaunch</inverse><seedInstances>{&#8220;Rolls Royce Launches Ghost Series II&#8221;,&#8221;Rolls Royce&#8221;} {&#8220;Launch of xbox360&#8221;,&#8221;microsoft&#8221;} {&#8220;Launch of ps3&#8221;,&#8221;sony&#8221;} {&#8220;Launch of galaxy s5&#8221;,&#8221;samsung&#8221;} {&#8220;Launch of iphone6&#8221;,&#8221;apple&#8221;} {"Samsung Galaxy S5","Samsung"} {"Samsung Galaxy Gear","Samsung"} {"iPhone 5C","Apple"} {"Honda NM4 Concept Motorcycle","Honda"} {"Nokia Lumia 525 vs. Lumia 720 Specs and Price Comparison in Australia","Nokia"} {"BlackBerry to release 3 new high-end devices targeted toward 'keyboard aficionados'","BlackBerry"} {"Microsoft confirms Office for Apple iPad","Microsoft"} {"BlackBerry Z30 Smartphone Now Available On ShopBlackBerry.com in the U.S.","BlackBerry"} {"Samsung introduces free streaming radio service","Samsung"} {"Xiaomi's Redmi Note Will Expand Beyond China, Will Be Priced Starting At $129","Xiaomi"} {"Nvidia Unveils Mobile Chip 'Faster' Than PS3: 5 Fast Facts About The Tegra K1","Nvidia"} {"Hacker To Release A Dual-Boot Tool For iOS 6, iOS 7","hacker"} {"Microsoft to offer Xbox One without Kinect","Microsoft"} {"Microsoft Surface Pro 3 to launch alongside Surface Mini?","Microsoft"} {"Huawei Ascend P7 hands-on review: Latest Android flagship is sleek and affordable","Huawei"} {"Moto E price, specs, release date, features: &#163;89 smartphone set to 'end feature phones'","Motorola"} {"HTC announces One Mini 2 with 13 megapixel camera and looks of the M8","HTC"} {"Motorola Moto E Launched in India Carrying a Price Tag of Rs. 6,999 | NDTV Gadgets","Motorola"} {"LG 2014 Smart TVs: Everything You Need To Know","LG"} {"Galaxy S5 Zoom To Be Unveiled On April 29th As Samsung Galaxy K","Samsung"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="402"><relationName>launchingProductType</relationName><humanFormat>the product launched in arg1 {is a} arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>productLaunchEvent</domain><range>product</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>productTypeOfProductLaunch</inverse><seedInstances>{&#8220;Rolls Royce Launches Ghost Series II&#8221;,&#8221;super luxury car&#8221;} {&#8220;Launch of xbox360&#8221;,&#8221;videogamesystem&#8221;} {&#8220;Launch of ps3&#8221;,&#8221;videogamesystem&#8221;} {&#8220;Launch of galaxy s5&#8221;,&#8221;smartphone&#8221;} {&#8220;Launch of iphone6&#8221;,&#8221;smartphone&#8221;} {"Samsung Galaxy S5","Android phone"} {"Samsung Galaxy Gear","smartwatches"} {"iPhone 5C","phone"} {"Nokia Lumia 525 vs. Lumia 720 Specs and Price Comparison in Australia","phone"} {"HTC reveals HTC One M8 Google Play Edition, by mistake","phone"} {"First Look: HTC One (M8)","smartphone"} {"Microsoft confirms Office for Apple iPad","productivity apps"} {"Xiaomi's Redmi Note Will Expand Beyond China, Will Be Priced Starting At $129","phablet"} {"Nvidia Unveils Mobile Chip 'Faster' Than PS3: 5 Fast Facts About The Tegra K1","chip"} {"Hacker To Release A Dual-Boot Tool For iOS 6, iOS 7","battery"} {"LG G3 Fully Detailed Ahead of Launch","flagship smartphone"} {"Huawei Ascend P7 hands-on review: Latest Android flagship is sleek and affordable","smartphone"} {"Moto E price, specs, release date, features: &#163;89 smartphone set to 'end feature phones'","smartphone"} {"Motorola Moto E Launched in India Carrying a Price Tag of Rs. 6,999 | NDTV Gadgets","smartphone"} {"LG 2014 Smart TVs: Everything You Need To Know","TV"} {"Galaxy S5 Zoom To Be Unveiled On April 29th As Samsung Galaxy K","zoom"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="403"><relationName>prodctLaunchingProductCompetitor</relationName><humanFormat>arg2 is a {competitor of the product launched in} arg1 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>productLaunchEvent</domain><range>product</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>competitorOfProductLaunch</inverse><seedInstances>{&#8220;Rolls Royce Launches Ghost Series II&#8221;,&#8221;Bentley Continental Flying Spur&#8221;} {&#8220;Launch of xbox360&#8221;,&#8221;ps3&#8221;} {&#8220;Launch of ps3&#8221;,&#8221;xbox360&#8221;} {&#8220;Launch of galaxy s5&#8221;,&#8221;iphone6&#8221;} {&#8220;Launch of iphone6&#8221;,&#8221;galaxy s5&#8221;} {"Samsung Galaxy S5","iPhone 5S"} {"HTC reveals HTC One M8 Google Play Edition, by mistake","Galaxy S5"} {"First Look: HTC One (M8)","Galaxy S5"} {"LG G3 Fully Detailed Ahead of Launch","HTC One M8"} {"LG G3 Fully Detailed Ahead of Launch","Samsung Galaxy S5"} {"LG G3 Fully Detailed Ahead of Launch","Xperia Z2"} {"Microsoft Surface Pro 3 to launch alongside Surface Mini?","iPad"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="404"><relationName>prodctLaunchingProductPrice</relationName><humanFormat>arg2 is the {price of the product launched in} arg1 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>productLaunchEvent</domain><range>nonNegInteger</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>priceOfProductLaunch</inverse><seedInstances>{&#8220;Rolls Royce Launches Ghost Series II&#8221;,"216.864"} {&#8220;Launch of xbox360&#8221;,&#8221;399.99&#8221;} {&#8220;Launch of ps3&#8221;,&#8221;399.99&#8221;} {&#8220;Launch of galaxy s5&#8221;,&#8221;699.99&#8221;} {&#8220;Launch of iphone6&#8221;,&#8221;849.90&#8221;} {"iPhone 5C","&#163;429"} {"Xiaomi's Redmi Note Will Expand Beyond China, Will Be Priced Starting At $129","130"} {"Microsoft to offer Xbox One without Kinect","399"} {"Huawei Ascend P7 hands-on review: Latest Android flagship is sleek and affordable","&#8364;449"} {"Moto E price, specs, release date, features: &#163;89 smartphone set to 'end feature phones'","&#163;150"} {"Motorola Moto E Launched in India Carrying a Price Tag of Rs. 6,999 | NDTV Gadgets","129"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="405"><relationName>locationOfProtest</relationName><humanFormat>arg1 is the {location of} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>location</domain><range>protestEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>protestOcurredIn</inverse><seedInstances>{&#8220;East Timer&#8221;,&#8221;Indonesian invasion of East Timor&#8221;} {&#8220;Madagascar&#8221;,&#8221;2009 Malagasy political crisis&#8221;} {&#8220;Europe&#8221;,&#8221;Anti-austerity movement&#8221;} {&#8220;Prague&#8221;,&#8221;Stuha&#8221;} {&#8220;Czechoslovakia&#8221;,&#8221;Velvet Revolution&#8221;} {"KIEV","Kiev protesters attack building with police inside"} {"conference hall","Kiev protesters attack building with police inside"} {"government exposition","Kiev protesters attack building with police inside"} {"Bangkok","Thais defer decision on emergency after two hurt in shooting"} {"Bangkok","Thai police clash with protesters at poll venue"} {"stadium","Thai police clash with protesters at poll venue"} {"Bangkok","Explosion, Gunfire Ring out near Bangkok Protest Site"} {"BANGKOK","Thailand braces for 'shutdown'"} {"Bangkok","Thai protesters disrupt early voting for disputed election"} {"Bangkok","Thai government rejects election delay despite deadly violence - Channel News Asia"} {"Thailand","Thai government rejects election delay despite deadly violence - Channel News Asia"} {"CARACAS","3 killed as Venezuelan protests turn violent"} {"Venezuela","3 killed as Venezuelan protests turn violent"} {"KIEV","'At least two protesters killed' in Kiev protests as clashes between Ukraine police and demonstrators intensify"} {"Bangkok","Thai Red Shirts rally in support of prime minister"} {"Vietnam","One dead, 100 hurt in anti-China riot in Vietnam"} {"Istanbul","May Day Clashes in Istanbul, 50 Injured"} {"Turkey","Protesters clash with police at Turkey mine blast site"} {"BANGKOK","Police fire tear gas at Thai protesters as rallies intensify and tensions rise; 5 hurt"} {"Rio de Janeiro","Brazilians protest World Cup spending, call for better services"} {"Sao Paulo","Brazilians protest World Cup spending, call for better services"} {"Hanoi","Chinese worker killed in anti-Beijing protest in Vietnam"} {"Ho Chi Minh City","Chinese worker killed in anti-Beijing protest in Vietnam"} {"Turkey","Turkey mine clashes pile pressure on Erdogan"} {"Bangkok","2 die in Thai protest camp attack"} {"Binh Duong province","Vietnamese Protests Against Chinese Oil Rig Turn Violent"} {"Vietnam","Vietnamese Protests Against Chinese Oil Rig Turn Violent"} {"embassy","Vietnamese Protests Against Chinese Oil Rig Turn Violent"} {"BANGKOK","Thai protesters force acting PM to flee meeting"} {"Slovyansk","Mayor of eastern Ukraine city shot in the back"} {"Chinese Embassy","Vietnamese protests China oil rig in disputed sea"} {"Hanoi","Vietnamese protests China oil rig in disputed sea"} {"Binh Duong","South China Sea tension sparks Vietnamese attack on factories amid anti-China protest"} {"Vietnam","South China Sea tension sparks Vietnamese attack on factories amid anti-China protest"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="406"><relationName>timeOfProtest</relationName><humanFormat>arg1 is the {time of} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>time</domain><range>protestEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>protestEventTime</inverse><seedInstances>{&#8220;17:00&#8221;,&#8221;Stuha&#8221;} {"night","Kiev protesters attack building with police inside"} </seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="407"><relationName>actorOfProtest</relationName><humanFormat>arg1 is the {actor in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>protestEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>protestHadActor</inverse><seedInstances>{&#8220;Suharto&#8221;,&#8221;Indonesian invasion of East Timor&#8221;} {&#8220;Maraden&#8221;,&#8221;Indonesian invasion of East Timor&#8221;} {&#8220;Taur Matan Ruak&#8221;,&#8221;Indonesian invasion of East Timor&#8221;} {&#8220;Andry Rajoelina&#8221;,&#8221;2009 Malagasy political crisis&#8221;} {&#8220;Civilians&#8221;,&#8221;Anti-austerity movement&#8221;} {&#8220;Marek Benda&#8221;,&#8221;Stuha&#8221;} {&#8220;Jiri Dienstbier Jr.&#8221;,&#8221;Stuha&#8221;} {&#8220;Milos Jakes&#8221;,&#8221;Velvet Revolution&#8221;} {&#8220;Gustav Husak&#8221;,&#8221;Velvet Revolution&#8221;} {"crowd","Kiev protesters attack building with police inside"} {"demonstrators","Kiev protesters attack building with police inside"} {"police","Thai police clash with protesters at poll venue"} {"protesters","Thai police clash with protesters at poll venue"} {"protesters","Thailand braces for 'shutdown'"} {"Thai","Thai protesters disrupt early voting for disputed election"} {"protesters","Thai protesters disrupt early voting for disputed election"} {"opposition protesters","Thai government rejects election delay despite deadly violence - Channel News Asia"} {"Red Shirts","Thai Red Shirts rally in support of prime minister"} {"protesters","Thai Red Shirts rally in support of prime minister"} {"workers","Chinese worker killed in anti-Beijing protest in Vietnam"} {"Vietnamese","Vietnamese Protests Against Chinese Oil Rig Turn Violent"} {"100 protesters","Thai protesters force acting PM to flee meeting"} {"pro-Russia insurgents","Mayor of eastern Ukraine city shot in the back"} {"Vietnamese","Vietnamese protests China oil rig in disputed sea"} {"Vietnamese","South China Sea tension sparks Vietnamese attack on factories amid anti-China protest"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="408"><relationName>damagedInProtest</relationName><humanFormat>arg1 was {dameged in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>geolocatablething</domain><range>protestEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>protestDamaged</inverse><seedInstances>{&#8220;East Timor&#8221;,&#8221;Indonesian invasion of East Timor&#8221;} {&#8220;Czechoslovakia&#8221;,&#8221;Velvet Revolution&#8221;} {"Ukrainian House building","Kiev protesters attack building with police inside"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="409"><relationName>weaponUsedInProtest</relationName><humanFormat>arg1 was a weapon {used in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>weapon</domain><range>protestEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>protestHadWeapon</inverse><seedInstances>{&#8220;Fire Weapons&#8221;,&#8221;Indonesian invasion of East Timor&#8221;} {&#8220;fire weapons&#8221;,&#8221;2009 Malagasy political crisis&#8221;} {&#8220;tear gas&#8221;,&#8221;2009 Malagasy political crisis&#8221;} {&#8220;Fire Weapons&#8221;,&#8221;Stuha&#8221;} {&#8220;Fire Weapons&#8221;,&#8221;Velvet Revolution&#8221;} {"firebombs","Kiev protesters attack building with police inside"} {"gas","Kiev protesters attack building with police inside"} {"gas","Thai police clash with protesters at poll venue"} {"gas","Protesters clash with police at Turkey mine blast site"} {"water cannon","Protesters clash with police at Turkey mine blast site"} {"gas","Police fire tear gas at Thai protesters as rallies intensify and tensions rise; 5 hurt"} {"water cannon","Turkey mine clashes pile pressure on Erdogan"} {"grenades","2 die in Thai protest camp attack"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="410"><relationName>commentatorOfProtest</relationName><humanFormat>arg1 {commented about} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>protestEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>protestComentedBy</inverse><seedInstances>{"Arseniy Yatsenyuk","Kiev protesters attack building with police inside"} {"minister Surapong Tovichakchaikul","Thai police clash with protesters at poll venue"} {"Prime Minister Yingluck Shinawatra","Thai protesters disrupt early voting for disputed election"} {"Veera Yeephraew","Thai protesters disrupt early voting for disputed election"} {"Maria Corina Machado","3 killed as Venezuelan protests turn violent"} {"General Fang Fenghui","One dead, 100 hurt in anti-China riot in Vietnam"} {"Gulsen Kaymak","May Day Clashes in Istanbul, 50 Injured"} {"leader Suthep Thaugsuban","Police fire tear gas at Thai protesters as rallies intensify and tensions rise; 5 hurt"} {"Nguyen Xuan Hien","Vietnamese protests China oil rig in disputed sea"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="411"><relationName>InjuredInProtest</relationName><humanFormat>arg1 was {injured in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>protestEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>protestInjured</inverse><seedInstances>{&#8220;Soldiers&#8221;,&#8221;Indonesian invasion of East Timor&#8221;} {&#8220;Civilians&#8221;,&#8221;Indonesian invasion of East Timor&#8221;} {&#8220;Civilians&#8221;,&#8221;2009 Malagasy political crisis&#8221;} {&#8220;Martin Smid&#8221;,&#8221;Velvet Revolution&#8221;} {"taxi driver","Thais defer decision on emergency after two hurt in shooting"} {"woman","Thais defer decision on emergency after two hurt in shooting"} {"Two men","Explosion, Gunfire Ring out near Bangkok Protest Site"} {"Five people","Police fire tear gas at Thai protesters as rallies intensify and tensions rise; 5 hurt"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="412"><relationName>victimInProtest</relationName><humanFormat>arg1 was a {victim in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>protestEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>protestHadVictim</inverse><seedInstances>{&#8220;Soldiers&#8221;,&#8221;Indonesian invasion of East Timor&#8221;} {&#8220;Civilians&#8221;,&#8221;Indonesian invasion of East Timor&#8221;} {&#8220;Civilians&#8221;,&#8221;2009 Malagasy political crisis&#8221;} {&#8220;Martin Smid&#8221;,&#8221;Velvet Revolution&#8221;} {"three people","3 killed as Venezuelan protests turn violent"} {"Three people","'At least two protesters killed' in Kiev protests as clashes between Ukraine police and demonstrators intensify"} {"Two people","2 die in Thai protest camp attack"} {"20 people","Vietnamese Protests Against Chinese Oil Rig Turn Violent"} {"Gennady Kernes","Mayor of eastern Ukraine city shot in the back"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="413"><relationName>numberOfInjuredInProtest</relationName><humanFormat>arg1 is the number of people {injured in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>nonNegInteger</domain><range>protestEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>ProtestInjuredNumber</inverse><seedInstances>{&#8220;1000&#8221;,&#8221;Indonesian invasion of East Timor&#8221;} {&#8220;135&#8221;,&#8221;2009 Malagasy political crisis&#8221;} {&#8220;0&#8221;,&#8221;Anti-austerity movement&#8221;} {&#8220;0&#8221;,&#8221;Stuha&#8221;} {&#8220;1&#8221;,&#8221;Velvet Revolution&#8221;} {"24","2 die in Thai protest camp attack"} </seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="414"><relationName>locationOfRoadAccident</relationName><humanFormat>arg1 is the {location of} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>location</domain><range>roadAccidentEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>roadAccidentOcurredIn</inverse><seedInstances>{&#8221;New York&#8221;,&#8220;2009 Taconic State Parkway crash&#8221;} {&#8220;Huntsville&#8221;,&#8221;2006 Huntsville, Alabama bus accident&#8221;} {&#8220;Illinois&#8221;,&#8221;1995 Fox River Grove bus&#8211;train collision&#8221;} {&#8220;Chappaquiddick island&#8221;,&#8221;Chappaquiddick incident&#8221;} {&#8220;Illinois&#8221;,&#8221;1999 Bourbonnais, Illinois, train accident&#8221;} {"A55","Four cars and a van involved in collision on A55"} {"Eccleston","Four cars and a van involved in collision on A55"} {"BOISE","Bus crashes into Idaho Power building in Downtown Boise"} {"Idaho","Bus crashes into Idaho Power building in Downtown Boise"} {"Auckland","One person killed in head-on crash"} {"Karaka Rd","One person killed in head-on crash"} {"State Highway 22","One person killed in head-on crash"} {"Veracruz","At least 36 dead in Mexico bus crash: official"} {"Belleair Road","Police: DUI driver hits, kills motorcyclist - FOX 13 News"} {"Missouri Avenue","Police: DUI driver hits, kills motorcyclist - FOX 13 News"} {"BYRON","2 dead, 3 injured in Maine snowmobile crashes"} {"East Branch Road","2 dead, 3 injured in Maine snowmobile crashes"} {"LOUISVILLE","POLICE: Man leaves scene of accident after striking car - WDRB 41 Louisville News"} {"TAMPA","Crash That Killed 5 Men on I-275 Still Under Investigation"} {"Dubai","Dubai bus crash kills 15 Asian workers"} {"Jebel Ali","Dubai bus crash kills 15 Asian workers"} {"Looe","One passenger reported dead and over 40 injured as coach crashes into hedge at Looe"} {"Donegal","Child in involved in collision in which mother was killed moved to Belfast hospital"} {"Jammu","17 die as bus falls into gorge in Indian Kashmir"} {"Ramban","17 die as bus falls into gorge in Indian Kashmir"} {"SRINAGAR","17 die as bus falls into gorge in Indian Kashmir"}</seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="415"><relationName>timeOfRoadAccident</relationName><humanFormat>arg1 is the {time of} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>time</domain><range>roadAccidentEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>roadAccidentEventTime</inverse><seedInstances>{&#8221;1:35 pm&#8221;,&#8220;2009 Taconic State Parkway crash&#8221;} {&#8220;7:10 am&#8221;,&#8221;1995 Fox River Grove bus&#8211;train collision&#8221;} {&#8220;9:47 pm&#8221;,&#8221;1999 Bourbonnais, Illinois, train accident&#8221;} {"7:30","Minneapolis bicyclist in critical condition after morning accident at Snelling and Summit"} {"6:30 a.m.","Bus crashes into Idaho Power building in Downtown Boise"} {"3.25pm","One person killed in head-on crash"} {"3.30pm","Child in involved in collision in which mother was killed moved to Belfast hospital"} </seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="416"><relationName>guiltyOfRoadAccident</relationName><humanFormat>arg1 is the {guilty in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>roadAccidentEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>roadAccidentHadGuilty</inverse><seedInstances>{&#8220;Diane Schuler&#8221;,&#8221;2009 Taconic State Parkway crash&#8221;} {&#8220;unknown&#8221;,&#8221;2006 Huntsville, Alabama bus accident&#8221;} {&#8220;Traffic signal&#8221;,&#8221;1995 Fox River Grove bus&#8211;train collision&#8221;} {&#8220;Ted Kennedy&#8221;,&#8221;Chappaquiddick incident&#8221;} {&#8220;Track Circuite&#8221;,&#8221;1999 Bourbonnais, Illinois, train accident&#8221;} {"Hafford","Police: DUI driver hits, kills motorcyclist - FOX 13 News"} {"William Ashmore","2 dead, 3 injured in Maine snowmobile crashes"} {"Amy Longaker","POLICE: Man leaves scene of accident after striking car - WDRB 41 Louisville News"} {"woman","POLICE: Man leaves scene of accident after striking car - WDRB 41 Louisville News"} {"driver","Crash That Killed 5 Men on I-275 Still Under Investigation"} {"driver","One passenger reported dead and over 40 injured as coach crashes into hedge at Looe"} {"motorist","Police investigating fatal collisions in Edmonton"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="417"><relationName>collidedWith</relationName><humanFormat>arg1 was {dameged in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>roadAccidentEvent</domain><range>everypromotedthing</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>wasCollidedIn</inverse><seedInstances>{&#8221;2009 Taconic State Parkway crash&#8221;,&#8220;cars&#8221;} {&#8220;2006 Huntsville, Alabama bus accident&#8221;,&#8221;bus-car&#8221;} {&#8220;Traffic signal timing&#8221;,&#8221;bus-train&#8221;} {&#8220;Chappaquiddick incident&#8221;,&#8221;nothing&#8221;} {&#8220;train-truck&#8221;,&#8221;1999 Bourbonnais, Illinois, train accident&#8221;} {"Minneapolis bicyclist in critical condition after morning accident at Snelling and Summit","sport-utility vehicle"} {"Man killed by lorry after getting out of car on motorway hard shoulder","lorry"} {"Four cars and a van involved in collision on A55","four cars"} {"Four cars and a van involved in collision on A55","van"} {"Bus crashes into Idaho Power building in Downtown Boise","building"} {"Bus crashes into Idaho Power building in Downtown Boise","passenger bus"} {"One person killed in head-on crash","three cars"} {"At least 36 dead in Mexico bus crash: official","bus"} {"At least 36 dead in Mexico bus crash: official","trailer-truck"} {"Police: DUI driver hits, kills motorcyclist - FOX 13 News","2001 Buick Century"} {"2 dead, 3 injured in Maine snowmobile crashes","snowmobile"} {"2 dead, 3 injured in Maine snowmobile crashes","truck"} {"Crash That Killed 5 Men on I-275 Still Under Investigation","2001 Ford Expedition"} {"Dubai bus crash kills 15 Asian workers","bus"} {"Dubai bus crash kills 15 Asian workers","truck"} {"One passenger reported dead and over 40 injured as coach crashes into hedge at Looe","wall"} {"Child in involved in collision in which mother was killed moved to Belfast hospital","bus"} {"Child in involved in collision in which mother was killed moved to Belfast hospital","car"} {"17 die as bus falls into gorge in Indian Kashmir","bus"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="418"><relationName>reasonOfCollision</relationName><humanFormat>arg1 was a weapon {used in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>everypromotedthing</domain><range>roadAccidentEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>roadAccidentHadReason</inverse><seedInstances>{&#8220;Driving Wrong Way&#8221;,&#8221;2009 Taconic State Parkway crash&#8221;} {&#8220;Alcohol&#8221;,&#8221;2009 Taconic State Parkway crash&#8221;} {&#8220;Driving Wrong Way&#8221;,&#8221;2006 Huntsville, Alabama bus accident&#8221;} {&#8220;Traffic signal timing&#8221;,&#8221;1995 Fox River Grove bus&#8211;train collision&#8221;} {&#8220;alcohol&#8221;,&#8221;Chappaquiddick incident&#8221;} {&#8220;Track Circuit Failure&#8221;,&#8221;1999 Bourbonnais, Illinois, train accident&#8221;} {"brake failure","Bus crashes into Idaho Power building in Downtown Boise"} {"alcohol","POLICE: Man leaves scene of accident after striking car - WDRB 41 Louisville News"} {"drugs","POLICE: Man leaves scene of accident after striking car - WDRB 41 Louisville News"} {"brakes","Dubai bus crash kills 15 Asian workers"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="419"><relationName>commentatorOfRoadAccident</relationName><humanFormat>arg1 {commented about} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>roadAccidentEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>roadAccidentComentedBy</inverse><seedInstances>{"Minneapolis bicyclist in critical condition after morning accident at Snelling and Summit","Steve Frazer"} {"Man killed by lorry after getting out of car on motorway hard shoulder","Police"} {"At least 36 dead in Mexico bus crash: official","Government spokesman Alberto Silva Ramos"} {"2 dead, 3 injured in Maine snowmobile crashes","Warden Brock Clukey"} {"Dubai bus crash kills 15 Asian workers","AKM Mizanur Rahman"} {"One passenger reported dead and over 40 injured as coach crashes into hedge at Looe","South West Ambulance Service"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="420"><relationName>InjuredInRoadAccident</relationName><humanFormat>arg1 was {injured in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>roadAccidentEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>roadAccidentInjured</inverse><seedInstances>{&#8220;Children&#8221;,&#8221;2009 Taconic State Parkway crash&#8221;} {&#8220;Students&#8221;,&#8221;2006 Huntsville, Alabama bus accident&#8221;} {&#8220;Students&#8221;,&#8221;1995 Fox River Grove bus&#8211;train collision&#8221;} {&#8220;Civilians&#8221;,&#8221;1999 Bourbonnais, Illinois, train accident&#8221;} {"Minneapolis bicyclist","Minneapolis bicyclist in critical condition after morning accident at Snelling and Summit"} {"54 people","One passenger reported dead and over 40 injured as coach crashes into hedge at Looe"} {"three children","Child in involved in collision in which mother was killed moved to Belfast hospital"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="421"><relationName>victimInRoadAccident</relationName><humanFormat>arg1 was a {victim in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>person</domain><range>roadAccidentEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>roadAccidentHadVictim</inverse><seedInstances>{&#8220;Diane Schuler&#8221;,&#8221;2009 Taconic State Parkway crash&#8221;} {&#8220;Students&#8221;,&#8221;1995 Fox River Grove bus&#8211;train collision&#8221;} {&#8220;Mary Jo Kopechne&#8221;,&#8221;Chappaquiddick incident&#8221;} {&#8220;Civilians&#8221;,&#8221;1999 Bourbonnais, Illinois, train accident&#8221;} {"Man","Man killed by lorry after getting out of car on motorway hard shoulder"} {"One person","One person killed in head-on crash"} {"36 people","At least 36 dead in Mexico bus crash: official"} {"Ballard","Police: DUI driver hits, kills motorcyclist - FOX 13 News"} {"motorcyclist","Police: DUI driver hits, kills motorcyclist - FOX 13 News"} {"Leonnardo Rodrigues","2 dead, 3 injured in Maine snowmobile crashes"} {"child","POLICE: Man leaves scene of accident after striking car - WDRB 41 Louisville News"} {"Ankeet Harshad Patel","Crash That Killed 5 Men on I-275 Still Under Investigation"} {"Fort Myers","Crash That Killed 5 Men on I-275 Still Under Investigation"} {"Imtiyaz Ilias","Crash That Killed 5 Men on I-275 Still Under Investigation"} {"Jobin Joy Kuriakose","Crash That Killed 5 Men on I-275 Still Under Investigation"} {"South Florida fraternity brothers","Crash That Killed 5 Men on I-275 Still Under Investigation"} {"four students","Crash That Killed 5 Men on I-275 Still Under Investigation"} {"13 people","Dubai bus crash kills 15 Asian workers"} {"One person","One passenger reported dead and over 40 injured as coach crashes into hedge at Looe"} {"woman","One passenger reported dead and over 40 injured as coach crashes into hedge at Looe"} {"Jasmyn Chan","Police investigating fatal collisions in Edmonton"} {"Siobhan Hutcheon","Child in involved in collision in which mother was killed moved to Belfast hospital"} {"17 people","17 die as bus falls into gorge in Indian Kashmir"} </seedInstances><seedExtractionPatterns /><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="422"><relationName>numberOfInjuredInRoadAccident</relationName><humanFormat>arg1 is the number of people {injured in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>nonNegInteger</domain><range>roadAccidentEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>roadAccidentInjuredNumber</inverse><seedInstances>{&#8221;3&#8221;,&#8220;2009 Taconic State Parkway crash&#8221;} {&#8220;34&#8221;,&#8221;2006 Huntsville, Alabama bus accident&#8221;} {&#8220;21&#8221;,&#8221;1995 Fox River Grove bus&#8211;train collision&#8221;} {&#8220;0&#8221;,&#8221;Chappaquiddick incident&#8221;} {&#8220;122&#8221;,&#8221;1999 Bourbonnais, Illinois, train accident&#8221;} {"one","Bus crashes into Idaho Power building in Downtown Boise"} {"two","One person killed in head-on crash"} {"four","Dubai bus crash kills 15 Asian workers"} {"five","One passenger reported dead and over 40 injured as coach crashes into hedge at Looe"} </seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="423"><relationName>numberOfCasualtiesInRoadAccident</relationName><humanFormat>arg1 is the number of people that {died in} the event arg2 </humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>nonNegInteger</domain><range>roadAccidentEvent</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives /><inverse>roadAccidentCasualtiesNumber</inverse><seedInstances>{&#8221;8&#8221;,&#8220;2009 Taconic State Parkway crash&#8221;} {&#8220;4&#8221;,&#8221;2006 Huntsville, Alabama bus accident&#8221;} {&#8220;7&#8221;,&#8221;1995 Fox River Grove bus&#8211;train collision&#8221;} {&#8220;1&#8221;,&#8221;Chappaquiddick incident&#8221;} {&#8220;11&#8221;,&#8221;1999 Bourbonnais, Illinois, train accident&#8221;} {"two","2 dead, 3 injured in Maine snowmobile crashes"} {"four","Crash That Killed 5 Men on I-275 Still Under Investigation"} </seedInstances><seedExtractionPatterns /><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString /><editDate>2015-04-20</editDate><author>Estevam (Event Relations)</author><curator /><description /><freebaseID /><comment /></Relation><Relation id="424"><relationName>countryIsTheHomeOfSportsteam</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>locationRelatedToAgent</generalizations><domain>country</domain><range>sportsteam</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfCountryIsTheHomeOfSportsteam</inverse><seedInstances>{"usa","yankees"} {"usa","eagles"} {"usa","new_york_mets"} {"usa","knicks"} {"usa","florida_marlins"} {"usa","chicago_cubs"} {"usa","carolina_panthers"} {"usa","boston_red"} {"usa","titans"} {"usa","st___louis_cardinals"} {"usa","san_diego_padres"} {&#8220;Brazil&#8221;,&#8221;palmeiras&#8221;} {&#8220;Brazil&#8221;,&#8221;Corinthians&#8221;} {&#8220;Brazil&#8221;,&#8221;Santos&#8221;} {&#8220;uk&#8221;,&#8221;chelsea&#8221;} {&#8220;spain&#8221;,&#8221;barcelona&#8221;} {&#8220;spain&#8221;,&#8221;real madrid&#8221;} {&#8220;portugal&#8221;,&#8221;benfica&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>01 05 2015</editDate><author>Prophet+Ontext (920)</author><curator> </curator><description>Describes the home country of sports teams</description><freebaseID /><comment /></Relation><Relation id="425"><relationName>coachCanSpeakLanguage</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>coach</domain><range>language</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfCoachCanSpeakLanguage</inverse><seedInstances>{"hiddink", &#8220;english&#8221;} {"bob_bradley","english"} {"stoops",&#8221;english&#8221;} {"kelvin_sampson",&#8221;english&#8221;} {"clinton_white", "english"} {&#8220;steve_spurrier","english"} {"kelvin_sampson","english"} {"summers",&#8221;english&#8221;} {&#8220;Oswaldo de Oliveira&#8221;, &#8220;portuguese&#8221;} {&#8220;Tite&#8221;, &#8220;portuguese&#8221;} {&#8220;muricy ramalho&#8221;, &#8220;portuguese&#8221;} {&#8220;Jose Mourinho&#8221;, &#8220;english&#8221;} {&#8220;mike Tomlin&#8221;,&#8221;english&#8221;} {&#8220;Erick Spoelstra&#8221;,&#8221;english&#8221;} {&#8220;Marc Willmots&#8221;,&#8221;french&#8221;} {&#8220;Marc Willmots&#8221;,&#8221;german&#8221;} {&#8220;Miguel Herrera&#8221;,&#8221;spanish&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>01 05 2015</editDate><author>Prophet+Ontext (920)</author><curator> </curator><description>Describes the languages that coaches might speak</description><freebaseID /><comment /></Relation><Relation id="426"><relationName>languageSpokenAtIsland</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>language</domain><range>island</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfLanguageSpokenAtIsland</inverse><seedInstances>{&#8220;Spanish&#8221;,&#8221;Santa Cruz del Islote&#8221;} {&#8220;Cantonese&#8221;,&#8221;Ap Lei Chau&#8221;} {&#8220;Bantu Swahili&#8221;,&#8221;Migingo Island&#8221;} {&#8220;French&#8221;,&#8221;Fadiouth&#8221;} {&#8220;Maldivian&#8221;,&#8221;Mal&#233;&#8221;} {&#8220;Marshallese&#8221;,&#8221;Ebeye&#8221;} {&#8220;Portuguese&#8221;,&#8221;Ilha de Mo&#231;ambique&#8221;} {&#8220;English&#8221;,&#8221;Manhattan&#8221;} {&#8220;Marathi&#8221;,&#8221;Salsette Island&#8221;} {&#8220;French&#8221;,&#8221;&#206;le Saint-Louis &#8221;} {&#8220;Arabic&#8221;,&#8221;Arwad&#8221;} {&#8220;Finnish&#8221;,&#8221;Lilla Essingen&#8221;} {&#8220;Cantonese&#8221;,&#8221;Tsing Yi&#8221;} {&#8220;English&#8221;,&#8221;Roosevelt Island &#8221;} {&#8220;German&#8221;,&#8221;L&#252;beck&#8221;} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>01 05 2015</editDate><author>Prophet+Ontext (920)</author><curator> </curator><description>Describes languages spoken at islands</description><freebaseID /><comment /></Relation><Relation id="427"><relationName>astronautWasOnAMissionWithAstronaut</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>astronaut</domain><range>astronaut</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfAstronautWasOnAMissionWithAstronaut</inverse><seedInstances>{&#8220;Scott Carpenter&#8221;,&#8221;Gordon Cooper&#8221;} {&#8220;Scott Carpenter&#8221;,&#8221;John Glenn&#8221;} {&#8220;John Glenn&#8221;,&#8221;Gordon Cooper&#8221;} {&#8220;Gordon Cooper&#8221;,&#8221;Gus Grissom&#8221;} {&#8220;Gus Grissom&#8221;,&#8221;Scott Carpenter&#8221;} {&#8220;Gus Grissom&#8221;,&#8221;John Glenn&#8221;} {&#8220;Deke Slayton&#8221;,&#8221;Thomas P. Stafford&#8221;} {&#8220;Deke Slayton&#8221;,&#8221;Vance Brand&#8221;} {&#8220;Vance Brand&#8221;,&#8221;Thomas P. Stafford&#8221;} {&#8220;Neil Armstrong&#8221;,&#8221;Michael Collins&#8221;} {&#8220;Neil Armstrong&#8221;,&#8221;Buzz Aldrin&#8221;} {&#8220;Michael Collins&#8221;,&#8221;Buzz Aldrin&#8221;} {&#8220;Charles Conrad Jr.&#8221;,&#8221;Alan L. Bean&#8221;} {&#8220;Charles Conrad Jr.&#8221;,&#8221;Richard F. Gordon Jr.&#8221;} {&#8220;Richard F. Gordon Jr.&#8221;,&#8221;Alan L. Bean&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>01 05 2015</editDate><author>Prophet+Ontext (920)</author><curator> </curator><description>Describes astronauts that were at a space mission togheter</description><freebaseID /><comment /></Relation><Relation id="428"><relationName>vegetableIsProducedAtCountry</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>itemExistsAtLocation</generalizations><domain>vegetable</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfVegetableIsProducedAtCountry </inverse><seedInstances>{&#8220;Dry Bean&#8221;,&#8221;India&#8221;} {&#8220;Dry Bean&#8221;,&#8221;Brazil&#8221;} {&#8220;Onion&#8221;,&#8221;China&#8221;} {&#8220;Onion&#8221;,&#8221;India&#8221;} {&#8220;Garlic&#8221;,&#8221;India&#8221;} {&#8220;Garlic&#8221;,&#8221;China&#8221;} {&#8220;Spinach&#8221;,&#8221;China&#8221;} {&#8220;Spinach&#8221;,&#8221;usa&#8221;} {&#8220;Soybean&#8221;,&#8221;usa&#8221;} {&#8220;Soybean&#8221;,&#8221;Brazil&#8221;} {&#8220;Tomato&#8221;,&#8221;China&#8221;} {&#8220;Tomato&#8221;,&#8221;India&#8221;} {&#8220;Ginger&#8221;,&#8221;India&#8221;} {&#8220;Pulses&#8221;,&#8221;Mozambique&#8221;} {&#8220;Pulses&#8221;,&#8221;India&#8221;} {&#8220;Cabbage&#8221;,&#8221;China&#8221;} {&#8220;Cabbage&#8221;,&#8221;India&#8221;} {&#8220;Cassava&#8221;,&#8221;Nigeria&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>01 05 2015</editDate><author>Prophet+Ontext (920)</author><curator> </curator><description>Describes the countries that are big produces of vegetables</description><freebaseID /><comment /></Relation><Relation id="429"><relationName>meatComesFromAnimal</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>meat</domain><range>animal</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfMeatComesFromAnimal</inverse><seedInstances>{&#8220;beef&#8221;,&#8221;cow&#8221;} {&#8220;ribs&#8221;,&#8221;cow&#8221;} {&#8220;chuck&#8221;,&#8221;cow&#8221;} {&#8220;flank steak&#8221;,&#8221;cow&#8221;} {&#8220;round steak&#8221;,&#8221;cow&#8221;} {&#8220;wings&#8221;,&#8221;chiken&#8221;} {&#8220;tulip&#8221;,&#8221;chicken&#8221;} {&#8220;breast&#8221;,&#8221;chiken&#8221;} {&#8220;chikcne thigh&#8221;,&#8221;chicken&#8221;} {&#8220;bacon&#8221;,&#8221;pig&#8221;} {&#8220;ham&#8221;,&#8221;pig&#8221;} {&#8220;turkey breast&#8221;,&#8221;turkey&#8221;} {&#8220;pork loin&#8221;,&#8221;pig&#8221;} {&#8220;salmon&#8221;,&#8221;salmon&#8221;} {&#8220;sausage shank&#8221;,&#8221;pig&#8221;} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>01 05 2015</editDate><author>Prophet+Ontext (920)</author><curator> </curator><description>Describes the animals and their meat cuts</description><freebaseID /><comment /></Relation><Relation id="430"><relationName>stateorprovinceAttainsTrainstation</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>stateorprovince</domain><range>trainstation</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfStateorprovinceAttainsTrainstation</inverse><seedInstances>{&#8220;California&#8221;,&#8221;San Diego Trolley station&#8221;} {&#8220;California&#8221;,&#8221;Sacramento RT&#8221;} {&#8220;California&#8221;,&#8221;Peninsula Commute station&#8221;} {&#8220;California&#8221;,&#8221;Metrolink station&#8221;} {&#8220;Busan&#8221;,&#8221;Allack Station&#8221;} {&#8220;Gyeonggi-do&#8221;,&#8221;Beomgol Station&#8221;} {&#8220;Gyeonggi-do&#8221;,&#8221;Dong-o Station&#8221;} {&#8220;Washington&#8221;,&#8221;New Jersey Avenue Station&#8221;} {&#8220;Washington&#8221;,&#8221;Baltimore and Potomac Railroad Station&#8221;} {&#8220;Arizona&#8221;,&#8221;Ash Fork station&#8221;} {&#8220;Arizona&#8221;,&#8221;Holbrook railroad station&#8221;} {&#8220;Ulster&#8221;,&#8221;Balmoral railway station&#8221;} {&#8220;Ulster&#8221;,&#8221;Adelaide railway station&#8221;} {&#8220;Ulster&#8221;,&#8221;Finaghy railway station&#8221;} {&#8220;Ulster&#8221;,&#8221;Titanic Quarter railway station&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>01 05 2015</editDate><author>Prophet+Ontext (920)</author><curator> </curator><description>Describes the trainstantions location (state or province)</description><freebaseID /><comment /></Relation><Relation id="431"><relationName>musicalArtistHadAPetAnimal</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>musicartist</domain><range>animal</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfMusicalArtistHadAPetAnimal</inverse><seedInstances>{&#8220;Elvis&#8221;,&#8221;Kangaroo&#8221;} {&#8220;Justin Bieber&#8221;,&#8221;Monkey&#8221;} {&#8220;Steven Tyler&#8221;,&#8221;Raccoon&#8221;} {&#8220;Paris Hilton&#8221;,&#8221;Kinkajou&#8221;} {&#8220;Vanilla Ice&#8221;,&#8221;Wallaroo&#8221;} {&#8220;Michael Jackson&#8221;,&#8221;Chimpanzee&#8221;} {&#8220;Michael Jackson&#8221;,&#8221;Dog&#8221;} {&#8220;Kate Perry&#8221;,&#8221;Cat&#8221;} {&#8220;Josephine Baker&#8221;,&#8221;Leopard&#8221;} {&#8220;Slash&#8221;,&#8221;Snake&#8221;} {&#8220;Taylor Swift&#8221;,&#8221;Cat&#8221;} {&#8220;Miley Cyrus&#8221;,&#8221;Dog&#8221;} {&#8220;Lady Gaga&#8221;,&#8221;Dog&#8221;} {&#8220;Kesha&#8221;,&#8221;Dog&#8221;} {&#8220;Kate Perry&#8221;,&#8221;Dog&#8221;} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>01 05 2015</editDate><author>Prophet+Ontext (920)</author><curator> </curator><description>Describes the pet animals that musical artists have or had</description><freebaseID /><comment /></Relation><Relation id="432"><relationName>coachStudiedAtUniversity</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>coach</domain><range>university</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfCoachStudiedAtUniversity </inverse><seedInstances>{&#8220;Faye Abbott&#8221;,&#8221;Syracuse&#8221;} {&#8220;Frankie Albert&#8221;,&#8221;Stanford&#8221;} {&#8220;Joe Alexander&#8221;,&#8221;Syracuse&#8221;} {&#8220;George Allen&#8221;,&#8221;University of Michigan&#8221;} {&#8220;Roy Chapman Andrews&#8221;,&#8221;Beloit College&#8221;} {&#8220;Johnny Armstrong&#8221;,&#8221;University of Dubuque&#8221;} {&#8220;Neil Armstrong&#8221;,&#8221;Oklahoma A &amp; M&#8221;} {&#8220;Bill Austin&#8221;,&#8221;Oregon State&#8221;} {&#8220;Shorty Barr&#8221;,&#8221;Wisconsin&#8221;} {&#8220;Norman Barry&#8221;,&#8221;Notre Dame&#8221;} {&#8220;Jim Bates&#8221;,&#8221;University of Tennessee&#8221;} {&#8220;Cliff Battles&#8221;,&#8221;West Virginia Wesleyan&#8221;} {&#8220;Sammy Baugh&#8221;,&#8221;Texas Christian&#8221;} {&#8220;Bill Belichick&#8221;,&#8221;Wesleyan&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>01 05 2015</editDate><author>Prophet+Ontext (920)</author><curator> </curator><description>Describes the university where the coach studied at</description><freebaseID /><comment /></Relation><Relation id="433"><relationName>buildingIsPartOfUniversity</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>building</domain><range>university</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfBuildingIsPartOfUniversity </inverse><seedInstances>{&#8220;Frederick r. Weisman Art Museum&#8221;,&#8221;University of Minnesota&#8221;} {&#8220;Pillsbury Hall&#8221;,&#8221;University of Minnesota&#8221;} {&#8220;T.K. Hearn Plaza&#8221;,&#8221;Wake Forest&#8221;} {&#8220;Old Kenyon Hall&#8221;,&#8221;Kenyon College&#8221;} {&#8220;All Saints&#8221;,&#8221;Sewanee&#8221;} {&#8220;Tennessee Williams Center&#8221;,&#8221;Sewanee&#8221;} {&#8220;Phillips Theme Tower&#8221;,&#8221;Pepperdine&#8221;} {&#8220;Christopher Wren building&#8221;,&#8221;College of William &amp; Mary&#8221;} {&#8220;Baker-Berry Library&#8221;,&#8221;Dartmouth&#8221;} {&#8220;Sever Hall&#8221;,&#8221;Harvard&#8221;} {&#8220;Bell Tower&#8221;,&#8221;Furman&#8221;} {&#8220;Rockefeller Chapel&#8221;,&#8221;University of Chicago&#8221;} {&#8220;Pearl Harbor memorial&#8221;,&#8221;United States Naval Academy&#8221;} {&#8220;Bancroft Hall&#8221;,&#8221;United States Naval Academy&#8221;} {&#8220;Encina Hall&#8221;,&#8221;Stanford&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>1</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>01 05 2015</editDate><author>Prophet+Ontext (920)</author><curator> </curator><description>Describes buildings that universities might own</description><freebaseID /><comment /></Relation><Relation id="434"><relationName>beverageCanSoftenDisease</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>beverage</domain><range>disease</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfBeverageCanSoftenDisease </inverse><seedInstances>{&#8220;Herbal Tea&#8221;,&#8221;Acid Reflux&#8221;} {&#8220;Skim Milk&#8221;,&#8221;Acid Reflux&#8221;} {&#8220;Non-Citrus Juices&#8221;,&#8221;Acid Reflux&#8221;} {&#8220;Water&#8221;,&#8221;Acid Reflux&#8221;} {&#8220;Water&#8221;,&#8221;Crohn&#8217;s disease&#8221;} {&#8220;Meal Replacement Shakes&#8221;,&#8221;Crohn&#8217;s disease&#8221;} {&#8220;Coconut Water&#8221;,&#8221;Crohn&#8217;s disease&#8221;} {&#8220;Milk&#8221;,&#8221;Crohn&#8217;s disease&#8221;} {&#8220;cranberry juice&#8221;,&#8221;heart disease&#8221;} {&#8220;orange juice&#8221;,&#8221;high blood pressure&#8221;} {&#8220;wine&#8221;,&#8221;high cholesterol&#8221;} {&#8220;hot cocoa&#8221;,&#8221;heart diseas&#8221;} {&#8220;Pomegranate Juice&#8221;,&#8221;heart disease&#8221;} {&#8220;Red Wine&#8221;,&#8221;heart disease&#8221;} {&#8220;Black Tea&#8221;,&#8221;heart disease&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>01 05 2015</editDate><author>Prophet+Ontext (920)</author><curator> </curator><description>Describes beverages that can help soften the symptons of diseases</description><freebaseID /><comment /></Relation><Relation id="435"><relationName>arthropodSuchAsCrustacean</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>generalizationOf</generalizations><domain>crustacean</domain><range>arthropod</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>1</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>crustaceanIsATypeOfArthropod</inverse><seedInstances>{"mollusks",&#8221;oyster&#8221;} {"mollusks",&#8221;conch"} {"decapodes","crab"} {&#8220;mollusks",&#8221;squid"} {&#8220;decapodes&#8221;,&#8221;lobster&#8221;} {&#8220;decapodes&#8221;,&#8221;prawn&#8221;} {&#8220;decapodes&#8221;,&#8221;shrimp&#8221;}  {&#8220;barnacles&#8221;,&#8221;balanus crenatus&#8221;} {&#8220;barnacles&#8221;,&#8220;elminius modestus&#8221;} {&#8220;barnacles&#8221;,&#8221;verruca stroemia&#8221;} {&#8220;barnacles&#8221;,&#8221;perforatus&#8221;} {&#8220;krills&#8221;,&#8221;euphausia superba&#8221;} {&#8220;krills&#8221;,&#8221;euphausia pacifica&#8221;} {&#8220;krills&#8221;,&#8221;euphasia nana&#8221;} {&#8220;krills&#8221;,&#8221;thysanoessa raschii&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>01 05 2015</editDate><author>Prophet+Ontext (920)</author><curator> </curator><description>Hyponym Relation</description><freebaseID /><comment /></Relation><Relation id="436"><relationName>canBeTheSameAs</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>0</populate><visible>0</visible><generalizations>relatedTo</generalizations><domain>everypromotedthing</domain><range>everypromotedthing</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>0</antireflexive><antisymmetric>0</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>canBeTheSameAs</inverse><seedInstances /><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>1</nrOfValues><nrOfInverseValues /><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>01 05 2015</editDate><author>Lucas</author><curator> </curator><description>Describes two instances that are the same thing in different categories</description><freebaseID /><comment /></Relation><Relation id="437"><relationName>athleteCanBeTheSameAsActor</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>canBeTheSameAs</generalizations><domain>athlete</domain><range>actor</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>actorCanBeTheSameAsAthlete</inverse><seedInstances>{&#8220;Chuck Norris&#8221;,&#8221;Chuck Norris&#8221;} {"matthew_broderick","matthew_broderick"} {&#8220;Bubba Smith&#8221;,&#8221;Bubba Smith&#8221;} {&#8220;Howie Long&#8221;,&#8221;Howie Long&#8221;} {&#8220;Jason Lee&#8221;,&#8221;Jason Lee&#8221;} {&#8220;Ed Marinaro&#8221;,&#8221;Ed Marinaro&#8221;} {&#8220;Vinnie Jones&#8221;,&#8221;Vinnie Jones&#8221;} {&#8220;Carl Weathers&#8221;,&#8221;Carl Weathers&#8221;} {&#8220;Fred Dryer&#8221;,&#8221;Fred Dryer&#8221;} {&#8220;Fred Williamson&#8221;,&#8221;Fred Williamson&#8221;} {&#8220;Jim Brown&#8221;,&#8221;Jim Brown&#8221;} {&#8220;Bob Uecker&#8221;,&#8221;Bob Uecker&#8221;} {&#8220;Terry Bradshaw&#8221;,&#8221;Terry Bradshaw&#8221;} {&#8220;Lou Ferrigno&#8221;,&#8221;Lou Ferrigno&#8221;} {&#8220;Jim Brown&#8221;,&#8221;Jim Brown&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>1</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>01 05 2015</editDate><author>Prophet+Ontext (920)</author><curator> </curator><description>Describes actors that are the same instances as athlete</description><freebaseID /><comment /></Relation><Relation id="438"><relationName>writerCanBeTheSameAsPersonafrica</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>canBeTheSameAs</generalizations><domain>writer</domain><range>personafrica</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>personafricaCanBeTheSameAsWriter</inverse><seedInstances>{&#8220;Mariama B&#226;&#8221;,&#8221;Mariama B&#226;&#8221;} {&#8220;Buchi Emecheta&#8221;,&#8221;Buchi Emecheta&#8221;} {&#8220;Bessie Head&#8221;,&#8221;Bessie Head&#8221;} {&#8220;Ousmane Semb&#232;ne&#8221;,&#8221;Ousmane Semb&#232;ne&#8221;} {&#8220;Ngugi wa Thiong&#8217;o&#8221;,&#8221;Ngugi wa Thiong&#8217;o&#8221;} {&#8220;Nuruddin Farah&#8221;,&#8221;Nuruddin Farah&#8221;} {&#8220;Chimamanda Ngozi Adichie &#8221;,&#8221;Chimamanda Ngozi Adichie &#8221;} {&#8220;Ayi Kwei Armah&#8221;,&#8221;Ayi Kwei Armah&#8221;} {&#8220;Unity Dow&#8221;,&#8221;Unity Dow&#8221;} {&#8220;Galesiti Baruti&#8221;,&#8221;Galesiti Baruti&#8221;} {&#8220;Pierre Makombo Bambot&#233;&#8221;,&#8221;Pierre Makombo Bambot&#233;&#8221;} {&#8220;Joseph Brahim Seid&#8221;,&#8221;Joseph Brahim Seid&#8221;} {&#8220;Waberi Abdourahman&#8221;,&#8221;Waberi Abdourahman&#8221;} {&#8220;Saba Kidane&#8221;,&#8221;Saba Kidane&#8221;} {&#8220;Moges Kebede&#8221;,&#8221;Moges Kebede&#8221;} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>1</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>01 05 2015</editDate><author>Prophet+Ontext (920)</author><curator> </curator><description>Describes writers that are the same instances as personafrica</description><freebaseID /><comment /></Relation><Relation id="439"><relationName>bakegoodIsTypicalInCountry</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>bakedGood</domain><range>country</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfBakegoodIsTypicalInCountry</inverse><seedInstances>{&#8220;Aloo pie&#8221;,&#8221;Trinidad and Tobago&#8221;} {&#8220;Apple Pie&#8221;,&#8221;usa&#8221;} {&#8220;Bakewell pudding&#8221;,&#8221;united kingdom&#8221;} {&#8220;baklava&#8221;,&#8221;turkey&#8221;} {&#8220;banket&#8221;,&#8220;netherlands&#8221;} {&#8220;belekoy&#8221;,&#8221;philippines&#8221;} {&#8220;birnbrot&#8221;,&#8221;switzerland&#8221;} {&#8220;Boyoz&#8221;,&#8221;Turkey&#8221;} {&#8220;Bougatsa&#8221;,&#8221;Greece&#8221;} {&#8220;pretzels&#8221;,&#8221;usa&#8221;} {&#8220;muffins&#8221;,&#8221;usa&#8221;} {&#8220;bagels&#8221;,&#8221;usa&#8221;} {&#8220;cookies&#8221;,&#8221;usa&#8221;} {&#8220;donuts&#8221;,&#8221;usa&#8221;} {&#8220;cannoli&#8221;,&#8221;Italy&#8221;} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>01 05 2015</editDate><author>Prophet+Ontext (920)</author><curator> </curator><description>Describes the typicall bakegoods of the countries</description><freebaseID /><comment /></Relation><Relation id="440"><relationName>buildingFeatureBuiltAboveLake</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>buildingfeature</domain><range>lake</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfBuildingFeatureBuiltAboveLak</inverse><seedInstances>{&#8220;Lewisville Lake Toll Bridge&#8221;,&#8221;Lewisville Lake&#8221;} {&#8220;Mackinac Bridge&#8221;,&#8221;Lake Michigan&#8221;} {&#8220;Mackinac Bridge&#8221;,&#8221;Lake Huron&#8221;} {&#8220;New Link PATH Bridge&#8221;,&#8221;Lake Shore&#8221;} {&#8220; Lake Pontchartrain Causeway&#8221;,&#8221;Lake Pontchartrain&#8221;} {&#8220;David Kreitzer Lake Hodges Bicycle/Pedestrian Bridge&#8221;,&#8221;Lake Hodges&#8221;} {&#8220;Brown Bridge Road&#8221;,&#8221;Lake Jackson&#8221;} {&#8220;Willis Bridge&#8221;,&#8221;Lake Texoma&#8221;} {&#8220;Lake Washington floating Bridge&#8221;,&#8221;Lake Washington&#8221;} {&#8220;Lincoln Highway Bridge&#8221;,&#8221;Donner Lake&#8221;} {&#8220;Portage Lake Bridge&#8221;,&#8221;Portage Lake&#8221;} {&#8220;Lake Champlain Bridge&#8221;,&#8221;Lake Champlain&#8221;} {&#8220;observation deck&#8221;,&#8221;Thun Lake&#8221;} {&#8220;observation deck&#8221;,&#8221;Brienz Lake&#8221;} {&#8220; Koocanusa Bridge&#8221;,&#8221; Lake Koocanusa&#8221;} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>12 06 2015</editDate><author>Prophet+Ontext (930)</author><curator> </curator><description>buildingfeature and lake are related</description><freebaseID /><comment /></Relation><Relation id="441"><relationName>mountainAtgeopoliticallocation</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>locatedAt</generalizations><domain>mountain</domain><range>geopoliticallocation</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfMountainAtgeopoliticallocation</inverse><seedInstances>{&#8220;Kibo&#8221;,&#8221;Tanzania&#8221;} {&#8220;Mount Kenya&#8221;,&#8221;Kenya&#8221;} {&#8220;Kibo&#8221;,&#8221;Africa&#8221;} {&#8220;Mount Kenya&#8221;,&#8221;Africa&#8221;} {&#8220;Mawenzi&#8221;,&#8221;Kilimanjaro&#8221;} {&#8220;Tanzania&#8221;,&#8221;Africa&#8221;} {&#8220;Mount Gessi&#8221;,&#8221;Uganda&#8221;} {&#8220;Mount Gessi&#8221;,&#8221;Africa&#8221;} {&#8220;Ras Dashen&#8221;,&#8221;Ethiopia&#8221;} {&#8220;Ras Dashen&#8221;,&#8221;Africa&#8221;} {&#8220;Mount McKinley&#8221;,&#8221;Alaska&#8221;} {&#8220;Mount McKinley&#8221;,&#8221;North America&#8221;} {&#8220;Mount Logan&#8221;,&#8221;Yukon&#8221;} {&#8220;Mount Logan&#8221;,&#8221;North America&#8221;} {&#8220;Volcan Citlaltepetl&#8221;,&#8221;Puebla&#8221;} {&#8220;Volcan Citlaltepetl&#8221;,&#8221;North America&#8221;} {&#8220;Crestone Peak&#8221;,&#8221;Colorado&#8221;} {&#8220;Crestone Peak&#8221;,&#8221;North America&#8221;} {&#8220;White Mountain Peak&#8221;,&#8221;California&#8221;} {&#8220;White Moutain Peak&#8221;,&#8221;usa&#8221;} {&#8220;White Mountain Peak&#8221;,&#8221;North America&#8221;} {&#8220;Mont Blanc&#8221;,&#8221;Aosta&#8221;} {&#8220;Mont Blanc&#8221;,&#8221;U-Savoy&#8221;} {&#8220;Mont Blanc&#8221;,&#8221;Europe&#8221;} {&#8220;Mont Blanc&#8221;,&#8221;France&#8221;} {&#8220;Mount Blanc&#8221;,&#8221;Italy&#8221;} {&#8220;Monte Rosa&#8221;,&#8221;Valais&#8221;} {&#8220;Monte Rosa&#8221;,&#8221;Europe&#8221;} {&#8220;Finsteraarhorn&#8221;,&#8221;Bern&#8221;} {&#8220;Finsteraarhorn&#8221;,&#8221;Europe&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>12 06 2015</editDate><author>Prophet+Ontext (930)</author><curator> </curator><description>geopoliticallocation and mountain are related</description><freebaseID /><comment /></Relation><Relation id="442"><relationName>wineryAtFarm</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>winery</domain><range>farm</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfWineryAtFarm</inverse><seedInstances>{&#8220;Black Star Farms Winery&#8221;,&#8221;Black Star Farms&#8221;} {&#8220;Iron Gate Vineyards&#8221;,&#8221;Iron Gate Farm&#8221;} {&#8220;Grace Winery&#8221;,&#8221;Sweetwater &#8221;} {&#8220;Rockland farms winery&#8221;,&#8221;Rockland farms&#8221;} {&#8220;Green Dance Winery&#8221;,&#8221;SandHill&#8221;} {&#8220;Alton Farms Estate Winery&#8221;,&#8221;Alton Farms Estate&#8221;} {&#8220;Shone Farm Winery&#8221;,&#8221;Shone Farm&#8221;} {&#8220;Tomaselo Winery&#8221;,&#8221;Abmas Farm&#8221;} {&#8220;Jones Winery&#8221;,&#8221;Jones Family Farms&#8221;} {&#8220;Mineral Hills Winery&#8221;,&#8221;Godard's Red Hen Farm&#8221;} {&#8220;Alfalfa Farm Winery&#8221;,&#8221;Alfalfa Farm&#8221;} {&#8220;Puddicombe Farms Winery&#8221;,&#8221;Puddicombe Farms&#8221;} {&#8220;Biltmore Winery&#8221;,&#8221;Antler Hill Village&#8221;} {&#8220;Spier Wine Farm&#8221;,&#8221;Spier Wine Farm&#8221;} {&#8220;Black Bridge Winery&#8221;,&#8221;Orchard Valley Farms&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>12 06 2015</editDate><author>Prophet+Ontext (930)</author><curator> </curator><description>farm and winery are related</description><freebaseID /><comment /></Relation><Relation id="443"><relationName>colorAssociatedWithVisualizableattribute</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>color</domain><range>visualizableattribute</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfColorAssociatedWithVisualizableattribut</inverse><seedInstances>{"green","foliage"} {"yellow","foliage"} {"blue","flesh"} {"grey","cloud"} {"white","cloud"} {"water","flesh"} {"turquoise","cloud"} {"sky","cloud"} {"yellow","gold"} {"golden","gold"} {"shade","cloud"} {"yellow","blond"}  {&#8220;yellow&#8221;,&#8221;sunny&#8221;} {&#8220;orange&#8221;,&#8221;sunny&#8221;} {&#8220;white&#8221;,&#8221;shiny&#8221;} {&#8220;dark&#8221;,&#8221;fog&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>12 06 2015</editDate><author>Prophet+Ontext (930)</author><curator> </curator><description>color and visualizableattribute are related</description><freebaseID /><comment /></Relation><Relation id="444"><relationName>grainUsedToMakeCandy</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>grain</domain><range>candy</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfGrainUsedToMakeCandy</inverse><seedInstances>{&#8220;rice&#8221;,&#8221;Botan Rice Candy&#8221;} {&#8220;rice&#8221;,&#8221;Mitoku Rice Syrup Candies&#8221;} {&#8220;rice&#8221;,&#8221;Mitoku Ginger Rice Candy&#8221;} {&#8220;rice&#8221;,&#8221;moti&#8221;} {&#8220;peanut&#8221;,&#8221;chocolate peanut candies&#8221;} {&#8220;peanut&#8221;,&#8221;Circus Peanuts&#8221;} {&#8220;peanut&#8221;,&#8221;Peanut Brittle&#8221;} {&#8220;peanut&#8221;,&#8221;Honey Roasted Peanuts &#8221;} {&#8220;peanut&#8221;,&#8221;Peanut Butter and Jelly Fudge&#8221;} {&#8220;corn&#8221;,&#8221;Candy Corn&#8221;} {&#8220;corn&#8221;,&#8221;caramel popcorn&#8221;} {&#8220;Marron Glace&#8221;,&#8221;chestnut&#8221;} {&#8220;CHESTNUT CANDY&#8221;,&#8221;chestnut&#8221;} {&#8220;Buckeyes&#8221;,&#8221;nut&#8221;} {&#8220;Squirrel nut Caramel&#8221;,&#8221;nut&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>12 06 2015</editDate><author>Prophet+Ontext (930)</author><curator> </curator><description>grain and candy are related</description><freebaseID /><comment /></Relation><Relation id="445"><relationName>hotelBuiltAtPark</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>hotel</domain><range>park</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfHotelBuiltAtPark</inverse><seedInstances>{&#8220;Wawona Hotel&#8221;,&#8221;Yosemite Park&#8221;} {&#8220;Walt Disney Resorts&#8221;,&#8221;Walt Disney Parks&#8221;} {&#8220; Prince of Wales Hotel&#8221;,&#8221;Waterton Lakes National Park&#8221;} {&#8220;Glacier Park Lodge&#8221;,&#8221;East Glacier Park&#8221;} {&#8220;gramercy park hotel&#8221;,&#8221;gramercy park&#8221;} {&#8220;Grove Park Inn&#8221;,&#8221;Grove Park&#8221;} {&#8220;Hilton hotel&#8221;,&#8221;Railroad park&#8221;} {&#8220;El Tovar Hotel&#8221;,&#8221;Grand Canyon National Park&#8221;} {&#8220;ettington park hotel&#8221;,&#8221;ettington park&#8221;} {&#8220;Mammoth Hot Springs Hotel&#8221;,&#8221;yellowstone national park&#8221;} {&#8220;Hotel Cascada&#8221;,&#8221;Albuquerque Waterpark&#8221;} {&#8220;Boston Hotel Buckminster &#8221;,&#8221;Fenway Park&#8221;} {&#8220;The Killarney Park Hotel&#8221;,&#8221;Killarney Park&#8221;} {&#8220;Kensington Park Hotel&#8221;,&#8221;Kensington Park&#8221;} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>12 06 2015</editDate><author>Prophet+Ontext (930)</author><curator> </curator><description>hotel and park are related</description><freebaseID /><comment /></Relation><Relation id="446"><relationName>professionActsAtTheSameAreaOfPoliticIssue</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>politicsissue</domain><range>profession</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfprofessionActsAtTheSameAreaOfPoliticIssue</inverse><seedInstances>{&#8220;Teacher&#8221;,"education"} {"Professor","education"} {"Farmer","agriculture"} {"Farmer","livestock"}  {"sanitation agent","sewers"} {"sanitation agent","clean water"} {"Soldier","security"} {"Police Officer","security"} {"firefighter","security"} {"Doctor","health"} {"Nurse","health"} {"pharmaceutical","health"} {&#8220;Businessman&#8221;,&#8221;economy&#8221;} {&#8220;merchant&#8221;,&#8221;economy&#8221;} {&#8220;importer&#8221;,&#8221;economy&#8221;} {&#8220;exporter&#8221;,&#8221;economy&#8221;} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>24 07 2015</editDate><author>Prophet+Ontext (940)</author><curator> </curator><description>Describes professions that work at the area of a political issue</description><freebaseID> </freebaseID><comment> </comment></Relation><Relation id="447"><relationName>invertebrateTurnIntoInsect</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>invertebrate</domain><range>insect</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfInvertebrateTurnIntoInsect </inverse><seedInstances>{&#8220;caterpillar&#8221;,&#8221;butterfly&#8221;} {&#8220;caterpillar&#8221;,&#8221;moth&#8221;} {&#8220;planula&#8221;,&#8221;cnidarians&#8221;} {&#8220;grub&#8221;,&#8221;bettle&#8221;} {&#8220;maggot&#8221;,&#8221;flies&#8221;} {&#8220;maggot&#8221;,&#8221;bee&#8221;} {&#8220;maggot&#8221;,&#8221;wasp&#8221;} {&#8220;wriggler&#8221;,&#8221;mosquito&#8221;} {&#8220;larva&#8221;,&#8221;snakefly&#8221;} {&#8220;larva&#8221;,&#8221;alderfly&#8221;} {&#8220;larva&#8221;,&#8221;scorpionfly&#8221;} {&#8220;larva&#8221;,&#8221;caddisfly&#8221;} {&#8220;larva&#8221;,&#8221;fishfly&#8221;} {&#8220;larva&#8221;,&#8221;fleas&#8221;} {&#8220;larva&#8221;,&#8221;Twisted-winged parasite&#8221;} {&#8220;larva&#8221;,&#8221;antlion&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>24 07 2015</editDate><author>Prophet+Ontext (940)</author><curator> </curator><description>Describes the metamorphosis of some invertebrates into another insects</description><freebaseID> </freebaseID><comment /></Relation><Relation id="448"><relationName>mammalInducesEmotion</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>mammal</domain><range>emotion</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfMammalInducesEmotion</inverse><seedInstances>{"kids","stress"} {"kids","happiness"} {"kids","tenderness"} {"kids","fatigue"} {"dogs","fatigue"} {"dogs","happiness"} {"dogs","fear"} {"cats","happiness"} {"cats","tenderness"} {"dogs","stress"} {"tiger","fear"} {"lion","fear"} {"wale","impressed"} {"wale","amazed"} {"elephant","amazed"} {&#8220;elephant&#8221;,&#8221;impressed&#8221;} {&#8220;rat&#8221;,&#8221;nausea&#8221;} {&#8220;bat&#8221;,&#8221;nausea&#8221;} {&#8220;bat&#8221;,&#8221;fear&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>24 07 2015</editDate><author>Prophet+Ontext (940)</author><curator> </curator><description>The emotion that human beings generally have by looking at a mammal</description><freebaseID> </freebaseID><comment> </comment></Relation><Relation id="449"><relationName>clothMadeOfPlant</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>clothing</domain><range>plant</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfClothMadeOfPlant</inverse><seedInstances>{&#8220;bark cloth&#8221;,&#8221;trees&#8221;} {&#8220;buckram&#8221;,&#8221;stiff cotton&#8221;} {&#8220;burlap&#8221;, &#8220; jute plant&#8221;} {&#8220;Gunny cloth&#8221;, &#8220;jute plant&#8221;} {&#8220;Calico&#8221;,&#8221;cotton&#8221;} {&#8220;Cambric&#8221;,&#8221;cotton&#8221;} {&#8220;Cambric&#8221;,&#8221;flax plant&#8221;} {&#8220;Candlewick&#8221;,&#8221;flax plant&#8221;}  {&#8220;Chino&#8221;,&#8221;cotton&#8221;} {&#8220;Terrycloth&#8221;,&#8221;cotton&#8221;} {&#8220;cotton&#8221;,&#8221;cotton&#8221;} {&#8220;Denim&#8221;,&#8221;cotton&#8221;} {&#8220;Hemp cloth&#8221;,&#8221;Cannabis sativa plant&#8221;} {&#8220;Ramie&#8221;,&#8221;China grass&#8221;} {&#8220;Hemp&#8221;,&#8221;Cannabis sativa plant&#8221;} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>24 07 2015</editDate><author>Prophet+Ontext (940)</author><curator> </curator><description>Plants that can be used to make cloths</description><freebaseID> </freebaseID><comment> </comment></Relation><Relation id="450"><relationName>invertebrateHasColor</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>invertebrate</domain><range>color</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfInvertebrateHasColor </inverse><seedInstances>{&#8220;Spangled Skimmer Dragonfly&#8221;,&#8221;blue&#8221;} {&#8220;Damselfly&#8221;,&#8221;blue&#8221;} {&#8220;Male Slaty Skimmer&#8221;,&#8221;blue&#8221;} {&#8220;Male Blue Dasher&#8221;,&#8221;blue&#8221;} {&#8220;Flea Beetle&#8221;,&#8221;red&#8221;} {&#8220;Velvet Mite&#8221;,&#8221;red&#8221;} {&#8220; Golden-winged Skimmer Dragonfly&#8221;,&#8221;red&#8221;} {&#8220;Common Meadow Spittlebug &#8221;,&#8221;red&#8221;} {&#8220;Dogbane tiger moth&#8221;,&#8221;white&#8221;} {&#8220;Crambid snout moth&#8221;,&#8221;white&#8221;} {&#8220;Derbid planthopper&#8221;,&#8221;white&#8221;} {&#8220;whitefly&#8221;,&#8221;white&#8221;} {&#8220;smooth flower spider&#8221;,&#8221;white&#8221;} {&#8220;ambush bug&#8221;,&#8221;white&#8221;} {&#8220;Sulphur&#8221;,&#8221;yellow&#8221;} {&#8220;Sleepy Orange&#8221;,&#8221;yellow&#8221;} {&#8220;Dogbane Beetle&#8221;,&#8221;green&#8221;} {&#8220;Green June Beetle&#8221;,&#8221;green&#8221;} {&#8220;Leafhopper&#8221;,&#8221;green&#8221;} {&#8220;Acanaloniid Planthopper&#8221;,&#8221;green&#8221;} {&#8220;Magnolia Green Jumping Spider&#8221;,&#8221;green&#8221;} {&#8220;Mangora Genus Spider&#8221;,&#8221;green&#8221;} {&#8220;Giant Katydid&#8221;,&#8221;green&#8221;} {&#8220;Luna Moth&#8221;,&#8221;green&#8221;} {&#8220;Black Blister Beetle&#8221;,&#8221;black&#8221;} {&#8220;Bess Beetle&#8221;,&#8221;black&#8221;} {&#8220;Ebony Bug&#8221;,&#8221;black&#8221;} {&#8220;March Fly&#8221;,&#8221;black&#8221;} {&#8220;Mydas Fly&#8221;,&#8221;black&#8221;} {&#8220;Spider Wasp&#8221;,&#8221;black&#8221;} {&#8220;Sawfly&#8221;,&#8221;black&#8221;} {&#8220;False Black Widow&#8221;,&#8221;black&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>24 07 2015</editDate><author>Prophet+Ontext (940)</author><curator> </curator><description>Describes the color of invertebrates</description><freebaseID> </freebaseID><comment> </comment></Relation><Relation id="451"><relationName>newpaperHasWebsite</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>organizationHasOfficialWebsite</generalizations><domain>newspaper</domain><range>website</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfNewpaperHasWebsite</inverse><seedInstances>{"the new york observer","observer.com"} {"philadelphia inquirer","www.philly.com/inquirer"} {"the san francisco chronicle","www.sfgate.com"} {"pittsburgh post gazette","www.post-gazette.com"} {"cbs news","www.cbsnews.com"} {"san_jose_mercury_news","www.mercurynews.com"} {"la times","www.latimes.com"} {"detroit news","www.detroitnews.com"} {"kansas city star","www.kansascity.com"} {&#8220;Washington Post&#8221;,&#8221;www.washingtonpost.com&#8221;} {&#8220;The New York Times&#8221;,&#8221;www.nytimes.com&#8221;} {&#8220;Miami Herald&#8221;,&#8221;www.miamiherald.com&#8221;} {&#8220;Folha de S.Paulo&#8221;,&#8221;www.folha.uol.com.br&#8221;} {&#8220;Herald Scotland&#8221;,&#8221;www.heraldscotland.com&#8221;} {&#8220;NZ Herald&#8221;,&#8221;www.nzherald.co.nz&#8221;} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>24 07 2015</editDate><author>Prophet+Ontext (940)</author><curator> </curator><description>Present the oficial website of a newspaper</description><freebaseID /><comment /></Relation><Relation id="452"><relationName>mammalEatsInsect</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>animalThatFeedOnInsect</generalizations><domain>mammal</domain><range>insect</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions /><knownNegatives> </knownNegatives><inverse>inverseOfMammalEatsInsect </inverse><seedInstances>{&#8220;anteater&#8221;,&#8221;ant&#8221;} {&#8220;armadillo&#8221;,&#8221;ant&#8221;} {&#8220;aardvark&#8221;,&#8221;ant&#8221;} {&#8220;anteater&#8221;,&#8221;termite&#8221;} {&#8220;armadillo&#8221;,&#8221;termite&#8221;} {&#8220;aardvark&#8221;,&#8221;termite&#8221;} {&#8220;bat&#8221;,&#8221;mosquito&#8221;} {&#8220;bat&#8221;,&#8221;beetle&#8221;} {&#8220;hedgehog&#8221;,&#8221;beetle&#8221;} {&#8220;hedgehog&#8221;,&#8221;caterpillar&#8221;} {&#8220;hedgehog&#8221;,&#8221;grasshopper&#8221;} {&#8220;hedgehog&#8221;,&#8221;termite&#8221;} {&#8220;hedgehog&#8221;,&#8221;moth&#8221;} {&#8220;Tenrec&#8221;,&#8221;caterpillar&#8221;} {&#8220;Tenrec&#8221;,&#8221;larvae&#8221;} {&#8220;Tenrec&#8221;,&#8221;earthworm&#8221;} {&#8220;Tenrec&#8221;,&#8221;maggot&#8221;}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>24 07 2015</editDate><author>Prophet+Ontext (940)</author><curator> </curator><description>Describes the insects that mammals eats</description><freebaseID> </freebaseID><comment> </comment></Relation><Relation id="453"><relationName>diseaseCausesPhysiologicalCondition</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>relatedTo</generalizations><domain>disease</domain><range>physiologicalcondition</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions>isShorterThan isTallerThan</mutexExceptions><knownNegatives> </knownNegatives><inverse>inverseOfDiseaseCausesPhysiologicalcondition</inverse><seedInstances>{"Addison's disease","weight_loss"} {"Diabetes","weight_loss"} {"Hypercalcemia","weight_loss"} {"Parkinson's disease","weight_loss"} {"Sjogren's syndrome","dry_mouth"} {"HIV","dry_mouth"} {"AIDS","dry_mouth"} {"Hypoglicemia","blurred_vision"} {"Cataract","blurred_vision"} {"Glaucoma","blurred_vision"} {"Brain Tumor","blurred_vision"} {"erectile_dysfunction","impotence"} {"dysfunction","impotence"} {"Gestational Diabetes","weight_gain"} {"Hypothyroidism","weight_gain"} {"Dysthymia","weight_gain"} {"AIDS","weight_gain"} {"muscle strain","weakness"} {"muscle strain","stiffness"} {"ulcers","ulcer"} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>any</nrOfValues><nrOfInverseValues>any</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>24 07 2015</editDate><author>Prophet+Ontext (940)</author><curator> </curator><description>Describes diseases that may cause a physiological condition</description><freebaseID> </freebaseID><comment /></Relation><Relation id="454"><relationName>comedianCanBeTheSameAsFemale</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>canBeTheSameAs</generalizations><domain>comedian</domain><range>female</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>femaleCanBeTheSameAsComedian</inverse><seedInstances>{"nicole_kidman","nicole_kidman"} {"julia_roberts","julia_roberts"} {"holly_madison","holly_madison"} {"sandra_bullock","sandra_bullock"} {"reese_witherspoon","reese_witherspoon"} {"jennifer_garner","jennifer_garner"} {"cate_blanchett","cate_blanchett"} {"melanie_griffith","melanie_griffith"} {"lisa_rinna","lisa_rinna"} {"kelly_preston","kelly_preston"} {"jenny_mccarthy","jenny_mccarthy"} {"jane_wyman","jane_wyman"} {"sarah_michelle_gellar","sarah_michelle_gellar"} {"michelle_pfeiffer","michelle_pfeiffer"} {"jessica_simpson","jessica_simpson"} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>1</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>24 07 2015</editDate><author>Prophet+Ontext (940)</author><curator> </curator><description>Describes two instances that are the same thing in these two different categories</description><freebaseID /><comment /></Relation><Relation id="455"><relationName>comedianCanBeTheSameAsMale</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>canBeTheSameAs</generalizations><domain>comedian</domain><range>male</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>maleCanBeTheSameAsComedian</inverse><seedInstances>{"christian_bale","christian_bale"} {"brad_pitt","brad_pitt"} {"tom_hanks","tom_hanks"} {"marlon_brando","marlon_brando"} {"antonio_banderas","antonio_banderas"} {"ryan_phillippe","ryan_phillippe"} {"david_arquette","david_arquette"} {"ronald_reagan","ronald_reagan"} {"kelly_preston","kelly_preston"} {"harrison_ford","harrison_ford"} {"denzel_washington","denzel_washington"} {"adam_sandler","adam_sandler"} {"sean_penn","sean_penn"} {"robin_williams","robin_williams"} {"nick_cannon","nick_cannon"} {"kenny_chesney","kenny_chesney"} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>1</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>24 07 2015</editDate><author>Prophet+Ontext (940)</author><curator> </curator><description>Describes two instances that are the same thing in these two different categories</description><freebaseID> </freebaseID><comment> </comment></Relation><Relation id="456"><relationName>agriculturalProductCanBeTheSameAsVegetable</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>canBeTheSameAs</generalizations><domain>agriculturalproduct</domain><range>vegetable</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>vegetableCanBeTheSameAsAgriculturalProduct</inverse><seedInstances>{"carrots","carrots"} {"greens","greens"} {"lettuce","lettuce"} {"beans","beans"} {"olives","olives"} {"watermelon","watermelon"} {"tomato","tomato"} {"tobacco","tobacco"} {"soybeans","soybeans"} {"pumpkins","pumpkins"} {"peanuts","peanuts"} {"parsley","parsley"} {"oats","oats"} {"wheat","wheat"} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>1</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>24 07 2015</editDate><author>Prophet+Ontext (940)</author><curator> </curator><description>Describes two instances that are the same thing in these two different categories</description><freebaseID> </freebaseID><comment> </comment></Relation><Relation id="457"><relationName>celebrityCanBeTheSameAsCeo</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>canBeTheSameAs</generalizations><domain>celebrity</domain><range>ceo</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>ceoCanBeTheSameAsCelebrity</inverse><seedInstances>{"steve_jobs","steve_jobs"} {"richard","richard"} {"bill gates","bill gates"} {"warren_buffett","warren_buffett"} {"michael_jackson","michael_jackson"} {"page","page"} {"cash_warren","cash_warren"} {"merrill_lynch","merrill_lynch"} {"merrill","merrill"}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>1</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>24 07 2015</editDate><author>Prophet+Ontext (940)</author><curator> </curator><description>Describes two instances that are the same thing in these two different categories</description><freebaseID> </freebaseID><comment> </comment></Relation><Relation id="458"><relationName>jobpositionCanBeTheSameAsPoliticalOffice</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>canBeTheSameAs</generalizations><domain>jobposition</domain><range>politicaloffice</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>politicalOfficeCanBeTheSameAsJobPosition</inverse><seedInstances>{"u_s__president","u_s__president"} {"chairman","chairman"} {"vice_president","vice_president"} {"assistant_secretary","assistant_secretary"}  {"attorney_general","attorney_general"} {"vp","vp"} {"press_secretary","press_secretary"} {"first_president","first_president"} {"chief_of_staff","chief_of_staff"} {"assistant","assistant"} {"us_president","us_president"} {"treasury_secretary","treasury_secretary"} {"secretary_of_state","secretary_of_state"} {"secretary_general","secretary_general"}</seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>1</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>24 07 2015</editDate><author>Prophet+Ontext (940)</author><curator> </curator><description>Describes two instances that are the same thing in these two different categories</description><freebaseID> </freebaseID><comment /></Relation><Relation id="459"><relationName>scientistCanBeTheSameAsWriter</relationName><humanFormat>arg1 {is related to} arg2</humanFormat><populate>1</populate><visible>1</visible><generalizations>canBeTheSameAs</generalizations><domain>scientist</domain><range>writer</range><domainWithinRange>0</domainWithinRange><rangeWithinDomain>0</rangeWithinDomain><antireflexive>1</antireflexive><antisymmetric>1</antisymmetric><mutexExceptions> </mutexExceptions><knownNegatives> </knownNegatives><inverse>writeCanBeTheSameAsScientist</inverse><seedInstances>{"robert_louis_stevenson","robert_louis_stevenson"} {"john_irving","john_irving"} {"nathaniel_hawthorne","nathaniel_hawthorne"} {"john_steinbeck","john_steinbeck"} {"george_orwell","george_orwell"} {"william_faulkner","william_faulkner"} {"toni_morrison","toni_morrison"} {"henry_james","henry_james"} {"c__s__lewis","c_s__lewis"} {"victor_hugo","victor_hugo"} {"thomas_mann","thomas_mann"} {"robert_a__heinlein","robert_a__heinlein"} {"philip_k__dick","philip_k__dick"} {"henry_green","henry_green"} {"george_eliot","george_eliot"} {"alexandre_dumas","alexandre_dumas"} {"william_burroughs","william_burroughs"} {"thomas_pynchon","thomas_pynchon"} {"sinclair_lewis","sinclair_lewis"} {"robert_heinlein","robert_heinlein"} </seedInstances><seedExtractionPatterns> </seedExtractionPatterns><nrOfValues>1</nrOfValues><nrOfInverseValues>1</nrOfInverseValues><requiredForDomain>FALSE</requiredForDomain><requiredForRange>FALSE</requiredForRange><queryString> </queryString><editDate>24 07 2015</editDate><author>Prophet+Ontext (940)</author><curator> </curator><description>Describes two instances that are the same thing in these two different categories</description><freebaseID> </freebaseID><comment /></Relation></Relations><Categories><Category id="1"><categoryName>everyPromotedThing</categoryName><englishName /><humanFormat>%s is {something}</humanFormat><populate>0</populate><visible>0</visible><generalizations /><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>every promoted thing</queryString><editDate /><author /><curator /><description>every promoted category instance in KB</description><freebaseID /><comment /></Category><Category id="2"><categoryName>abstractThing</categoryName><englishName /><humanFormat>%s is an {abstract thing}</humanFormat><populate>0</populate><visible>0</visible><generalizations>everyPromotedThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>abstract thing</queryString><editDate /><author /><curator /><description>thought, quality, characteristic apart from concrete realities, specific objects, or actual instances; theoretical, not applied or practical (http://dictionary.reference.com/browse/abstract)</description><freebaseID /><comment>Why are these categories under abstractThing? buildingMaterial, chemical, disease, mldataset, protein</comment></Category><Category id="3"><categoryName>academicField</categoryName><englishName>academic fields</englishName><humanFormat>%s is an {academic field}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions>politicsIssue economicSector</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances> "Astronomy" "Biology" "Comparative Literature" "Computer Science" "Economics" "Environmental Science" "Geology" "History" "Linguistics" "Mathematics" "Philosophy" "Physics" "Psychology" "Sociology" "Theatre Arts" </seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>academic field</queryString><editDate /><author /><curator /><description>A field of study is the field, area, or discipline which is the focus of study of a student or academic, or which is taught in a school.</description><freebaseID>/education/field_of_study</freebaseID><comment /></Category><Category id="4"><categoryName>actor</categoryName><englishName>actors</englishName><humanFormat>%s is an {actor}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>celebrity professor model female comedian director personByLocation athlete male</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Catherine Zeta-Jones" "Clint Eastwood" "Danny Kaye" "Halle Berry" "Jack Nicholson" "Jessica Alba" "Jude Law" "Julie Andrews" "Keanu Reeves" "Matt Damon" "Natalie Portman" "Nicolas Cage" "Nicole Kidman" "Sean Connery" "Tom Hanks"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>actor</queryString><editDate /><author /><curator /><description>An actor is a person who performs in movies, television, plays, or other forms of entertainment.</description><freebaseID /><comment>Freebase distinguishes between theater, tv, and film actors</comment></Category><Category id="5"><categoryName>agent</categoryName><englishName /><humanFormat>%s is an {agent}</humanFormat><populate>0</populate><visible>0</visible><generalizations>everyPromotedThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>agent</queryString><editDate /><author /><curator /><description>a person or business authorized to act on another's behalf; a person or thing that acts or has the power to act; a natural force or object producing or used for obtaining specific results (http://dictionary.reference.com/browse/agent), and more generally, anything that can exhibit agency, such as non-human life forms.</description><freebaseID /><comment /></Category><Category id="6"><categoryName>agriculturalProduct</categoryName><englishName>agricultural products</englishName><humanFormat>%s is an {agricultural product}</humanFormat><populate>1</populate><visible>1</visible><generalizations>item</generalizations><mutexExceptions>nut legume grain fruit vegetable meat animal beverage</mutexExceptions><knownNegatives>"dogs" "cats" "soda"</knownNegatives><instanceType>all</instanceType><seedInstances>"wheat" "corn" "soybeans" "milk" "cotton" "wool" "hemp" "silk" "flax" "cattle" "pigs" "vegetables" "rice" "flowers" "dairy products" "cheese" "beans" "peanuts" "lumber" "coffee" "sugar" "cocoa"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>agricultural product</queryString><editDate>2011-03-25</editDate><author>Justin</author><curator /><description>a living thing (or something derived therefrom) which is specifically cultivated and produced to sustain or enrich life</description><freebaseID>none</freebaseID><comment>This doesn't generalize to product because food doesn't yet generalize to product (which in turn depends on some other issues on the list of things to resolve)</comment></Category><Category id="7"><categoryName>airport</categoryName><englishName>airports</englishName><humanFormat>%s is an {airport}</humanFormat><populate>1</populate><visible>1</visible><generalizations>building</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Area 51" "Diego Garcia" "London Heathrow Airport" "Los Angeles International Airport" "Amsterdam Airport Schiphol" "Lennart Meri Tallinn Airport" "Washington Dulles International Airport" "Sywell Aerodrome" "Washington International Thurgood Marshall Airport" "Athens International Airport" "Ramstein Air Base" "Viracopos-Campinas International Airport"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>airport</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"A place where airplanes, helicopters, or other flying vehicles land and take off"</description><freebaseID>/aviation/airport</freebaseID><comment /></Category><Category id="8"><categoryName>amphibian</categoryName><englishName>amphibians</englishName><humanFormat>%s is an {amphibian}</humanFormat><populate>1</populate><visible>1</visible><generalizations>vertebrate</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "frogs" "salamanders" "toads" "golden toads" "caecilians" "poison dart frogs" "ghost frogs" "tree frogs" "burrowing toads" "spadefoots" "mudpuppies" "waterdogs" "congo eels" "mole salamanders" "sirens"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>amphibian</queryString><editDate /><author>Burr</author><curator /><description>Amphibians (class Amphibia, from Amphi- meaning "on both sides" and -bios meaning "life"), such as frogs, salamanders, and caecilians, are ectothermic (or cold-blooded) animals that metamorphose from a juvenile water-breathing form, either to an adult air-breathing form, or to a paedomorph that retains some juvenile characteristics.</description><freebaseID>none</freebaseID><comment /></Category><Category id="9"><categoryName>animal</categoryName><englishName>animals</englishName><humanFormat>%s is an {animal}</humanFormat><populate>1</populate><visible>1</visible><generalizations>agent species</generalizations><mutexExceptions>agriculturalProduct</mutexExceptions><knownNegatives /><instanceType>common</instanceType><seedInstances> "ants" "crabs" "brontosauruses" "owls" "bees" "birds" "worms" "snails" "squirrels" "whales" "wasps" "eels" "giraffes" "rhinos" "sharks"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>animal</queryString><editDate /><author /><curator /><description>A collection of common-sense animals, more understandable to children than biologists.  It's OK to include both general kinds of animals, such as bird, but also common varieties of birds such as finch and robin. (FreeBase)  As with plant, any mortal action upon an animal or action on a dead animal that results in something with a new name (e.g. milking, shearing, slaughtering, or cooking it) results in something that is no longer an animal.</description><freebaseID>/biology/animal</freebaseID><comment /></Category><Category id="10"><categoryName>aquarium</categoryName><englishName>aquariums</englishName><humanFormat>%s is an {aquarium}</humanFormat><populate>1</populate><visible>1</visible><generalizations>attraction</generalizations><mutexExceptions>park zoo</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances>"Vancouver aquarium","Georgia aquarium","Melbourne aquarium","New England aquarium","Sydney aquarium","Shedd aquarium","New York aquarium"
</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>aquarium</queryString><editDate>2010-09-06</editDate><author>M.Samadi</author><curator /><description>the aquatic counterpart of a zoo, housing living aquatic species for viewing</description><freebaseID>not present in Freebase; Source: http://en.wikipedia.org/wiki/Public_aquarium</freebaseID><comment /></Category><Category id="11"><categoryName>arachnid</categoryName><englishName>arachnids</englishName><humanFormat>%s is an {arachnid}</humanFormat><populate>1</populate><visible>1</visible><generalizations>arthropod</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "scorpion" "spider" "brown recluse spider" "kimura-gumo" "argiope " "tick" "pseudoscorpion" "amblypygi" "schizomida" "opiliones" "palpigradi"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>arachnid</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>air-breathing arthropods characterized by simple eyes and four pairs of legs</description><freebaseID>none</freebaseID><comment>edited on 2010-10-30 by Estevam</comment></Category><Category id="12"><categoryName>archaea</categoryName><englishName>archaea</englishName><humanFormat>%s is an {archaeon}</humanFormat><populate>1</populate><visible>1</visible><generalizations>species</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "Nanoarchaeum equitans" "Nanoarchaeota" "Halobacteria" "Crenarchaeota" "Korarchaeota" "Euryarchaeota" "Thermoprotei" "Archaeoglobaceae" "Archaeoglobus" "Archaeoglobales" "Ferroglobus" "Methanopyri"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>archaea</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>single-celled organisms lacking nuclei, formerly called archaebacteria but now known to differ fundamentally from bacteria</description><freebaseID>none</freebaseID><comment>edited on 2010-10-30 by Estevam</comment></Category><Category id="13"><categoryName>architect</categoryName><englishName>architects</englishName><humanFormat>%s is an {architect}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>visualArtist male female celebrity scientist personByLocation professor</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Alvar Aalto" "Antoni Gaud&#237;" "Frank Lloyd Wright" "Francesco Borromini" "I. M. Pei" "Ludwig Mies van der Rohe" "Le Corbusier" "Minoru Yamasaki" "Mario Botta" "Norman Foster " "Renzo Piano" "Rem Koolhaas"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>architect</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"a person who designs buildings or other structures"</description><freebaseID>/architecture/architect</freebaseID><comment /></Category><Category id="14"><categoryName>artery</categoryName><englishName>arteries</englishName><humanFormat>%s is an {artery}</humanFormat><populate>1</populate><visible>1</visible><generalizations>bodyPart</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "shiatsu" "brachial artery" "brachiocephalic artery" "femoral artery" "profunda femoris artery" "circle of willis" "subclavian artery" "external carotid artery" "arteriole" "pulmonary artery" "internal carotid artery" "radial artery"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>artery</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"Arteries are muscular blood vessels that carry blood away from the heart."</description><freebaseID>/medicine/artery</freebaseID><comment /></Category><Category id="15"><categoryName>arthropod</categoryName><englishName>arthropods</englishName><humanFormat>%s is an {arthropod}</humanFormat><populate>1</populate><visible>1</visible><generalizations>invertebrate</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "ants" "bees" "velvet worms" "crabs" "spiders" "scorpions" "centipedes" "millipedes" "butterflies" "flies" "beetles" "wasps" "tilobites" "lice" "lobsters"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>arthropod</queryString><editDate /><author /><curator /><description>Arthropods are members of the phylum Arthropoda.</description><freebaseID>none</freebaseID><comment /></Category><Category id="16"><categoryName>astronaut</categoryName><englishName>astronauts</englishName><humanFormat>%s is an {astronaut}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>male female personByLocation professor celebrity politician</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Catherine Coleman" "Charles Edward Jones" "Harrison Schmitt" "Neil Armstrong" "Tamara E. Jernigan" "Yuri Gagarin" "Roger B. Chaffee" "Edward Higgins White" "Gus Grissom" "Toktar Aubakirov" "Elliot See" "Sonny Carter"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>astronaut</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>An astronaut is a person that has flown in outer space. Not used for animals sent to space experimentally.</description><freebaseID>/spaceflight/astronaut</freebaseID><comment /></Category><Category id="17"><categoryName>athlete</categoryName><englishName>athletes</englishName><humanFormat>%s is an {athlete}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>male female celebrity actor personByLocation coach</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Alex Rodriguez" "Andre Agassi" "Brett Favre" "Carlos Zambrano" "David Beckham" "Deron Williams" "Dwayne Wade" "Eli Manning" "Evander Holyfield" "Jason Giambi" "Kerry Wood" "Kevin Garnett" "Kurt Warner" "LeBron James" "Lennox Lewis"</seedInstances><seedExtractionPatterns /><conceptSynonyms>{&#8220;Ken Griffey , Jr .&#8221;, &#8220;Ken Griffey Jr&#8221;} {&#8220;O.J. Simpson&#8221;, &#8220;O . J . Simpson&#8221;} {&#8220;Robert Trent Jones , Jr .&#8221;, &#8220;Robert Trent Jones Jr&#8221;} {&#8220;Arnold Palmer&#8221;, &#8220;legendary Arnold Palmer&#8221;} {&#8220;Cabell Robinson&#8221;, &#8220;Cabell B . Robinson&#8221;} {&#8220;catcher Ivan Rodriguez&#8221;, &#8220;Ivan Rodriguez&#8221;} {&#8220;Herrera Craig Brazell&#8221;, &#8220;Craig Brazell&#8221;} {&#8220;Luis G Rivera&#8221;, &#8220;Luis Rivera&#8221;} {&#8220;Marion Barber III&#8221;, &#8220;Marion Barber&#8221;} {&#8220;Mr. Travis Tobaben&#8221;, &#8220;Travis Tobaben&#8221;}</conceptSynonyms><queryString>athlete</queryString><editDate /><author /><curator /><description>An athlete is a person who plays a sport competitively.</description><freebaseID>/sports/pro_athlete</freebaseID><comment /></Category><Category id="18"><categoryName>attraction</categoryName><englishName>tourist attractions</englishName><humanFormat>%s is a {tourist attraction}</humanFormat><populate>1</populate><visible>1</visible><generalizations>location</generalizations><mutexExceptions>building cave lake mountain beach island river trail farm</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances>&#8220;Empire State Building&#8221;,&#8221;Statue of Liberty&#8221;,&#8221;Grand Central Terminal&#8221;,&#8221; Rockefeller Center&#8221;,&#8221; Ellis Island Immigration Museum&#8221;,&#8221;Staten Island Ferry&#8221;,&#8221;American Museum of Natural History&#8221;,&#8221;Central Park&#8221;,&#8221;Metropolitan Museum of Art&#8221;,&#8221;The Museum of Modern Art&#8221;,&#8221;California Theme Park&#8221;,&#8221;Santa Cruz Boardwalk&#8221;,&#8221;Hearst Castle&#8221;,&#8221;mountains of California&#8221;,&#8221;Hollywood&#8221;,&#8221;Golden Gate Bridge&#8221;,&#8221;Johnson Space Center&#8221;,&#8221;Riverwalk&#8221;,&#8221;Schlitterbahn&#8221;,&#8221;SeaWorld&#8221;,&#8221;State Capitol&#8221;,&#8221;Story of Texas Museum&#8221;,&#8221;Texas State Aquarium&#8221;,&#8221;USS Lexington&#8221;,&#8221;Atwater Market&#8221;, &#8220;Bank of Montreal Building&#8221;,&#8221;Air Canada Centre&#8221;,&#8221;Allan Gardens&#8221;,&#8221;Arts on King&#8221;,&#8221;BCE Place&#8221;,&#8221;Bay of Spirits Gallery&#8221;,&#8221;CN Tower&#8221;,&#8221;BC Place Stadium&#8221;,&#8221;Bloedel Conservatory&#8221;,&#8221;Burnaby Village Museum&#8221;,&#8221;Canadian Memorial Church&#8221;,&#8221;Christ Church Cathedral&#8221;,&#8221;Cypress Mountain&#8221;,&#8221;Admiralty Arch&#8221;,&#8221;Albert Memorial&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>attraction</queryString><editDate>2010-06-18</editDate><author>Medhi (via Bryan)</author><curator /><description>sight or feature that you might visit as a tourist. Examples include monuments, parks, museums, and the like. This type includes Location, which means it is usually used for things which are themselves locations (like those described above</description><freebaseID>/travel/tourist_attraction</freebaseID><comment>Might extend this to events (e.g. filmFestival) as well later on when we can extract dates, or at least have all-pairs data that points to source documents whence the same could be extracted retrospectively</comment></Category><Category id="19"><categoryName>automobileEngine</categoryName><englishName>automobile engines</englishName><humanFormat>%s is a kind of {automobile engine}</humanFormat><populate>1</populate><visible>1</visible><generalizations>product</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Ford FE engine" "Ford 385 engine" "Ford Zetec engine" "Ford Duratec engine" "Ford 335 engine" "Ford Boss 302 engine" "Ford Windsor engine" "Ford Y-block engine" "Northstar engine series" "Chrysler Slant-6 engine" "Tritec engine" "Chrysler Flathead engine"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>automobile engine</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>The engine type is to be used to classify specific powerplants used in an automobile. These may be year-specific, but more frequently they often span multiple years, models, makes and generations.</description><freebaseID>/automotive/engine</freebaseID><comment /></Category><Category id="20"><categoryName>automobileMaker</categoryName><englishName>automobile maker</englishName><humanFormat>%s is an {automobile manufacturer}</humanFormat><populate>1</populate><visible>1</visible><generalizations>company</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Ford" "Honda" "Nissan" "Toyota" "SAAB" "Chevrolet" "Satrun" "General Motors" "Volvo" "Fiat" "Peugeot"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>automobile maker</queryString><editDate>2010-06-28</editDate><author>Burr</author><curator /><description>A company that manufactures motor-powered vehicles (eg., cars, motorcycles, buses, trucks and motorized bikes)</description><freebaseID>/automotive/company</freebaseID><comment /></Category><Category id="21"><categoryName>automobileModel</categoryName><englishName>car models</englishName><humanFormat>%s is a {model of automobile}</humanFormat><populate>1</populate><visible>1</visible><generalizations>vehicle</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Corolla" "Caprice" "Impala" "F150" "Eclipse" "Passat" "Forrester" "Camry" "Focus" "CR-V" "Accord" "Eclipse"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>automobile model</queryString><editDate>2010-06-28</editDate><author>Burr</author><curator /><description>A model is a specific car carried under a make.</description><freebaseID>/automotive/model</freebaseID><comment /></Category><Category id="22"><categoryName>awardTrophyTournament</categoryName><englishName>championships</englishName><humanFormat>%s is an {award, championship, or tournament trophy}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "Stanley Cup" "World Series" "French Open" "US Open" "NCAA Finals" "Super Bowl" "World Cup" "Indy 500" "National League Pennant" "British Open" "Kentucky Derby" "American League Pennant" "Colonial Cup" "Rose Bowl" "WNBA Finals"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>tournament (award OR trophy)</queryString><editDate /><author /><curator /><description>Sports award is a CVT which connects together the winner of a sports award, the award they won, the season for which they won the award and the team they represented (if applicable).</description><freebaseID>/sports/sports_championship</freebaseID><comment>Sports award in Freebase seems to be the closest definition to what NELL thinks as awardTrophyTournament category.</comment></Category><Category id="23"><categoryName>bacteria</categoryName><englishName>bacteria</englishName><humanFormat>%s is a {bacterium}</humanFormat><populate>1</populate><visible>1</visible><generalizations>species</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Bacillus" "Proteobacteria" "Yersinia pestis" "Escherichia coli" "Clostridium botulinum" "Rickettsia" "Staphylococcus aureus" "Cyanobacteria" "Legionella" "Spirochaete" "Firmicutes" "Actinobacteria"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>bacteria</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>single-celled or noncellular spherical or spiral or rod-shaped organisms lacking chlorophyll that reproduce by fission;</description><freebaseID>none</freebaseID><comment>edited on 2010-10-30 by Estevam</comment></Category><Category id="24"><categoryName>bakedGood</categoryName><englishName>baked goods</englishName><humanFormat>%s is a {baked good}</humanFormat><populate>1</populate><visible>1</visible><generalizations>food</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "muffins" "breads" "croissants" "tarts" "cookies" "flatbreads" "scones" "cakes" "tartlets" "biscotti" </seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>baked good</queryString><editDate /><author /><curator /><description>A food which is made through baking in an oven</description><freebaseID /><comment /></Category><Category id="25"><categoryName>bank</categoryName><englishName>banks</englishName><humanFormat>%s is a {bank}</humanFormat><populate>1</populate><visible>1</visible><generalizations>company</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>&#8220;PNC Bank&#8221; &#8220;Wells Fargo&#8221; &#8220;Nova Savings Bank&#8221; &#8220;First National&#8221; &#8220;Citizens Bank&#8221; &#8220;UFB Direct&#8221; &#8220;Federal Reserve Bank of Dallas&#8221; &#8220;Royal Bank of Canada&#8221; &#8220;Deutsche Bank&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate>2011-03-03</editDate><author>Bryan</author><curator /><description>Umbrella category for all kinds of banks</description><freebaseID /><comment>Needs more specializations.  Created in order for creditUnion to exist.</comment></Category><Category id="26"><categoryName>bathroomItem</categoryName><englishName>bathroom items</englishName><humanFormat>%s is an {item often found in a bathroom}</humanFormat><populate>1</populate><visible>1</visible><generalizations>householdItem</generalizations><mutexExceptions>floorItem wallItem tableItem</mutexExceptions><knownNegatives>"bed","coffee","food","refrigerator","wine"</knownNegatives><instanceType>all</instanceType><seedInstances>"sink" "toilet" "mirror" "bathtub" "shower" "medicine cabinet" "towel rack" "toothbrush" "towel" "dresser" "faucet" "paper towels" "soap"</seedInstances><seedExtractionPatterns>&#8220;_ are installed in the bathroom&#8221;</seedExtractionPatterns><conceptSynonyms /><queryString>bathroom item</queryString><editDate>2011-05-17</editDate><author>Tom</author><curator /><description>Any item that is commonly found in a bathroom or restroom. </description><freebaseID /><comment>introduced for vision and robotic systems</comment></Category><Category id="27"><categoryName>beach</categoryName><englishName>beaches</englishName><humanFormat>%s is a {beach}</humanFormat><populate>1</populate><visible>1</visible><generalizations>location</generalizations><mutexExceptions>attraction island park</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances>&#8220;Venice beach&#8221;,&#8221;Daytona beach&#8221;,&#8221;Bennett beach&#8221;,&#8221;La Jolla shores&#8221;,&#8221;Crosby beach&#8221;,&#8221;Black Brook beach&#8221;,&#8221;Children's pool&#8221;,&#8221;Windensea beach&#8221;,&#8221;Myrtle beach&#8221;,&#8221;Cocoa beach&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>beach</queryString><editDate>2010-09-06</editDate><author>M.Samadi</author><curator /><description>geological landform along the shoreline of an ocean, sea or lake. It usually consists of loose particles which are often composed of rock, such as sand, gravel, shingle, pebbles, waves or cobblestones</description><freebaseID>/en/beach</freebaseID><comment /></Category><Category id="28"><categoryName>bedroomItem</categoryName><englishName>bedroom items</englishName><humanFormat>%s is an {item often found in a bedroom}</humanFormat><populate>1</populate><visible>1</visible><generalizations>householdItem</generalizations><mutexExceptions>floorItem wallItem tableItem</mutexExceptions><knownNegatives>"whiteboard","blackboard","car","stove","bathtub","shower"</knownNegatives><instanceType>all</instanceType><seedInstances>"bed" "bed stand" "television" "table" "dresser" "vanity" "closet" "walk in closet" "mirror" "clothes" "radio" "alarm clock" "clock" "chair" "brush"</seedInstances><seedExtractionPatterns>&#8220;_ are found in the bedroom&#8221;</seedExtractionPatterns><conceptSynonyms /><queryString>bedroom item</queryString><editDate>2011-05-17</editDate><author>Tom</author><curator /><description>Any item that is commonly found in a bedroom. </description><freebaseID /><comment>introduced for vision and robotic systems</comment></Category><Category id="29"><categoryName>beverage</categoryName><englishName>beverages</englishName><humanFormat>%s is a {beverage}</humanFormat><populate>1</populate><visible>1</visible><generalizations>food</generalizations><mutexExceptions>agriculturalProduct</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances> "coffee" "Coke" "Pepsi" "mango lassi" "orange juice" "milk" "beer" "ale" "apple juice" "red wine"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>beverage</queryString><editDate /><author /><curator /><description>A liquid meant for human consumption</description><freebaseID>/food/beverage</freebaseID><comment>FB is still under construction in this area</comment></Category><Category id="30"><categoryName>biotechCompany</categoryName><englishName>biotech companies</englishName><humanFormat>%s is a {biotech company}</humanFormat><populate>1</populate><visible>1</visible><generalizations>company</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>&#8220;Anormed&#8221; &#8220;Millenium&#8221; &#8220;Searle&#8221; &#8220;Genzyme&#8221; &#8220;Pfizer&#8221; &#8220;Hoffman LaRoche&#8221; &#8220;Monsanto Co . ' s G . D  . Searle division&#8221; &#8220;Agouron Pharmaceuticals Inc .&#8221; &#8220;Texas Biotechnology&#8221; &#8220;Merck&#8221; &#8220;Cerylid Biosciences&#8221; &#8220;MediChem Research&#8221; &#8220;ImClone Systems&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate>2011-02-08</editDate><author>Bryan</author><curator /><description>A company in a biotechnology field, including pharmaceutical companies.</description><freebaseID /><comment>Added per relation seeds of February 2011 BLITZ run</comment></Category><Category id="31"><categoryName>bird</categoryName><englishName>birds</englishName><humanFormat>%s is a {bird}</humanFormat><populate>1</populate><visible>1</visible><generalizations>vertebrate</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "robins" "blackbirds" "cardinals" "orioles" "geese" "ducks" "swans" "flamingos" "pelicans" "penguins" "turkeys" "chickens" "woodpeckers" "bluejays" "swallows"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>bird</queryString><editDate /><author>Burr</author><curator /><description>Birds (class Aves) are winged, bipedal, endothermic (warm-blooded), egg-laying, vertebrate animals.</description><freebaseID>none</freebaseID><comment /></Category><Category id="32"><categoryName>blog</categoryName><englishName>blogs</englishName><humanFormat>%s is a {blog}</humanFormat><populate>1</populate><visible>1</visible><generalizations>website publication</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Huffington Post" "TechCruch" "Mashable" "Gizmodo" "Engadget" "Google Blog" "Boing Boing" "Lifehacker" "Ars Technica" "TMZ.com" "Gawker" "Smashing Magazine" "Daily Kos" "TreeHugger" "Autoblog"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>blog</queryString><editDate /><author>Burr</author><curator /><description>A blog (or weblog) is a user-generated website where entries are made in journal style and displayed in a reverse chronological order. Blogs often provide commentary or news on a particular subject, such as food, politics, or local news; some function as more personal online diaries.</description><freebaseID>/internet/blog</freebaseID><comment /></Category><Category id="33"><categoryName>boardGame</categoryName><englishName>board games</englishName><humanFormat>%s is a {board game}</humanFormat><populate>1</populate><visible>1</visible><generalizations>traditionalGame</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "backgammon" "Battleship" "checkers" "chess" "Diplomacy" "Go" "mancala" "Monopoly" "Parcheesi" "Pictionary" "Risk" "RoboRally" "Scrabble" "Settlers of Catan" "Sorry" "The Game of Life" "Yahtzee"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>board game</queryString><editDate>2010-12-09</editDate><author>Bryan</author><curator /><description>Games played with physical pieces on a board (electronic games not allowed)</description><freebaseID>/games/game</freebaseID><comment /></Category><Category id="34"><categoryName>bodyPart</categoryName><englishName>body parts</englishName><humanFormat>%s is a {part of the body}</humanFormat><populate>1</populate><visible>1</visible><generalizations>item</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "arm" "eye" "foot" "hand" "leg" "nose" "throat" "stomach" "spleen" "intestines" "brain" "knee" "thigh" "heart" "ear"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>body part</queryString><editDate /><author /><curator /><description>Refers to any part of the human body. It can be either visible to the naked eye (gross anatomical structure) or microscopic.</description><freebaseID>/medicine/anatomical_structure</freebaseID><comment /></Category><Category id="35"><categoryName>bone</categoryName><englishName>bones</englishName><humanFormat>%s is a {bone}</humanFormat><populate>1</populate><visible>1</visible><generalizations>bodyPart</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "atlas " "carpus" "incus" "malleus" "stapes" "clavicle" "acetabulum" "femur" "ulna" "sesamoid bone" "acromion" "scapula"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>bone</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"a bone or bone structure in a vertebrate"</description><freebaseID>/medicine/bone</freebaseID><comment /></Category><Category id="36"><categoryName>book</categoryName><englishName>books</englishName><humanFormat>%s is a {book}</humanFormat><populate>1</populate><visible>1</visible><generalizations>creativeWork</generalizations><mutexExceptions>politicsIssue</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Freakonomics" "Rich Dad Poor Dad" "The South Beach Diet" "The Da Vinci Code" "Harry Potter And The Goblet Of Fire" "The Purpose Driven Life" "Ulysses" "The Great Gatsby" "Brave New World" "The Grapes of Wrath"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>book</queryString><editDate /><author /><curator /><description>A book is a written work or a collection of written works in book form. "Book" represents the abstract notion of a particular book, rather than a particular edition.</description><freebaseID>/book/book</freebaseID><comment /></Category><Category id="37"><categoryName>brainTissue</categoryName><englishName>brain tissues</englishName><humanFormat>%s is a kind of {brain tissue}</humanFormat><populate>1</populate><visible>1</visible><generalizations>bodyPart</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "entorhinal cortex" "peripheral nervous system" "visual cortex" "putamen" "striatum" "broca's area" "substantia nigra" "cerebellum" "hippocampus" "hypothalamus" "cerebral cortex" "optic chiasm"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>brain tissue</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"any subregion of the brain, but not including single nerves"</description><freebaseID>/medicine/brain_structure</freebaseID><comment /></Category><Category id="38"><categoryName>bridge</categoryName><englishName>bridges</englishName><humanFormat>%s is a {bridge}</humanFormat><populate>1</populate><visible>1</visible><generalizations>building</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Dumbarton Bridge " "Golden Gate Bridge" "Mackinac Bridge" "Ponte Vecchio" "Sydney Harbour Bridge" "London Bridge" "Great Belt Fixed Link" "Brooklyn Bridge" "Blackfriars Bridge" "Tower Bridge" "Millennium Bridge " "Oresund Bridge"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>bridge</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"A bridge is a structure across water, valleys, railway cuts, areas of low elevation, or other features which are difficult to cross."</description><freebaseID>/transportation/bridge</freebaseID><comment /></Category><Category id="39"><categoryName>building</categoryName><englishName>buildings</englishName><humanFormat>%s is a {building}</humanFormat><populate>1</populate><visible>1</visible><generalizations>location geolocatableThing</generalizations><mutexExceptions>attraction transportation farm</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances> "barns" "houses" "apartments" "churches" "igloos" "libraries" "museums" "skyscrapers" "huts" "cottages" "Sears Tower" "Empire State Building" "Trump Tower" </seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>building</queryString><editDate /><author /><curator /><description>A building is a man-made structure designed for shelter or for continuous or periodic occupancy. All buildings are structures and therefore typed "Structure" which imparts other basic properties (see /architecture/structure). If something is not a structure, it can't be typed as a building.  This category does not include complexes of individual buildings.</description><freebaseID>/architecture/building</freebaseID><comment /></Category><Category id="40"><categoryName>buildingFeature</categoryName><englishName>building features</englishName><humanFormat>%s is {something found in or on buildings}</humanFormat><populate>1</populate><visible>1</visible><generalizations>item</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "arches" "chimneys" "closets" "doors" "windows" "shutters" "roofs" "walls" "elevators" "stairs" "porches" "decks" "blinds" "sheds" "hallways"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>building feature</queryString><editDate /><author /><curator /><description>Any physical property or physical attribute that a building might have.</description><freebaseID>none</freebaseID><comment /></Category><Category id="41"><categoryName>buildingMaterial</categoryName><englishName>building materials</englishName><humanFormat>%s is a {building material}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions>politicsIssue</mutexExceptions><knownNegatives /><instanceType>common</instanceType><seedInstances>concrete steel iron copper brass PVC glass rocks "ceramic tile" "vinyl flooring" </seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>building material</queryString><editDate /><author /><curator /><description>The construction material used for building</description><freebaseID>/architecture/lighthouse_construction_material</freebaseID><comment>The closest definition I can find in the freebase is 'lighthouse construction material'. However, why is buildingMaterial under abstractThing? Should it not be under item?</comment></Category><Category id="42"><categoryName>candy</categoryName><englishName>candy</englishName><humanFormat>%s is a kind of {candy}</humanFormat><populate>1</populate><visible>1</visible><generalizations>food</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Skittles" "Snickers" "caramels" "cotton candy" "Jawbreakers" "Nerds" "Sweet Tarts" "Lifesavers" "gummi bears" "chewing gum"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>candy</queryString><editDate /><author /><curator /><description>A food which is made primarily of sugar and generally sold for wide distribution.  This would include many dessert items, like pie and cake, that might not be strictly &#8220;candy&#8221; per se.</description><freebaseID /><comment /></Category><Category id="43"><categoryName>cardGame</categoryName><englishName>card games</englishName><humanFormat>%s is a {cardgame}</humanFormat><populate>1</populate><visible>1</visible><generalizations>traditionalGame</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "Poker" "Texas Holdem" "Cribbage" "Spades" "Hearts" "Whist" "Blackjack" "Baccarat" "Solitaire" "Rummy"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>card game</queryString><editDate>2010-12-09</editDate><author>Bryan</author><curator /><description>Games that are played with only a physical deck of cards (electronic games not allowed)</description><freebaseID /><comment /></Category><Category id="44"><categoryName>cave</categoryName><englishName>caves</englishName><humanFormat>%s is a {cave}</humanFormat><populate>1</populate><visible>1</visible><generalizations>location</generalizations><mutexExceptions>attraction</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Mammonth Cave" "Peak Cavern" "Blue Grotto " "Gaping Gill" "Kanheri Caves" "Ape Cave" "Voronya Cave" "Blue John Cavern" "Speedwell Cavern" "Swildon's Hole" "Ogof Draenen" "Ogof Craig a Ffynnon"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>cave</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"An underground space humans or animals can enter - a cave."</description><freebaseID>none</freebaseID><comment /></Category><Category id="45"><categoryName>celebrity</categoryName><englishName>celebrities</englishName><humanFormat>%s ia a {celebrity}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>male female actor athlete musician writer visualArtist chef comedian model personByLocation architect monarch criminal judge professor politician astronaut ceo</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Tom Cruise" "Alex Rodriguez" "Beyonce" "Mariah Carey" "Robert De Niro" "Gisele" "Andy Warhol" "Madonna" "Britney Spears" "Demi Moore" "Jessica Simpson" "Michael Jackson" "Mick Jagger" "Justin Timberlake" "Jon Stewart"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>celebrity</queryString><editDate /><author /><curator /><description>A celebrity is a person who is frequently featured in the media and is recognizable by the general public.</description><freebaseID>/celebrities/celebrity</freebaseID><comment /></Category><Category id="46"><categoryName>cellType</categoryName><englishName>cell types</englishName><humanFormat>%s is a type of {biological cell}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "red blood cells" "T cells" "B cells" "monocytes" "leucocytes" "lymphocytes" "macrophages" "HIV-infected cells" "granulocytes" "platelets" "malignant cells" "normal cells" "hepatic microsomes" "fibroblasts" "mononuclear cells"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>cell type</queryString><editDate /><author /><curator /><description>A cell type is a distinct morphological or functional form of cell (http://en.wikipedia.org/wiki/Cell_type)</description><freebaseID /><comment>cellType definition in freebase is only about battery cell type http://schemas.freebaseapps.com/type?id=%2Fengineering%2Fbattery_cell_type</comment></Category><Category id="47"><categoryName>ceo</categoryName><englishName>CEOs</englishName><humanFormat>%s is a {CEO}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>male female personByLocation professor celebrity</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Alain Belda" "Daniel Amos" "David Brown" "Edgar Bronfman" "Edward Johnson" "Jason Jiang" "Jeff Bezos" "John Antioco" "Kirk Kerkorian" "Richard Notebaert" "Rupert Murdoch" "Warren Buffett" "Steve Ballmer" "Steve Jobs" "Eric Schmidt"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>ceo</queryString><editDate /><author /><curator /><description>A CEO is the chief executive officer of a company.</description><freebaseID /><comment /></Category><Category id="48"><categoryName>characterTrait</categoryName><englishName>character traits</englishName><humanFormat>%s is a {character trait}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "courage" "honesty" "hypocrisy" "kindness" "vanity" "truthfulness" "sincerity" "willfulness" "reliability" "unreliability" "frankness" "generosity" "fortitude" "tenacity" "dishonesty"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>character trait</queryString><editDate /><author /><curator /><description>habitual patterns of behavior, thought, and emotion (http://en.wikipedia.org/wiki/Trait_theory)</description><freebaseID /><comment /></Category><Category id="49"><categoryName>cheese</categoryName><englishName>cheeses</englishName><humanFormat>%s is a {cheese}</humanFormat><populate>1</populate><visible>1</visible><generalizations>food</generalizations><mutexExceptions /><knownNegatives>"egg" "milk" "butter"</knownNegatives><instanceType>all</instanceType><seedInstances>"swiss cheese" "bleu cheese" "parmesan" "ricotta" "american cheese" "provolone" "brie" "cheddar" "feta" "chevre" "gouda" "mozzarella" "string cheese"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>cheese</queryString><editDate>2011-05-17</editDate><author>Tom</author><curator /><description>Any cheese</description><freebaseID>/food/cheese</freebaseID><comment>introduced for vision and robotic systems</comment></Category><Category id="50"><categoryName>chef</categoryName><englishName>chefs</englishName><humanFormat>%s is a {chef}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>celebrity female male personByLocation</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Thomas Keller" "Julia Child" "James Beard" "Nigella Lawson" "Alice Waters" "Fernand Point" "Paula Deen" "Anne Burrell" "Nancy Silverton" "Dominique Bouchet" "Dave Lieberman" "Bobby Flay"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>chef</queryString><editDate /><author>Burr</author><curator /><description>A chef is a professional cook.</description><freebaseID>/dining/chef</freebaseID><comment /></Category><Category id="51"><categoryName>chemical</categoryName><englishName>chemicals</englishName><humanFormat>%s is a {chemical}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions>drug</mutexExceptions><knownNegatives /><instanceType>common</instanceType><seedInstances> "ethylene glycol" "ammonium hydroxide" "calcium carbonate" "calcium oxide" "boric acid" "calcium hydroxide" "potassium carbonate" "ascorbic acid" "sodium hydroxide" "ammonium chloride"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>chemical</queryString><editDate /><author /><curator /><description>A chemical compound is a molecular substance consisting of multiple atoms which are bonded together by a chemical reaction. This type can be used for compounds made of the same element (e.g. allotropes) or multiple different elements. Compounds are different from chemical mixtures because mixtures can be mixed and separated physically, without a reaction; The elements of the periodic table</description><freebaseID>/chemistry/chemical_compound /chemistry/chemical_element</freebaseID><comment>It seems in freebase, chemical are separated into element, compound or mixtures. Perhaps we should also divide this category into such?</comment></Category><Category id="52"><categoryName>city</categoryName><englishName>cities</englishName><humanFormat>%s is a {city}</humanFormat><populate>1</populate><visible>1</visible><generalizations>geopoliticalLocation, geopoliticalOrganization geolocatableThing, visualizableScene</generalizations><mutexExceptions>county island</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Antwerp" "Baghdad" "Boston" "Brussels" "Chicago" "Frankfurt" "Hamburg" "Havana" "Houston" "Indianapolis" "London" "Moline" "Moscow" "Patras" "Pittsburgh"</seedInstances><seedExtractionPatterns /><conceptSynonyms>{&#8220;New York City&#8221;, &#8220;New York&#8221;} {&#8220;Los Angeles&#8221;, &#8220;L.A.&#8221;} {&#8220;Philadelphia&#8221;, &#8220;Philly&#8221;} {&#8220;Rio de Janeiro&#8221;, &#8220;Rio&#8221;} {&#8220;Mumbai&#8221;, &#8220;Bombay&#8221;} {&#8220;Washington D.C.&#8221;, &#8220;D.C.&#8221;} {&#8220;Salt Lake&#8221;, &#8220;Salt Lake City&#8221;} {&#8220;St. Petersburg&#8221;, &#8220;St Petersburg&#8221;} {&#8220;St Louis&#8221;, &#8220;St . Louis&#8221;} {&#8220;Fort Lauderdale&#8221;, &#8220;Ft . Lauderdale&#8221;}</conceptSynonyms><queryString>city</queryString><editDate /><author /><curator /><description>City/town/village refers to all named inhabited places at the most locally recognized level, but above the level of neighborhood. It is the most local region where there is a form of government or self-organization.   Cities/towns/villages are larger than neighborhoods, and are typically contained within a larger administrative division such as a county, department, province, etc. It should be noted, however, that large or significant cities may themselves also function as higher-level administrative divisions.   For more information, please see the Freebase wiki page on City/Town/Village.</description><freebaseID>/location/citytown</freebaseID><comment /></Category><Category id="53"><categoryName>clothing</categoryName><englishName>clothing</englishName><humanFormat>%s is a kind of {clothing}</humanFormat><populate>1</populate><visible>1</visible><generalizations>item</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "coats" "dresses" "pants" "shirts" "skirts" "pant suits" "gowns" "hats" "ear muffs" "socks" "mittens" "shoes" "underwear" "belts" "scarves"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>clothing</queryString><editDate /><author /><curator /><description>This type is for kinds of garments or clothing.  For lack of a meaningful way to constrain this category through definition or existent sibling categories, particularly when it comes to adorning the body for purposes of fashion (e.g. jewlery, colored contact lenses, costumery) or of utility (e.g. armor, kneepads or other sports equipment, corrective lenses), this will include anything wearable.</description><freebaseID>/fashion/garment</freebaseID><comment>Freebase's category is small and limited to &#8220;conventional&#8221; clothing, and all the borderline cases I checked, aside from some jewelry, were simply uncategorized, so Freebase seems of little help in delineating the boundaries of this category.</comment></Category><Category id="54"><categoryName>coach</categoryName><englishName>coaches</englishName><humanFormat>%s {coaches} a sports team</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>male female athlete personByLocation professor</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Bobby Bowden" "Dave Wannstedt" "Doc Rivers" "Jay Triano" "Joe Paterno" "John Russell" "Larry Brown" "Les Miles" "Lovie Smith" "Mike Scioscia" "Mike Shanahan" "Mike Sherman" "Pete Carroll" "Phil Jackson" "Ron Zook"</seedInstances><seedExtractionPatterns /><conceptSynonyms>{&#8220;Bobby Johnson&#8221;, &#8220;Coach Johnson&#8221;} {&#8220;Mike Mularkey&#8221;, &#8220;Coach Mularkey&#8221;} {&#8220;Gary Kubiak&#8221;, &#8220;Head Coach Gary Kubiak&#8221;} {&#8220;Bill Parcells&#8221;, &#8220;Parcells&#8221;} {&#8220;Chris Thompson&#8221;, &#8220;Coach Thompson&#8221;} {&#8220;Coach Wooden&#8221;, &#8220;John Wooden&#8221;} {&#8220;Phil Garner&#8221;, &#8220;Manager Phil Garner&#8221;} {&#8220;Dusty Baker&#8221;, &#8220;Manager Dusty Baker&#8221;} {&#8220;Bobby Williams&#8221;, &#8220;Bob Williams&#8221;} {&#8220;Bob Stoops&#8221;, &#8220;Head Coach Bob Stoops&#8221;}</conceptSynonyms><queryString>coach</queryString><editDate /><author /><curator /><description>A coach is a trainer for a sports team. He leads the team in exercises and manages the team during gameplay. This category includes assistant coaches and other trainers.</description><freebaseID /><comment /></Category><Category id="55"><categoryName>cognitiveActions</categoryName><englishName>cognitive processes</englishName><humanFormat>%s is a {cognitive action}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances>thinking pondering concluding determining judging envisioning brooding fathoming knowing imagining learning</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>cognitive action</queryString><editDate /><author /><curator /><description>pertaining "to the action or process of knowing" (http://en.wikipedia.org/wiki/Cognitive_science)</description><freebaseID /><comment /></Category><Category id="56"><categoryName>color</categoryName><englishName>colors</englishName><humanFormat>%s is a {color}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing, visualizableAttribute</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "black" "blue" "cyan" "green" "indigo" "red" "sienna" "yellow" "violet " "purple" "brown" "ultramarine"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>color</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>Color (or colour) is the visual perceptual property corresponding in humans to the categories called red, yellow, white, etc.</description><freebaseID>/visual_art/color</freebaseID><comment /></Category><Category id="57"><categoryName>comedian</categoryName><englishName>comedians</englishName><humanFormat>%s is a {commedian}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>actor celebrity male female writer personByLocation</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Billy Crystal" "Chris Morris " "David Letterman" "Denis Leary" "Garrison Keillor" "John Cleese" "John Belushi" "Jay Leno" "Monty Python" "Mel Brooks" "Mel Smith" "Spike Milligan"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>commedian</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"a person who makes a living by making you laugh"</description><freebaseID>none</freebaseID><comment /></Category><Category id="58"><categoryName>company</categoryName><englishName>companies</englishName><humanFormat>%s is a {company}</humanFormat><populate>1</populate><visible>1</visible><generalizations>organization </generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "AFLAC" "Alcoa" "Amazon" "AMD" "Apple" "Berkshire Hathaway" "Blockbuster" "Focus Media Holding" "General Electric" "General Motors" "Hilton Hotels" "Intel" "Intuit" "Micron" "Microsoft" &#8220;the company&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms>{&#8220;General Motors&#8221;, &#8220;GM&#8221;} {&#8220;Adobe Systems&#8221;, &#8220;Adobe&#8221;} {&#8220;Apple&#8221;, &#8220;Apple Computer&#8221;} {&#8220;Dell&#8221;, &#8220;Dell Computer&#8221;} {&#8220;Cisco&#8221;, &#8220;Cisco Systems&#8221;} {&#8220;Southwest Airlines&#8221;, &#8220;Southwest&#8221;} {&#8220;Biogen&#8221;, &#8220;Biogen Idec&#8221;} {&#8220;Dow Chemical Company&#8221;, &#8220;Dow Chemical&#8221;} {&#8220;United&#8221;, &#8220;United Airlines&#8221;} {&#8220;Shell&#8221;, &#8220;Shell Oil&#8221;}</conceptSynonyms><queryString>company</queryString><editDate /><author /><curator /><description>A company is an organization whose goal is to make money</description><freebaseID>/business/business_operation</freebaseID><comment /></Category><Category id="59"><categoryName>condiment</categoryName><englishName>condiments</englishName><humanFormat>%s is a {condiment}</humanFormat><populate>1</populate><visible>1</visible><generalizations>food</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "ketchup" "yellow mustard" "mayonnaise" "dijon mustard" "soy sauce" "barbecue sauce" "hot sauce" "wasabi" "duck sauce" "horseradish" </seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>condiment</queryString><editDate /><author /><curator /><description>A sauce or seasoning added to food to impart a particular flavor or to complement the dish. (Wikipedia)</description><freebaseID /><comment>The definition has been extended beyond strictly candy for expediency.  We can factor other sweet things out if/when somebody wants to make a decent food/cooking subontology.</comment></Category><Category id="60"><categoryName>conference</categoryName><englishName>conferences</englishName><humanFormat>%s is a {conference}</humanFormat><populate>1</populate><visible>1</visible><generalizations>event</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "ICML" "NIPS" "AAAI" "IJCAI" "G20" "TED Conference" "KDD" "ACM" "WSDM" "Semantic Web Conference" "SIGIR" "SODA" "ISWC" "SIGGRAPH" "CIKM"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>conference</queryString><editDate /><author /><curator /><description>A conference is a regular or recurring meeting of people to "confer" about a topic. It may take many forms.</description><freebaseID>/conferences/conference_series</freebaseID><comment /></Category><Category id="61"><categoryName>consumerElectronicItem</categoryName><englishName>consumer electronics</englishName><humanFormat>%s is a {consumer electronic device}</humanFormat><populate>1</populate><visible>1</visible><generalizations>item</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "video games" "computer software" "operating systems" "inkjet printers" "laptops" "LCD monitors" "game consoles" "speakers" "earbuds" "headphones" "external harddrives" "memory card readers" "computers"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>consumer electronic</queryString><editDate /><author /><curator /><description>An item intended for ordinary people that runs on electricity, excluding appliances. This category includes accessories for consumer electronic items, such as video games and DVDs.</description><freebaseID /><comment /></Category><Category id="62"><categoryName>continent</categoryName><englishName>continents</englishName><humanFormat>%s is a {continent}</humanFormat><populate>0</populate><visible>0</visible><generalizations>geopoliticalLocation</generalizations><mutexExceptions>island country</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Africa" "Antarctica" "Asia" "Australia" "Europe" "North America" "South America"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate /><author /><curator /><description>A continent is a large land mass, defined mostly by conventional use, but closely related to tectonic plates within the earth's crust.</description><freebaseID>/location/continent</freebaseID><comment /></Category><Category id="63"><categoryName>convention</categoryName><englishName>conventions</englishName><humanFormat>%s is a {convention}</humanFormat><populate>1</populate><visible>1</visible><generalizations>event</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Electronic Entertainment Expo" "Origins Game Fair" "Midwestcon" "Consumer Electronics Show" "Anthrocon" "Otakon" "Further Confusion" "ConFurence" "Vericon" "Gen Con" "Linucon" "Game Developers Conference"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>convention</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"a large meeting, such as the Star Trek Convention"</description><freebaseID>none</freebaseID><comment>"this should probably be merged with Conference"</comment></Category><Category id="64"><categoryName>country</categoryName><englishName>countries</englishName><humanFormat>%s is a {country}</humanFormat><populate>1</populate><visible>1</visible><generalizations>geopoliticalLocation, geopoliticalOrganization geolocatableThing</generalizations><mutexExceptions>island continent</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Austria" "Brasil" "Canada" "Egypt" "France" "Germany" "Indonesia" "Iraq" "Mexico" "Morocco" "Netherlands" "New Zealand" "South Africa" "Togo" "United States"</seedInstances><seedExtractionPatterns /><conceptSynonyms>{&#8220;Dominican Republic&#8221;, &#8220;The Dominican Republic&#8221;}, {&#8220;U.S.A.&#8221;, &#8220;United States of America&#8221;} {&#8220;Somali Republic&#8221;, &#8220;Somalia&#8221;} {&#8220;Yugoslav Federation&#8221;, &#8220;Yugoslavia&#8221;} {&#8220;Bosnia&#8221;, &#8220;Bosnia-Herzegovina&#8221;} {&#8220;S.Korea&#8221;, &#8220;South Korea&#8221;} {&#8220;The Philippines&#8221;, &#8220;Philippines&#8221;} {&#8220;Laos&#8221;, &#8220;Lao People ' s Democratic Republic&#8221;} {&#8220;Tadjikistan&#8221;, &#8220;Tajikistan&#8221;} {&#8220;The United Kingdom&#8221;, &#8220;United Kingdom&#8221;}</conceptSynonyms><queryString>country</queryString><editDate /><author /><curator /><description>The type "country" in Freebase can and should be used with a variety of topics. The most common will be probably be current and former independent nations, potentially including composite entities such as empires. It can also be used for autonomous entities within such a composite, such as the four current constituent countries (England, Northern Ireland, Scotland, and Wales) of the United Kingdom.  Anything having an ISO country code qualifies as a country, including contested countries like Taiwan, and including territories of minor or no population.</description><freebaseID>/location/country</freebaseID><comment /></Category><Category id="65"><categoryName>county</categoryName><englishName>counties</englishName><humanFormat>%s is a {county}</humanFormat><populate>1</populate><visible>1</visible><generalizations>geopoliticalLocation, geopoliticalOrganization</generalizations><mutexExceptions>city</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances>&#8220;Bornholm&#8221; &#8220;Londonderry&#8221; &#8220;Utena County&#8221; &#8220;Stewart Island&#8221; &#8220;Telemark&#8221; &#8220;Essex County&#8221; &#8220;Gloucestershire&#8221; &#8220;Shetland&#8221; &#8220;Clwyd&#8221; &#8220;Orleans Parish&#8221; &#8220;Renfrew County&#8221; &#8220;Washington County&#8221; &#8220;San Bernadino County&#8221; &#8220;Los Angeles County&#8221; &#8220;Lafayette County&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>county</queryString><editDate>2010-06-07</editDate><author>Bryan</author><curator /><description>Intermediate administrative region between state/province and local munincipal.  This category also encompasses customary abberations, such as the boroughs of the City of Greater New York being treated as logically equivalent to counties.</description><freebaseID>/location/us_county</freebaseID><comment /></Category><Category id="66"><categoryName>creativeWork</categoryName><englishName>creative works</englishName><humanFormat>%s is a {creative work}</humanFormat><populate>0</populate><visible>0</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>creative work</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"the product of any creative effort, including movies, paintings, musical songs, etc."</description><freebaseID>none</freebaseID><comment /></Category><Category id="67"><categoryName>creditUnion</categoryName><englishName>credit unions</englishName><humanFormat>%s is a {credit union}</humanFormat><populate>1</populate><visible>1</visible><generalizations>company</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate>2011-03-03</editDate><author>Bryan</author><curator /><description>Banks that are credit unions</description><freebaseID /><comment>Created to absorb misclasified instances from tradeUnion</comment></Category><Category id="68"><categoryName>crimeOrCharge</categoryName><englishName>crimes</englishName><humanFormat>%s ia a {crime or charge}</humanFormat><populate>1</populate><visible>1</visible><generalizations>event</generalizations><mutexExceptions>militaryEventType</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances>&#8220;murder&#8221;, &#8220;arson&#8221;, &#8220;larceny&#8221;, &#8220;assault&#8221;, &#8220;felony&#8221;, &#8220;conspiracy to defraud&#8221;, &#8220;libel&#8221;, &#8220;slander&#8221;, &#8220;public intoxication&#8221;, &#8220;moving violation&#8221;, &#8220;DWI&#8221;, &#8220;embezzlement&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>crime</queryString><editDate>2013-02-15</editDate><author>Bryan</author><curator /><description>A crime or other kind of offence or violation with which a person can be charged</description><freebaseID /><comment>TAC KBP 2012</comment></Category><Category id="69"><categoryName>criminal</categoryName><englishName>criminals</englishName><humanFormat>%s is a {criminal}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>male female personByLocation celebrity</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Al Capone" "Jack Ruby" "John Walker Lindh" "Mumia Abu-Jamal" "Mehmet Ali A&#287;ca" "Mark Whitacre" "Timothy McVeigh" "Andrew Fastow" "John Dillinger" "Charles Manson" "Charles Ponzi" "Luke Helder"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>criminal</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"a person who commits a crime"</description><freebaseID>none</freebaseID><comment /></Category><Category id="70"><categoryName>crustacean</categoryName><englishName>crustaceans</englishName><humanFormat>%s is a {crustacean}</humanFormat><populate>1</populate><visible>1</visible><generalizations>arthropod</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "branchiopoda" "antarctic krill" "crayfish" "crustacean" "lobster" "shrimp" "prawn" "daphnia" "portunus" "crab" "spiny lobster" "barnacle"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>crustacean</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>form a very large group of arthropods, usually treated as a subphylum, which includes such familiar animals as crabs, lobsters, crayfish, shrimp, krill and barnacles. Like other arthropods, crustaceans have an exoskeleton, which they moult to grow. They are distinguished from other groups of arthropods, such as insects, myriapods and chelicerates by the possession of biramous (two-parted) limbs, and by the nauplius form of the larvae.</description><freebaseID>none</freebaseID><comment>edited on 2010-10-30 by Estevam</comment></Category><Category id="71"><categoryName>currency</categoryName><englishName>currencies</englishName><humanFormat>%s is a {currency}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions>politicsIssue</mutexExceptions><knownNegatives /><instanceType>common</instanceType><seedInstances> "dollars" "pesos" "rubles" "yen" "euros" "pounds" "kroner" "dinars" "shillings" "francs" "lire" "rands" "rupees" "marks" "sheqels"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>currency</queryString><editDate /><author /><curator /><description>A currency is money that is used (or has been used) as a medium of exchange</description><freebaseID>/finance/currency</freebaseID><comment /></Category><Category id="72"><categoryName>date</categoryName><englishName>dates</englishName><humanFormat>%s is a {date}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "September 11 , 2001" "last Tuesday" "December 25" "next Sunday" "January 29" "July 4, 1776" "next Monday" "last Saturday" "March 12" "April 1"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>date</queryString><editDate /><author /><curator /><description>a particular month, day, and year at which some event happened or will happen; the time or period to which any event or thing belongs; period in general (http://dictionary.reference.com/browse/date)</description><freebaseID /><comment /></Category><Category id="73"><categoryName>dateLiteral</categoryName><englishName>dates</englishName><humanFormat>%s is a {date}</humanFormat><populate>0</populate><visible>0</visible><generalizations>date</generalizations><mutexExceptions>year</mutexExceptions><knownNegatives /><instanceType>javaDateFormat</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>literal date</queryString><editDate>2010-07-05</editDate><author>Bryan</author><curator /><description>represents a date.</description><freebaseID>/type/datetime</freebaseID><comment /></Category><Category id="74"><categoryName>dayOfWeek</categoryName><englishName /><humanFormat>%s is a {day of the week}</humanFormat><populate>0</populate><visible>0</visible><generalizations>date</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Monday" "Tuesday" "Wednesday" "Thursday" "Friday" "Saturday" "Sunday"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>day of the week</queryString><editDate /><author>Burr</author><curator /><description>Seven named days of the week</description><freebaseID>/time/day_of_week</freebaseID><comment /></Category><Category id="75"><categoryName>director</categoryName><englishName>directors</englishName><humanFormat>%s is a {director}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>male female actor personByLocation professor</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>director</queryString><editDate>2010-11-01</editDate><author>Bryan </author><curator /><description>Movie directors.</description><freebaseID /><comment>Created during feedback @ 160 because actor was picking up directors.</comment></Category><Category id="76"><categoryName>disease</categoryName><englishName>diseases</englishName><humanFormat>%s is a {disease}</humanFormat><populate>1</populate><visible>1</visible><generalizations>physiologicalCondition</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "lung cancer" "diabetes" "breast cancer" "arthritis" "avian flu" "meningitis" "smallpox" "rubella" "Ebola" "Encephalitis" "bronchitis" &#8220;depression&#8221; &#8220;broken bones&#8221; &#8220;hypertension&#8221; &#8220;heart attacks&#8221; &#8220;stroke&#8221; &#8220;kidney stones&#8221; &#8220;HIV&#8221; &#8220;AIDS&#8221; &#8220;HIV/AIDS&#8221; &#8220;breast cancer&#8221; &#8220;prostate cancer&#8221; &#8220;cancer&#8221; &#8220;high blood pressure&#8221; &#8220;human lung cancer&#8221; &#8220;mouse muscle cancer&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>disease</queryString><editDate /><author /><curator /><description>A disease is an abnormal condition of the human body that causes discomfort or impairs bodily functions. This type also includes medical conditions such as injuries, disabilities, disorders, syndromes, etc. that affect the normal functioning of a person, whether physically or mentally. </description><freebaseID>/medicine/disease</freebaseID><comment>Freebase wiki page for this does not suggest that physiologicalCondition should instead map to /medicine/disease</comment></Category><Category id="77"><categoryName>drug</categoryName><englishName>drugs</englishName><humanFormat>%s is a {drug}</humanFormat><populate>1</populate><visible>1</visible><generalizations>product</generalizations><mutexExceptions>chemical</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Aspirin" "Ampicillin" "Amphetamine" "Amoxicillin" "Bacillus Calmette-Gu&#233;rin" "Chloramphenicol" "Ciprofloxacin" "Carbamazepine" "Cocaine" "Dimethyltryptamine" "Dehydroepiandrosterone" "MDMA" &#8220;Viracept&#8221; &#8220;AZT&#8221; &#8220;Atripla&#8221; &#8220;anti-retroviral&#8221; &#8220;Crixivan&#8221; &#8220;antiretroviral&#8221; &#8220;antiretroviral (ARV)&#8221; &#8220;protease inhibitors&#8221; &#8220;tamoxifen&#8221; &#8220;letrozole&#8221; &#8220;GnRH analogues&#8221; &#8220;Ebitux&#8221; &#8220;Taxol&#8221; &#8220;doxorubicin&#8221; &#8220;cyclophosphamide&#8221; &#8220;shark cartilage&#8221; &#8220;Avapro HCT&#8221; &#8220;warfarin&#8221; &#8220;lectins&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>drug</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>A drug is a chemical substance that has, or is reputed to have, a phyisological effect on an organism. Medicinal, herbal, and illegal drugs can be included in this type.</description><freebaseID>/medicine/drug</freebaseID><comment>Also used for pharmaceuticalSubstance for February 2011 BLITZ run</comment></Category><Category id="78"><categoryName>economicSector</categoryName><englishName>economic sectors</englishName><humanFormat>%s is an {economic sector}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions>politicsIssue academicField</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances> "advertising" "aerospace" "agriculture" "aluminum" "biotechnology" "computer hardware" "computer software" "consumer banking" "consumer electronics" "financial services" "imaging" "investment banking" "pharmaceuticals" "semiconductors" "video games"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>economic sector</queryString><editDate /><author /><curator /><description>An economy may include several sectors (also called industries) (http://en.wikipedia.org/wiki/Economic_sectors)</description><freebaseID>/business/industry</freebaseID><comment /></Category><Category id="79"><categoryName>election</categoryName><englishName>elections</englishName><humanFormat>%s is an {election}</humanFormat><populate>1</populate><visible>1</visible><generalizations>event</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "2004 presidential election" "2000 presidential election"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>election</queryString><editDate /><author /><curator /><description>An opportunity for constituents to vote for a political party or candidate for a governmental office or seat, or the ability to run for a governmental office or seat (as is the case with primaries). (FreeBase)</description><freebaseID>/government/election</freebaseID><comment /></Category><Category id="80"><categoryName>emotion</categoryName><englishName>emotions</englishName><humanFormat>%s is an {emotion}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "anxiety" "depression" "hate" "joy" "love" "happiness" "sadness" "fear" "anger" "frustration" "glee" "bliss" "jealousy" "enthusiasm" "boredom"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>emotion</queryString><editDate /><author /><curator /><description>Emotion is the complex psychophysiological experience of an individual's state of mind as interacting with biochemical (internal) and environmental (external) influences (http://en.wikipedia.org/wiki/Emotion)</description><freebaseID /><comment /></Category><Category id="81"><categoryName>ethnicGroup</categoryName><englishName>nationalities</englishName><humanFormat>%s is an {ethnic group}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions>politicsIssue</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Americans" "Brazilians" "British" "Chinese" "Dutch" "English" "French" "Germans" "Indians" "Romanians"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>ethnic group</queryString><editDate /><author /><curator /><description>A group of individuals that share common characteristics, such as ancestry, country of origin, language, religion, culture and physical appearance.</description><freebaseID>/people/ethnicity</freebaseID><comment>should we rename to ethnicity?</comment></Category><Category id="82"><categoryName>event</categoryName><englishName>events</englishName><humanFormat>%s is an {event}</humanFormat><populate>0</populate><visible>0</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>event</queryString><editDate /><author /><curator /><description>An event is a topic that can be described by the time or date at which it happened. Long-lasting events may be described as occurring between two dates. It is sometimes appropriate to create abstract events, as collections of other events</description><freebaseID>/time/event</freebaseID><comment /></Category><Category id="83"><categoryName>eventOutcome</categoryName><englishName>outcomes</englishName><humanFormat>%s is an {event outcome}</humanFormat><populate>1</populate><visible>1</visible><generalizations>event</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances>success failure stalemate triumph miscue misfortune victory misadventure defeat loss</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>event outcome</queryString><editDate /><author /><curator /><description>a final product or end result; consequence; issue (http://dictionary.reference.com/browse/outcome)</description><freebaseID /><comment /></Category><Category id="84"><categoryName>farm</categoryName><englishName>farms</englishName><humanFormat>%s is a {farm}</humanFormat><populate>1</populate><visible>1</visible><generalizations>location</generalizations><mutexExceptions>building attraction</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances>"Wood Prairie Farm" "Heritage Farms" "Waltham Fields Community Farm" "Delta Farm" "Jacobs Farm" "Johnson Farm" "Zenger Farm" "Rogers Farm" "Maple View Farm" "South Farm" "Roxbury Farm" "Cole Farms"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>farm</queryString><editDate>2011-03-25</editDate><author>Justin</author><curator /><description>an area of land, including various structures, devoted primarily to the practice of producing and managing food (produce, grains, or livestock), fibres and, increasingly, fuel.</description><freebaseID>none</freebaseID><comment /></Category><Category id="85"><categoryName>female</categoryName><englishName>women</englishName><humanFormat>%s is a {female}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>actor athlete celebrity ceo coach journalist politician scientist musician writer chef visualArtist mlAuthor architect astronaut comedian criminal judge model personByLocation monarch director professor</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Madonna" "Barbara Boxer" "Hillary Clinton" "Catherine Zeta-Jones" "Helen Keller" "Britney Spears" "Halle Berry" "Jessica Alba" "Beyonce" "Mariah Carey" "Aretha Franklin" "Serena Williams" "Anne Frank" "Michelle Obama" "Barbara Walters"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>female</queryString><editDate /><author /><curator /><description>This category includes all female human beings.</description><freebaseID /><comment>Freebase's &#8220;person&#8221; type has a &#8220;gender&#8221; property</comment></Category><Category id="86"><categoryName>filmFestival</categoryName><englishName>film festivals</englishName><humanFormat>%s is a film {festival}</humanFormat><populate>1</populate><visible>1</visible><generalizations>event</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Venice Film Festival" "Cannes Film Festival" "Toronto International Film Festival" "International Film Festival Rotterdam" "Sarajevo Film Festival" "Istanbul International Film Festival" "Melbourne International Film Festival" "Vancouver International Film Festival" "Cinequest Film Festival" "Planet in Focus" "Hong Kong International Film Festival" "International Documentary Film Festival Amsterdam"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>film festival</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"Film festivals at which movies are shown."</description><freebaseID>/film/film_festival</freebaseID><comment /></Category><Category id="87"><categoryName>fish</categoryName><englishName>fish</englishName><humanFormat>%s is a {fish}</humanFormat><populate>1</populate><visible>1</visible><generalizations>vertebrate</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "sharks" "anchovies" "bass" "anglers" "cod" "haddock" "salmon" "goldfish" "red snappers" "herrings" "catfish" "halibut" "pike" "sturgeon" "tuna"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>fish</queryString><editDate /><author>Burr</author><curator /><description>A fish is any aquatic vertebrate animal that is covered with scales, and equipped with two sets of paired fins and several unpaired fins. Most fish are "cold-blooded", or ectothermic, allowing their body temperatures to vary as ambient temperatures change.</description><freebaseID>none</freebaseID><comment /></Category><Category id="88"><categoryName>floorItem</categoryName><englishName>floor items</englishName><humanFormat>%s is an {item found on the floor}</humanFormat><populate>1</populate><visible>1</visible><generalizations>householdItem</generalizations><mutexExceptions>kitchenItem hallwayItem bathroomItem officeItem bedroomItem</mutexExceptions><knownNegatives>"knife","scissors","wine glass","mirror","window"</knownNegatives><instanceType>all</instanceType><seedInstances>"carpet" "floor mat" "shoe" "table" "chair" "sofa" "couch" "desk" "furniture" "rug" "bench" "garbage can" "trash bin" "trash can"</seedInstances><seedExtractionPatterns>&#8220;_ are placed on the floor&#8221;</seedExtractionPatterns><conceptSynonyms /><queryString>floor item</queryString><editDate>2011-05-17</editDate><author>Tom</author><curator /><description>Any item that is commonly found on the floor</description><freebaseID /><comment>introduced for vision and robotic systems</comment></Category><Category id="89"><categoryName>food</categoryName><englishName>foods</englishName><humanFormat>%s is a {food}</humanFormat><populate>1</populate><visible>1</visible><generalizations>item visualizableObject</generalizations><mutexExceptions>fungus</mutexExceptions><knownNegatives /><instanceType>common</instanceType><seedInstances> "tomatoes" "steak" "ice cream" "pumpkin pie" "artichokes" "cheddar cheese" "spinach" "cookies" "apples" "lettuce" "bell peppers" "popcorn" "pancakes" "yogurt" "celery"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>food</queryString><editDate /><author /><curator /><description>A food is any edible substance with nutritional value, whether it's a basic foodstuff like rice or apples, or a commercial product like Poptarts or I Can't Believe It's Not Butter.  &#8220;Nutritional value&#8221; encompasses anything useful for growth or life, such as water, so long as the organism gets it through ingestion.</description><freebaseID>/food/food</freebaseID><comment>/food/nutrient looks good by description, but is obviously different by its instances.</comment></Category><Category id="90"><categoryName>fruit</categoryName><englishName>fruits</englishName><humanFormat>%s is a {fruit}</humanFormat><populate>1</populate><visible>1</visible><generalizations>food</generalizations><mutexExceptions>plant agriculturalProduct</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances> "apples" "oranges" "pears" "pineapples" "strawberries" "lemons" "watermelons" "grapes" "limes" "kiwis"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>fruit</queryString><editDate /><author /><curator /><description>A structure of a plant that contains its seeds.  This is closer to the botanical definition than the cullinary / colloquial definition, but is technically niether.</description><freebaseID>none</freebaseID><comment>We should split this into botanical fruit and &#8220;mom&#8221; fruit.  Note Wikipedia's comments about non-flowering plants and accessory fruits.</comment></Category><Category id="91"><categoryName>fungus</categoryName><englishName>fungi</englishName><humanFormat>%s is a {fungus}</humanFormat><populate>1</populate><visible>1</visible><generalizations>item species</generalizations><mutexExceptions>food</mutexExceptions><knownNegatives /><instanceType>common</instanceType><seedInstances> "mushrooms" "yeast" "mold" "chitin" "slime mold" "water mold" "fly agaric" "toadstools" "portabellos" "death caps" "morels" "tufts" "milk-caps"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>fungus</queryString><editDate /><author /><curator /><description>Member of kingom fungi.</description><freebaseID>none</freebaseID><comment /></Category><Category id="92"><categoryName>furniture</categoryName><englishName>furniture</englishName><humanFormat>%s is a kind of {furniture}</humanFormat><populate>1</populate><visible>1</visible><generalizations>householdItem</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "beds" "chairs" "desks" "dressers" "tables" "couches" "cabinets" "sofas"  "ottomans" "stools" "coffee tables" "end tables" "coffee tables" "buffets" "armoires"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>furniture</queryString><editDate /><author /><curator /><description>Any functional or decorative mobile object with which a dwelling might be said to be &#8220;furnished&#8221;, or any immobile variant of the same (such as an oven built into a wall).</description><freebaseID>none</freebaseID><comment /></Category><Category id="93"><categoryName>game</categoryName><englishName>games</englishName><humanFormat>%s is a {game}</humanFormat><populate>0</populate><visible>0</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>game</queryString><editDate>2010-12-09</editDate><author>Bryan</author><curator /><description>General parent category for more specific kinds of games</description><freebaseID>none</freebaseID><comment /></Category><Category id="94"><categoryName>gameScore</categoryName><englishName>scores</englishName><humanFormat>%s is the {final score} of a sports game</humanFormat><populate>0</populate><visible>0</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>regexp:\A\d+\s*-\s*\d+\z</instanceType><seedInstances>2-3 3-4 3-5 4-5 1-2 6-8 5-6 4-6 3-0 3-2</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>game score</queryString><editDate>2010-07-05</editDate><author>Bryan</author><curator /><description /><freebaseID /><comment>Sport game score NPs capturing the score of both the winner and loser.  These are the 10 most common from al-pairs-2010-04-10</comment></Category><Category id="95"><categoryName>geolocatableThing</categoryName><englishName>geolocatable thing</englishName><humanFormat>%s is a {geolocatable thing}</humanFormat><populate>0</populate><visible>1</visible><generalizations>everyPromotedThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate>2012-11-14</editDate><author>Bryan for LatLongTT</author><curator /><description /><freebaseID /><comment /></Category><Category id="96"><categoryName>geometricShape</categoryName><englishName>geometric shapes</englishName><humanFormat>%s is a {geometric shape}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing, visualizableAttribute</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "squares" "ovals" "triangles" "hexagons" "cubes" "octagons" "ellipses" "nonogons" "pentagons" "trapezoids" "parallelograms"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>geometric shape</queryString><editDate /><author /><curator /><description>geometrical information that remains when location, scale and rotational effects are filtered out from an object (http://en.wikipedia.org/wiki/List_of_geometric_shapes)</description><freebaseID /><comment>Rename to shape</comment></Category><Category id="97"><categoryName>geopoliticalEntity</categoryName><englishName>geopolitical entity</englishName><humanFormat>%s is a {geopolitical entity}</humanFormat><populate>0</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate>2011-10-13</editDate><author>Brryan</author><curator /><description>That which would an object of geopolitical analysis, including but not limited to countries, administrative or de facto subdivisions thereof, supernational groupings and organizations, geographical regions, and cultural groups.</description><freebaseID>none</freebaseID><comment>Added per P3 KBP.  This clearly makes abstractThing, location, and organization all non-mutex, but they were anyway, and this is a good example of why our high-up ontological breakdown needs revisied.</comment></Category><Category id="98"><categoryName>geopoliticalLocation</categoryName><englishName>geopolitical location</englishName><humanFormat>%s is a {geopolitical entity} that is a location</humanFormat><populate>1</populate><visible>1</visible><generalizations>geopoliticalEntity, location</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate>2011-10-13</editDate><author>Brryan</author><curator /><description>Those geopolitical entities that are location</description><freebaseID>none</freebaseID><comment /></Category><Category id="99"><categoryName>geopoliticalOrganization</categoryName><englishName>geopolitical organization</englishName><humanFormat>%s is a {geopolitical entity} that is an organization</humanFormat><populate>1</populate><visible>1</visible><generalizations>geopoliticalEntity, organization</generalizations><mutexExceptions>nonProfitOrganization terroristOrganization</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate>2011-10-13</editDate><author>Brryan</author><curator /><description>Those geopolitical entities that are organizations</description><freebaseID>none</freebaseID><comment /></Category><Category id="100"><categoryName>governmentOrganization</categoryName><englishName>government organizations</englishName><humanFormat>%s is a {part of the government}</humanFormat><populate>1</populate><visible>1</visible><generalizations>politicsGroup</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>"FBI" "USMC" "IRS" "National Science Foundation" "Federal Aviation Administration" "Federal Drug Administration" "Department of Homeland Security" "Department of Energy" "DRDO" "DARPA" "National Institutes of Health" "National Libraries of Medicine" "Department of Motor Vehicles" &#8220;The White House&#8221; &#8220;U.s. Senate&#8221; &#8220;Supreme Court&#8221; &#8220;House Banking Committee&#8221; &#8220;House Committee on Appropriations&#8221; &#8220;Federal Reserve&#8221; &#8220;U.S. Homeland Security&#8221; &#8220;Senate Appropriations Committees&#8221; &#8220;U.S. House of Representatives&#8221; &#8220;EPA&#8221; &#8220;United States Armed Forces&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>government organization</queryString><editDate>2010-08-31</editDate><author>Tom Mitchell</author><curator /><description>A government is the organization, or agency through which a political unit exercises its authority,</description><freebaseID>/government/government_agency</freebaseID><comment>Bryan merged Tae's politicsGovOrganization into this category</comment></Category><Category id="101"><categoryName>grain</categoryName><englishName>grains</englishName><humanFormat>%s is a {grain}</humanFormat><populate>1</populate><visible>1</visible><generalizations>fruit</generalizations><mutexExceptions>nut agriculturalProduct</mutexExceptions><knownNegatives /><instanceType>common</instanceType><seedInstances>&#8220;wheat&#8221; &#8220;barley flour&#8221; &#8220;rolled oats&#8221; &#8220;rye&#8221; &#8220;jasmine rice&#8221; &#8220;cornmeal&#8221; &#8220;popcorn&#8221; &#8220;alfalfa&#8221; &#8220;sorghums&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>grain</queryString><editDate>2010-06-07</editDate><author>Bryan</author><curator /><description>dry seed-like fruit produced by the cereal grasses: e.g. wheat, barley, Indian corn</description><freebaseID>none</freebaseID><comment /></Category><Category id="102"><categoryName>grandPrix</categoryName><englishName>grand prix events</englishName><humanFormat>%s is a {grand prix} event</humanFormat><populate>1</populate><visible>1</visible><generalizations>sportsEvent</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "2004 San Marino Grand Prix" "2003 San Marino Grand Prix" "2004 Australian Grand Prix" "2004 Bahrain Grand Prix" "2003 Australian Grand Prix" "2003 Malaysian Grand Prix" "2003 Spanish Grand Prix" "2003 Monaco Grand Prix" "2003 European Grand Prix" "2004 Spanish Grand Prix" "2004 Monaco Grand Prix" "2003 United States Grand Prix"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>grand prix</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>one of several international races.</description><freebaseID>none</freebaseID><comment>edited on 2010-10-30 by Estevam</comment></Category><Category id="103"><categoryName>hallwayItem</categoryName><englishName>hallway items</englishName><humanFormat>%s is an {item often found in a hallway}</humanFormat><populate>1</populate><visible>1</visible><generalizations>householdItem</generalizations><mutexExceptions>floorItem wallItem tableItem</mutexExceptions><knownNegatives>"toilets","refrigerators","beds"</knownNegatives><instanceType>all</instanceType><seedInstances>"carpet" "sign" "door" "plant" "light switch" "light" "coat rack" "elevator" "stair" "smoke detector" "artwork" "window" "painting"</seedInstances><seedExtractionPatterns>&#8220;_ are installed in the hallways&#8221;</seedExtractionPatterns><conceptSynonyms /><queryString>hallway item</queryString><editDate>2011-05-17</editDate><author>Tom</author><curator /><description>Any item that is commonly found in a hallway. </description><freebaseID /><comment>introduced for vision and robotic systems</comment></Category><Category id="104"><categoryName>highSchool</categoryName><englishName>high schools</englishName><humanFormat>%s is a {high school}</humanFormat><populate>1</populate><visible>1</visible><generalizations>school</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>high school</queryString><editDate>2010-11-01</editDate><author>Bryan </author><curator /><description>Schools whose graduates would go directly on to universities, vocational schools, or other higher education.  No particular limit on age of incoming students.</description><freebaseID /><comment>Created during feedback @ 160 because university was picking up pre-university schools.</comment></Category><Category id="105"><categoryName>highway</categoryName><englishName>highways</englishName><humanFormat>%s is a {highway}</humanFormat><populate>1</populate><visible>1</visible><generalizations>location</generalizations><mutexExceptions>street</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Autobahn" "Route 66" "King's Highway" "Trans-Canada Highway" "California State Route 1" "Interstate 95" "Pennsylvania Turnpike" "I-75" "New Jersey Turnpike" "Texas State Highway"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>highway</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>is a public road, especially a major road connecting two or more destinations.</description><freebaseID>none</freebaseID><comment>edited on 2010-10-30 by Estevam</comment></Category><Category id="106"><categoryName>hobby</categoryName><englishName>hobbies</englishName><humanFormat>%s is a {hobby}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions>sport visualArtForm</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances> "coin collecting" "cooking" "crochet" "embroidery" "fishing" "gardening" "genealogy" "hiking" "hunting" "knitting" "music" "painting" "photography" "quilting" "reading"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>hobby</queryString><editDate /><author /><curator /><description>A hobby is an activity undertaken for pleasure in one's spare time. Some hobbies exist primarily as hobbies, while others might be practiced professionally by some people but as hobbies by others.  This can include sport activities.</description><freebaseID>/interests/hobby</freebaseID><comment>This includes sports both because they can be pursued as hobbies and because sport is a kind of game, which excludes many sporty activies (and, by implication, things covered by the other sportsEvent specializations that do not generalize to game).</comment></Category><Category id="107"><categoryName>hospital</categoryName><englishName>hospitals</englishName><humanFormat>%s is a {hospital}</humanFormat><populate>1</populate><visible>1</visible><generalizations>building</generalizations><mutexExceptions>nonProfitOrganization</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "John Sealy Hospital" "McLean Hospital" "Marquette General Hospital" "Philippine General Hospital" "Johns Hopkins Hospital" "Prince of Wales Hospital" "Bethlem Royal Hospital" "St Thomas' Hospital" "Stoke Mandeville Hospital" "Royal Buckinghamshire Hospital" "Moorfields Eye Hospital NHS Foundation Trust" "Bombay Hospital"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>hospital</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"A hospital is an institution for health care, often but not always providing for longer-term patient stays.  All varieties of hospitals -- private, public, military, etc. -- are included."</description><freebaseID>/medicine/hospital</freebaseID><comment /></Category><Category id="108"><categoryName>hotel</categoryName><englishName>hotels</englishName><humanFormat>%s is a {hotel}</humanFormat><populate>1</populate><visible>1</visible><generalizations>building</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>"Grand Hyatt Dubai" "The Drake" "Plaza Hotel" "Hyatt Regency Grand Cayman" "Ritz Carlton Hotel" "Gaylord Opryland Resort" "JW Marriott Hotel Bangkok" "Disney 's Pop Century Resort" "Sheraton" "Hyatt Regency" "Four Seasons" "Accor Hotels" "Holiday Inn"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>hotel</queryString><editDate /><author>Burr</author><curator /><description>This type is intended to be used for hotels, bed and breakfasts, backpacker hostels, or any other such place you might stay while travelling</description><freebaseID>/travel/accommodation</freebaseID><comment /></Category><Category id="109"><categoryName>householdItem</categoryName><englishName>household items</englishName><humanFormat>%s is a {household item}</humanFormat><populate>1</populate><visible>1</visible><generalizations>item</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "bells" "keys" "refrigerators" "telephones" "watches" "shoehorns" "coat racks" "shoe racks" "lamps" "locks" "necklaces" "paint" "shelves" "bookcases" "sinks"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>household item</queryString><editDate /><author /><curator /><description>Any item that could reasonably be found in or about a residence.</description><freebaseID>none</freebaseID><comment>This category is in serious need of being broken out into children because almost any item could be in or about residence.</comment></Category><Category id="110"><categoryName>humanAgent</categoryName><englishName /><humanFormat>%s has {human agency}</humanFormat><populate>0</populate><visible>0</visible><generalizations>agent</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate>2011-02-08</editDate><author>Bryan</author><curator /><description>Those things to which we can ascribe agency that are composed of one or more humans</description><freebaseID /><comment /></Category><Category id="111"><categoryName>insect</categoryName><englishName>insects</englishName><humanFormat>%s is an {insect}</humanFormat><populate>1</populate><visible>1</visible><generalizations>arthropod</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "ancyra " "ant" "bee" "beetle" "drosophila" "hymenoptera" "tettigoniidae" "kateretes" "peppered moth" "sap beetle" "triatoma protracta" "mosquito"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>insect</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>class within the arthropods that have a chitinous exoskeleton, a three-part body (head, thorax, and abdomen), three pairs of jointed legs, compound eyes, and two antennae</description><freebaseID>none</freebaseID><comment>edited on 2010-10-30 by Estevam</comment></Category><Category id="112"><categoryName>invertebrate</categoryName><englishName>invertebrates</englishName><humanFormat>%s is an {invertebrate}</humanFormat><populate>1</populate><visible>1</visible><generalizations>animal</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "worms" "leeches" "squids" "octopus" "cuttlefish" "nautilus" "snails" "slugs" "abalones" "limpets" "clams" "oysters" "scallops" "mussels" "jellyfish"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>invertebrate</queryString><editDate /><author /><curator /><description>An animal which does not have a back bone</description><freebaseID /><comment /></Category><Category id="113"><categoryName>island</categoryName><englishName>islands</englishName><humanFormat>%s is an {island}</humanFormat><populate>1</populate><visible>1</visible><generalizations>geopoliticalLocation</generalizations><mutexExceptions>country continent attraction park beach city</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances>"Tonga","Nauru","Gan","Prince Edward","Grand Manan","Baffin","Abu Musa","Kish","Anna Maria","Ellis","Bangaram"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>island</queryString><editDate>2010-09-06</editDate><author>M.Samadi</author><curator /><description>any piece of land surrounded entirely by water</description><freebaseID>/geography/island</freebaseID><comment /></Category><Category id="114"><categoryName>item</categoryName><englishName>items</englishName><humanFormat>%s is an {item}</humanFormat><populate>0</populate><visible>0</visible><generalizations>everyPromotedThing</generalizations><mutexExceptions>visualizableObject visualizableScene</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>item</queryString><editDate /><author /><curator /><description>Any tangible thing that does not have the power to act (agency)</description><freebaseID>none</freebaseID><comment /></Category><Category id="115"><categoryName>jobPosition</categoryName><englishName>job titles</englishName><humanFormat>%s is a {job position}</humanFormat><populate>1</populate><visible>1</visible><generalizations>profession</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances>&#8220;vice chancellor&#8221; &#8220;assistant treasurer&#8221; &#8220;director&#8221; &#8220;accountant&#8221; &#8220;director&#8221; &#8220;county magistrate&#8221; &#8220;vice president&#8221; &#8220;managing director&#8221; &#8220;partner&#8221; &#8220;assistant director&#8221; &#8220;CEO&#8221; &#8220;President&#8221; &#8220;mayor&#8221; &#8220;vice president for research&#8221; &#8220;sergeant&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate>2011-03-28</editDate><author>Bryan</author><curator /><description>Positions are job titles or named roles within an organization. Examples include "CEO", "President", "mayor", "vice president for research", "sergeant", etc. They do not include generic activities or career terms like "pianist", "researcher", "scientist", etc. </description><freebaseID /><comment>For BLITZ2</comment></Category><Category id="116"><categoryName>journalist</categoryName><englishName>journalists</englishName><humanFormat>%s is a {journalist}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>male female personByLocation writer professor</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Ron Cook" "Mark Madden" "Dave Anderson" "Ira Berkow" "Henry Schulman" "Susan Slusser" "Bill Plaschke" "T.J. Simers" "Bill Dwyre" "Harvey Araton " "William C. Rhoden " "George Vecsey " "Bob Ford" "Phil Sheridan" "Teddy Greenstein" "Chris Kuc"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>journalist</queryString><editDate /><author /><curator /><description>Journalists are professionals who work in journalism. They collect and report news.</description><freebaseID /><comment>There's a non-commons Freebase Type: /base/newsevents/journalist</comment></Category><Category id="117"><categoryName>judge</categoryName><englishName>judges</englishName><humanFormat>%s is a {judge}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>male female personByLocation celebrity</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Clarence Thomas" "Francis Hopkinson" "Byron White" "Thurgood Marshall" "Louise Arbour" "Hugo Black" "Edward Coke" "Antonin Scalia" "Stephen Breyer" "Robert H. Jackson" "Tom C. Clark" "James Wilson"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>judge</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"a judge in a court of law"</description><freebaseID>none</freebaseID><comment /></Category><Category id="118"><categoryName>kitchenItem</categoryName><englishName>kitchen items</englishName><humanFormat>%s is an {item found in the kitchen}</humanFormat><populate>1</populate><visible>1</visible><generalizations>householdItem</generalizations><mutexExceptions>floorItem tableItem wallItem</mutexExceptions><knownNegatives /><instanceType>common</instanceType><seedInstances> "bottle" "cup" "glass" "knife" "spoon" "pot" "pan" "plate" "fork" "rolling pin" "bowl" "tart pan" "pizza cutter" "cutting board" "measuring cup" "mugs"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>kitchen item</queryString><editDate /><author /><curator /><description>Any item that might be found in a commercial or residential kitchen that is used for cullinary purposes or in pursuit of the same (e.g. a cupboard).</description><freebaseID>none</freebaseID><comment /></Category><Category id="119"><categoryName>lake</categoryName><englishName>lakes</englishName><humanFormat>%s is a {lake}</humanFormat><populate>1</populate><visible>1</visible><generalizations>location geolocatableThing</generalizations><mutexExceptions>attraction</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances>"Lake Michigan" "Lake Erie" "Dead Sea" "Lake Huron" "Great Salt Lake" "Rachel Lake" "Lake Victoria" "Lake Maracaibo" "Caspian Sea" "Aral Sea"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>lake</queryString><editDate /><author /><curator /><description>A lake is a body of water surrounded entirely by land. For the purposes of this schema, any such body, regardless of size, should be considered a lake. This includes ponds, but excludes such bodies as marshes, bogs, fens, etc.</description><freebaseID>/geography/lake</freebaseID><comment /></Category><Category id="120"><categoryName>landscapeFeatures</categoryName><englishName>landscape features</englishName><humanFormat>%s can be a {part of a landscape}</humanFormat><populate>1</populate><visible>1</visible><generalizations>location visualizableScene</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "forests" "islands" "lakes" "mountains" "rivers" "parks" "beaches" "glens" "groves" "harbors" "dales" "creeks" "woods" "crests" "landings"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>landscape features</queryString><editDate /><author /><curator /><description>This type captures geographical features of the Earth, including landforms, bodies of water, underwater landforms, caves, and similar locations.</description><freebaseID>/geography/geographical_feature</freebaseID><comment>I guess the trend is that we do not make this mutexException with lake, mountain, beach, attraction, etc?</comment></Category><Category id="121"><categoryName>language</categoryName><englishName>languages</englishName><humanFormat>%s is a {language}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Arabic language" "American Sign Language" "Afrikaans" "Armenian language" "Aramaic language" "Basque language" "Bulgarian language" "Bambara language" "Breton language" "Blissymbols" "Khmer language" "Chinese language"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>language</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>Spoken human languages (and dialects).</description><freebaseID>/language/human_language</freebaseID><comment /></Category><Category id="122"><categoryName>legume</categoryName><englishName>beans</englishName><humanFormat>%s is a {legume}</humanFormat><populate>1</populate><visible>1</visible><generalizations>fruit</generalizations><mutexExceptions>nut agriculturalProduct</mutexExceptions><knownNegatives /><instanceType>common</instanceType><seedInstances>&#8220;lentil&#8221; &#8220;pea&#8221; &#8220;garbanzo bean&#8221; &#8220;soybean&#8221; &#8220;kidney bean&#8221; &#8220;lima beans&#8221; &#8220;pintos&#8221; &#8220;chili beans&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>legume</queryString><editDate>2010-06-07</editDate><author>Bryan</author><curator /><description>plant in the family Fabaceae (or Leguminosae), or a fruit of these specific plants. A legume fruit is a simple dry fruit that develops from a simple carpel and usually dehisces (opens along a seam) on two sides.</description><freebaseID>none</freebaseID><comment /></Category><Category id="123"><categoryName>llCoordinate</categoryName><englishName>coordinates</englishName><humanFormat>%s is a {latitude / longitude coordinate}</humanFormat><populate>0</populate><visible>0</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>regexp:\A[-0-9.]+,[-0-9.]+\z</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>latitude longitude coordinate</queryString><editDate>2010-09-29</editDate><author>Bryan</author><curator /><description>Longitude is the angular distance of a point's meridian from the Prime (Greenwich) Meridian</description><freebaseID>/location/geocode</freebaseID><comment>Range type of the latitudeLongitude slot.  Not really for use by anything else.</comment></Category><Category id="124"><categoryName>location</categoryName><englishName>locations</englishName><humanFormat>%s is a {location}</humanFormat><populate>0</populate><visible>0</visible><generalizations>everyPromotedThing</generalizations><mutexExceptions>visualizableThing</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances> "Allegheny County" "Alpha Centauri" "Cook County" "Disney World" "downtown" "Mars" "Midtown" "Pluto" "SoHo" "Wicker Park"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>location</queryString><editDate /><author /><curator /><description>The Location type is used for any topic with a fixed location on the planet Earth. It includes geographic features such as oceans and mountains, political entities like cities and man-made objects like buildings</description><freebaseID>/location/location</freebaseID><comment>In Freebase location refers to only the places on Earth. However, NELL seeds indicate that location includes places outside Earth, such as Mars</comment></Category><Category id="125"><categoryName>lymphNode</categoryName><englishName>lymph nodes</englishName><humanFormat>%s is a {lymph node}</humanFormat><populate>1</populate><visible>1</visible><generalizations>bodyPart</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "thoracic duct" "virchow's node" "cloquet's node" "paraaortic lymph node" "paratracheal lymph nodes" "cisterna chyli" "right lymphatic duct" "external iliac lymph nodes" "waldeyer's tonsillar ring" "tracheobronchial lymph nodes" "cervical lymph nodes" "axillary lymph nodes"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>lymph node</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"a lymph node in the body"</description><freebaseID>none</freebaseID><comment /></Category><Category id="126"><categoryName>lyrics</categoryName><englishName>lyrics</englishName><humanFormat>%s is/are {lyrics}</humanFormat><populate>1</populate><visible>1</visible><generalizations>creativeWork</generalizations><mutexExceptions>poem musicSong</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>lyrics</queryString><editDate>2010-12-09</editDate><author>Bryan</author><curator /><description>Refernce to the lyrics of a song, as distinct from a reference to the song itself</description><freebaseID /><comment /></Category><Category id="127"><categoryName>magazine</categoryName><englishName>magazines</englishName><humanFormat>%s is a {magazine}</humanFormat><populate>1</populate><visible>1</visible><generalizations>publication</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Readers Digest" "National Geographic" "People" "Time" "Newsweek" "Economist" "Cosmopolitan" "Playboy" "TapeOp" "Highlights" "Elle" "Parenting" "Rolling Stone" "New Yorker" "Atlantic Monthly"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>magazine</queryString><editDate /><author /><curator /><description>A magazine is a periodical bound typically published less frequently than daily.  This includes electronic magazines.  For lack of a better definitional boundary, this therefore includes any periodical that is not instead a newspaper.</description><freebaseID>/book/magazine</freebaseID><comment /></Category><Category id="128"><categoryName>male</categoryName><englishName>men</englishName><humanFormat>%s is a {male}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>actor athlete celebrity ceo coach journalist politician scientist musician writer chef visualArtist mlAuthor architect astronaut comedian criminal judge model personByLocation monarch director professor</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Barack Obama" "Tom Cruise" "John Lennon" "Bill Gates" "Tom Mitchell" "Albert Einstein" "Alex Rodriguez" "Bill Clinton" "Paul McCartney" "Bobby Bowden" "Dave Wannstedt" "Andrew McCallum" "Andy Warhol" "Justin Timberlake" "John McCain" "Brad Pitt" "Heath Ledger"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>male</queryString><editDate /><author /><curator /><description>This category includes all male human beings.</description><freebaseID /><comment /></Category><Category id="129"><categoryName>mammal</categoryName><englishName>mammals</englishName><humanFormat>%s is a {mammal}</humanFormat><populate>1</populate><visible>1</visible><generalizations>vertebrate</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "bears" "cats" "dogs" "horses" "cows" "guinea pigs" "rats" "rabbits" "zebras" "elephants" "shrews" "bats" "giraffes" "hedgehosg" "armadillos"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>mammal</queryString><editDate /><author>Burr</author><curator /><description>Mammals (formally Mammalia) are a class of vertebrate, air-breathing animals whose females are characterized by the possession of mammary glands while both males and females are characterized by hair and/or fur, three middle ear bones used in hearing, and a neocortex region in the brain.</description><freebaseID>none</freebaseID><comment /></Category><Category id="130"><categoryName>meat</categoryName><englishName>meats</englishName><humanFormat>%s is a type of {meat}</humanFormat><populate>1</populate><visible>1</visible><generalizations>food</generalizations><mutexExceptions>agriculturalProduct</mutexExceptions><knownNegatives /><instanceType>common</instanceType><seedInstances>&#8220;beef&#8221; &#8220;chicken&#8221; &#8220;bacon&#8221; &#8220;sausage&#8221; &#8220;ham&#8221; &#8220;mutton&#8221; &#8220;veal&#8221; &#8220;venison&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate>2010-11-09</editDate><author>Justin</author><curator /><description>A type of animal flesh that is used as food. (Wikipedia)</description><freebaseID /><comment /></Category><Category id="131"><categoryName>mediaCompany</categoryName><englishName>media companies</englishName><humanFormat>%s ia a {media company}</humanFormat><populate>0</populate><visible>0</visible><generalizations>company</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>media company</queryString><editDate /><author>Burr</author><curator /><description>Any company that deals in the production or marketing of media goods (film, audio, literature, journalistic, etc.)</description><freebaseID>none</freebaseID><comment /></Category><Category id="132"><categoryName>mediaType</categoryName><englishName>media</englishName><humanFormat>%s is a kind of {media}</humanFormat><populate>1</populate><visible>1</visible><generalizations>item</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances>books "record albums" CDs DVDs memoirs magazines LPs MP3s posters cassettes</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>media type</queryString><editDate /><author /><curator /><description>the means of communication, as radio and television, newspapers, and magazines, that reach or influence people widely (http://dictionary.reference.com/browse/media)</description><freebaseID /><comment /></Category><Category id="133"><categoryName>medicalProcedure</categoryName><englishName>medical procedures</englishName><humanFormat>%s is a {medical procedure}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "appendectomy" "free skin graft" "hysteroscopy" "prostatectomy" "Cesarean section" "heart bypass" "hip replacement" "Angioplasty" "bone density scan" "Carotid endarterectomy"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>medical procedure</queryString><editDate /><author /><curator /><description>The medical treatment type is used for any medical intervention designed to treat and cure human diseases and medical conditions. This type includes both curative and palliative treatments</description><freebaseID>/medicine/medical_treatment</freebaseID><comment /></Category><Category id="134"><categoryName>meetingEventTitle</categoryName><englishName>meeting event title</englishName><humanFormat>%s is the title of a {meeting}</humanFormat><populate>1</populate><visible>1</visible><generalizations>event</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate>2014-04-25</editDate><author>Aasish (via Bryan)</author><curator /><description>The title of a meeting (such as a presentation)</description><freebaseID /><comment /></Category><Category id="135"><categoryName>meetingEventType</categoryName><englishName>meeting event </englishName><humanFormat>%s is a kind of {meeting}</humanFormat><populate>1</populate><visible>1</visible><generalizations>event</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate>2014-04-25</editDate><author>Aasish (via Bryan)</author><curator /><description>A kind of meeting, the name of a series of meetings, or some other way to refer to a category of meeting</description><freebaseID /><comment /></Category><Category id="136"><categoryName>militaryConflict</categoryName><englishName>military conflicts</englishName><humanFormat>%s is a {military conflict}</humanFormat><populate>1</populate><visible>1</visible><generalizations>militaryEventType</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "American Revolutionary War" "American Civil War" "Battle of Bosworth Field" "Battle of Pharsalus" "Battle of Blenheim" "Battle of Ramillies" "Battle of Peleliu" "Battle of Stalingrad" "Battle of Waterloo" "Battle of Poitiers " "Battle of Jutland" "Battle of Agincourt"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>military conflict</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"A military conflict is any event that involves armed forces acting in hostility. This includes wars, battles, and guerilla actions."</description><freebaseID>/military/military_conflict</freebaseID><comment /></Category><Category id="137"><categoryName>militaryEventType</categoryName><englishName>military events</englishName><humanFormat>%s is a kind of {military event}</humanFormat><populate>0</populate><visible>0</visible><generalizations>event</generalizations><mutexExceptions>crimeOrCharge</mutexExceptions><knownNegatives /><instanceType>common</instanceType><seedInstances>attacks ambushes bombings surges hijackings skirmishes retreats bombardments "air raids" "air strikes"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>military event</queryString><editDate /><author /><curator /><description>A military event type is simply a sub-type (or sub-category) of the category military event.</description><freebaseID /><comment>I suggest we get rid of this category and instead learn sub-categories of 'militaryConflict' the normal way</comment></Category><Category id="138"><categoryName>mlAlgorithm</categoryName><englishName>machine learning algorithms</englishName><humanFormat>%s is a {machine-learning algorithm}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions>mlArea researchProject</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances>SVMs HMMs "Conditional Random Fields" "Hidden Markov Models" "Markov Decision Processes" "forward-backward algorithm" "radial basis function networks" "Support Vector Machines" "Perceptrons" "logistic regression" "Q-learning" "Random Forests"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>(ml OR (machine learning)) algorithm</queryString><editDate /><author /><curator /><description>Any algorithm or class of algorithms that is used at any stage of machine learning.</description><freebaseID /><comment>Has clearly diverged to include anything of the form: &#8220;&lt;noun&gt; model&#8221;, and the culprit seems to be CPL and a slew of patterns of the form: &#8220;_ is &lt;adverb&gt; thought about&#8221;.  What categories should be added to prevent adding any phrase with &#8220;model&#8221; or &#8220;regression&#8221; in it?  There is standing support for deleting ml* as we did for physicsTerm, but so far no motion to do so.</comment></Category><Category id="139"><categoryName>mlArea</categoryName><englishName>machine learning areas</englishName><humanFormat>%s is an {area of study within the field of machine learning}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions>mlAlgorithm scientificTerm</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances> "supervised learning" clustering "feature selection" "kernel methods" "Neural Networks" "Information Extraction" "Bayesian Inference" "Graphical Models" "statistical machine learning" "statistical learning theory" "structure learning" "computational learning theory" "semi-supervised learning" "reinforcement learning"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>(ml OR (machine learning)) area</queryString><editDate /><author /><curator /><description>A specific area of investigation within the sub-field of machine learning.</description><freebaseID /><comment>This category seems too confusable with mlAlgorithm, since that category also involves classes of algorithms.  For example: are the phrases &#8220;kernel methods&#8221; and &#8220;HMMs&#8221; really so different in terms of ontological granularity?  There is standing support to delete ml* as we did for physicsTerm, but so far no motion to do so.</comment></Category><Category id="140"><categoryName>mlAuthor</categoryName><englishName>machine learning authors</englishName><humanFormat>%s is an {author} in the scientific field of machine learning</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>scientist male female personByLocation writer professor</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Tom Mitchell" "Andrew McCallum" "William Cohen" "Daphne Koller" "Yoram Singer" "Nir Friedman" "Sebastian Thrun" "David Heckerman" "John Lafferty" "Manfred Warmuth" "Geoffrey Hinton" "Tom Dietterich" "Stuart Russell" "Peter Bartlett"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>(ml OR (machine learning)) author</queryString><editDate /><author /><curator /><description>A machine learning author is a person who has published research in the field of machine learning.</description><freebaseID /><comment /></Category><Category id="141"><categoryName>mlConference</categoryName><englishName>machine learning conferences</englishName><humanFormat>%s is a {machine-learning conference}</humanFormat><populate>1</populate><visible>1</visible><generalizations>conference</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "ICML" "KDD" "PKDD" "SIGMOD" "NIPS" "WWW" "WebKDD" "ACL" "EMNLP" "ECML" "ICWSM" "ICDM" "UAI" "CIKM"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>(ml OR (machine learning)) conference</queryString><editDate /><author>Burr</author><curator /><description>A conference in the area of machine learning</description><freebaseID>none</freebaseID><comment /></Category><Category id="142"><categoryName>mlDataset</categoryName><englishName>machine learning data sets</englishName><humanFormat>%s is a {dataset used within the scientific field of machine learning}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions>researchProject</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances> "Iris" "CORA" "Abalone" Spambase "20 Newsgroups" "Penn Treebank" "DBLP" MUC-7 "Netflix data" </seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>(ml OR machine learning)) dataset</queryString><editDate /><author /><curator /><description>A dataset used in machine learning</description><freebaseID /><comment /></Category><Category id="143"><categoryName>mlMetric</categoryName><englishName>machine learning evaluation metrics</englishName><humanFormat>%s is a {performance metric used by machine-learning scientists}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances>precision recall "ROC curve" "mean average precision" "BLEU" AUC perplexity "F measure"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>(ml OR (machine learning)) metric</queryString><editDate /><author /><curator /><description>A metric used to evaluate machine learning methods</description><freebaseID /><comment /></Category><Category id="144"><categoryName>mlSoftware</categoryName><englishName>machine learning software</englishName><humanFormat>%s is {software used by machine-learning scientists}</humanFormat><populate>1</populate><visible>1</visible><generalizations>software</generalizations><mutexExceptions>researchProject</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances>Minorthird Weka libsvm SVMlight L-BFGS CART SNoW Lemur Indri WinBUGS</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>(ml OR (machine learning)) software</queryString><editDate /><author /><curator /><description>A software package that offers machine learning functionality</description><freebaseID /><comment /></Category><Category id="145"><categoryName>model</categoryName><englishName>models</englishName><humanFormat>%s is a {fashion model}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>actor celebrity male female personByLocation</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Gia Carangi" "Laetitia Casta" "Claudia Schiffer" "Wilnelia Merced" "Heather Christensen" "Iman " "Lisa Guerrero" "Cindy Crawford" "Linda Evangelista" "Heidi Klum" "Carol Alt" "Kate Moss"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>model</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"a person who is paid to be a fashion model"</description><freebaseID>none</freebaseID><comment /></Category><Category id="146"><categoryName>mollusk</categoryName><englishName>mollusks</englishName><humanFormat>%s is a {mollusk}</humanFormat><populate>1</populate><visible>1</visible><generalizations>invertebrate</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "abalone" "octopus" "squid" "sea lemon" "cephalopod" "hyolitha" "sea butterfly" "clam" "ammonite" "dirona" "nautilus" "mussel"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>mollusk</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>invertebrate having a soft unsegmented body usually enclosed in a shell</description><freebaseID>none</freebaseID><comment>edited on 2010-10-30 by Estevam</comment></Category><Category id="147"><categoryName>monarch</categoryName><englishName>monarchs</englishName><humanFormat>%s is a {monarch}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>male female personByLocation celebrity politician</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Alexander the Great" "Attila the Hun" "Alp Arslan" "Ashoka the Great" "Antoninus Pius" "Alaric I" "Ahmad Shah Durrani" "Alexander II of Epirus" "Alboin" "Alexander I of Scotland" "Alexander I of Serbia" "Alexander Severus"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>monarch</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"A monarch is a person who heads a monarchy, such as a king or queen"</description><freebaseID>/royalty/monarch</freebaseID><comment /></Category><Category id="148"><categoryName>month</categoryName><englishName>months</englishName><humanFormat>%s is a {month of the year}</humanFormat><populate>0</populate><visible>0</visible><generalizations>date</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "January" "February" "March" "April" "May" "June" "July" "August" "September" "October" "November" "December"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>month</queryString><editDate /><author>Burr</author><curator /><description>Twelve months of the year.</description><freebaseID>/time/month</freebaseID><comment /></Category><Category id="149"><categoryName>monument</categoryName><englishName>monuments</englishName><humanFormat>%s is a {monument}</humanFormat><populate>1</populate><visible>1</visible><generalizations>attraction building</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>"Eiffel Tower" "The White House" "Christo Rei" "Taj Mahal" "Stonehenge" "Washington Monument" "Statue of Liberty" "Great Pyramid" "Vimy Ridge   Memorial" "Arc de Triomphe"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>monument</queryString><editDate /><author>Burr</author><curator /><description>An architectural structure (usually public) which is erected to commemorate a person, place, event, or group.</description><freebaseID>/protected_sites/protected_site</freebaseID><comment /></Category><Category id="150"><categoryName>mountain</categoryName><englishName>mountains</englishName><humanFormat>%s is a {mountain}</humanFormat><populate>1</populate><visible>1</visible><generalizations>location geolocatableThing</generalizations><mutexExceptions>attraction skiArea</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances>"Mount Everest" "Mount Kilimanjaro" "Mount Feathertop" "Finsteraarhorn" "Snowdon" "Table Mountain" "Pilot Mountain" "Mount McKinley" "Cho Oyu" "Lhotse"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>mountain</queryString><editDate /><author /><curator /><description>A mountain is a landform that extends above the surrounding terrain in a limited area. A mountain is generally steeper than a hill, but there is considerable overlap, and usage often depends on local custom.</description><freebaseID>/geography/mountain</freebaseID><comment /></Category><Category id="151"><categoryName>mountainRange</categoryName><englishName>mountain ranges</englishName><humanFormat>%s is a {mountain range}</humanFormat><populate>1</populate><visible>1</visible><generalizations>location</generalizations><mutexExceptions>skiArea</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances>"Rocky Mountains" "Andes" "Himalayas" "Great Dividing Range" "Transantarctic Mountains" "Appalachian Mountains" "Adirondack Mountains" "Columbia Mountains" "Olympic Mountains" "Bear River Mountains"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>mountain range</queryString><editDate /><author /><curator /><description>A mountain range is a group of mountains bordered by lowlands or separated from other mountain ranges by passes or rivers.</description><freebaseID>/geography/mountain_range</freebaseID><comment /></Category><Category id="152"><categoryName>movie</categoryName><englishName>movies</englishName><humanFormat>%s is a {movie}</humanFormat><populate>1</populate><visible>1</visible><generalizations>creativeWork</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "The Sound of Music" "Star Wars" "The Lion King" "The Pianist" "The Godfather" "The Court Jester" "The Matrix" "National Treasure" "An American in Paris" "Shrek" "North by Northwest" "Raging Bull" "Empire Strikes Back" "The Sixth Sense" "Jaws"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>movie</queryString><editDate /><author /><curator /><description>A release of a visual narrative composed of a series of moving images that is considered a complete presentation and is intended to be classified as a film. A film can be of any length of running time and presented in a theatrical, television, internet-streaming and direct-to-home-video presentation. (FreeBase)</description><freebaseID>/film/film</freebaseID><comment>should we rename to film?</comment></Category><Category id="153"><categoryName>muscle</categoryName><englishName>muscles</englishName><humanFormat>%s is a {muscle}</humanFormat><populate>1</populate><visible>1</visible><generalizations>bodyPart</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "levator ani" "trapezius muscle" "biceps brachii muscle" "brachioradialis" "latissimus dorsi muscle" "brachialis muscle" "pronator quadratus" "hamstring" "sartorius muscle" "lumbricals of the hand" "flexor digitorum profundus muscle" "thenar eminence"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>muscle</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"A muscle is a contractile form of tissue which animals use to effect movement."</description><freebaseID>/medicine/muscle</freebaseID><comment /></Category><Category id="154"><categoryName>museum</categoryName><englishName>museums</englishName><humanFormat>%s is a {museum}</humanFormat><populate>1</populate><visible>1</visible><generalizations>building attraction</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>Louvre "British Museum" "Metropolitan Museum of Art" "American Museum of Natural History" "Smithsonian National Postal Museum" "Royal Ontario Museum" "National Folk Museum of Korea" "National Museum of African American History" "National Museum of American History" "Guggenheim Museum" "Melbourne Museum"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>museum</queryString><editDate /><author>Burr</author><curator /><description>A museum is a "permanent institution in the service of society and of its development, open to the public, which acquires, conserves, researches, communicates and exhibits the tangible and intangible heritage of humanity and its environment, for the purposes of education, study, and enjoyment", as defined by the International Council of Museums.</description><freebaseID>/architecture/museum</freebaseID><comment /></Category><Category id="155"><categoryName>musicAlbum</categoryName><englishName>albums</englishName><humanFormat>%s is a {musical album}</humanFormat><populate>1</populate><visible>1</visible><generalizations>creativeWork</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Abbey Road" "The Joshua Tree" "Thriller" "Rumours" "Jagged Little Pill" "Led Zeppelin IV" "Immaculate Collection" "Appetite for Destruction" "Nevermind" "Hybrid Theory"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>music album</queryString><editDate /><author /><curator /><description>A collection of Musical Tracks (recordings of Songs) released in a common format such as Compact Disc or LP. An album is typically associated with a single Musical Artist unless it is a compilation, which is a collection of tracks by various artists.  (FreeBase)</description><freebaseID>/music/album</freebaseID><comment>should we rename to musical_album?</comment></Category><Category id="156"><categoryName>musicArtist</categoryName><englishName>bands</englishName><humanFormat>%s is a {musical artist}</humanFormat><populate>1</populate><visible>1</visible><generalizations>organization</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Beatles" "Radiohead" "Outkast" "Metallica" "Kings of Leon" "Green Day" "Nirvana" "Pink Floyd" "U2" "Rolling Stones" "Over the Rhine" "Pedro the Lion" "Lemonheads" "Led Zeppelin" "Jackson Five"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>musical artist</queryString><editDate /><author /><curator /><description>An individual or a group that performs or makes music. Musical artists should typically have performed in front of an audience on a regular basis or have recorded musical tracks or musical albums. (FreeBase)</description><freebaseID>/music/artist</freebaseID><comment>should we rename to musical_artist?  also see musician (FB:/music/group_member)</comment></Category><Category id="157"><categoryName>musicFestival</categoryName><englishName>music festivals</englishName><humanFormat>%s is a {music festival}</humanFormat><populate>1</populate><visible>1</visible><generalizations>event</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Summerfest" "Woodstock Festival" "Big Day Out" "Glastonbury Festival" "Cornerstone Festival" "Live Aid" "Greenbelt festival" "Warped Tour" "Detroit Electronic Music Festival" "Family Values Tour" "Philadelphia Folk Festival" "Lollapalooza"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>music festival</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"A Music Festival is a musical event where live music is played, typically by multiple musical artists. A festival may be a singular event or a recurring one."</description><freebaseID>/music/festival</freebaseID><comment /></Category><Category id="158"><categoryName>musicGenre</categoryName><englishName>music genres</englishName><humanFormat>%s is a {genre of music}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "rock" "pop" "hip-hop" "classical" "punk" "funk" "r&amp;b" "indie" "ska" "reggae" "easy listening" "rap" "heavy metal" "soul"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>music genre</queryString><editDate /><author /><curator /><description>A style or classification of music (FreeBase)</description><freebaseID>/music/genre</freebaseID><comment>should we rename to music_genre?</comment></Category><Category id="159"><categoryName>musician</categoryName><englishName>musicians</englishName><humanFormat>%s is a {musician}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>male female celebrity visualArtist personByLocation professor</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "John Lennon" "Paul McCartney" "Mick Jagger" "David Bazan" "Yo Yo Ma" "Evan Dando" "Feist" "Sufjan Stevens" "Elliott Smith" "Joshua Bell" "Bob Dylan" "Elvis Presley" "Ray Charles" "Elton John" "Aretha Franklin"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>musician</queryString><editDate /><author /><curator /><description>A musician is a person who sings or plays a musical instrument as part of a musical act.</description><freebaseID>/music/group_member</freebaseID><comment>This is for individual people who are musicians. They might be members of bands (musicalArtists) or they might put out music under their own names. We allow musicians to be musicArtists (i.e., solo acts), and Freebase also allows this.</comment></Category><Category id="160"><categoryName>musicInstrument</categoryName><englishName>musical instruments</englishName><humanFormat>%s is a {musical instrument}</humanFormat><populate>1</populate><visible>1</visible><generalizations>item visualizableObject</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "guitar" "bass" "drums" "piano" "violin" "banjo" "xylophone" "cello" "harmonica" "electric guitar" "acoustic guitar" "viola" "oboe" "clarinet" "saxophone"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>musical instrument</queryString><editDate /><author /><curator /><description>A Musical instrument is a device constructed or modified with the purpose of making music. In principle, anything that produces sound, and can somehow be controlled by a musician, can serve as a musical instrument. (See e.g. the hardart.)</description><freebaseID>/music/instrument</freebaseID><comment /></Category><Category id="161"><categoryName>musicSong</categoryName><englishName>songs</englishName><humanFormat>%s is a {song}</humanFormat><populate>1</populate><visible>1</visible><generalizations>creativeWork</generalizations><mutexExceptions>poem lyrics</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "America the Beautiful" "Flower of Scotland" "Colonel Bogey March" "4th of July, Asbury Park " "Rosalita " "Lucy in the Sky with Diamonds" "Being for the Benefit of Mr. Kite!" "A Day in the Life" "With a Little Help from My Friends" "Desolation Row" "God Bless America" "Seasons in the Sun"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>song</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"A song is any musical work including instrumentals as well as songs with lyrics."</description><freebaseID>/music/composition</freebaseID><comment /></Category><Category id="162"><categoryName>nerve</categoryName><englishName>nerves</englishName><humanFormat>%s is a {nerve}</humanFormat><populate>1</populate><visible>1</visible><generalizations>bodyPart</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "cranial nerves" "vagus nerve" "pudendal nerve" "splanchnic nerves" "olfactory nerve" "abducens nerve" "facial nerve" "radial nerve" "median nerve" "brachial plexus" "sciatic nerve" "spinal nerve"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>nerve</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"a single nerve cell or bundle of nerve cells"</description><freebaseID>/medicine/nerve</freebaseID><comment /></Category><Category id="163"><categoryName>newspaper</categoryName><englishName>newspapers</englishName><humanFormat>%s is a {newspaper}</humanFormat><populate>1</populate><visible>1</visible><generalizations>publication</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Pittsburgh Post-Gazette" "Pittsburgh Tribune" "New York Times" "London Times" "Washington Post" "San Francisco Chronicle" "LA Times" "Philadelphia Enquirer" "New York Post" "Herald Tribune" "Wall Street Journal" "Chicago Tribune" "Financial Times" "Toronto Star" "International Herald Tribune"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>newspaper</queryString><editDate /><author /><curator /><description>A newspaper is a periodical which is printed in a specific format (i.e., on newsprint), describes recent events, and is typically published daily.</description><freebaseID>/book/newspaper</freebaseID><comment /></Category><Category id="164"><categoryName>nonDiseaseCondition</categoryName><englishName>conditions</englishName><humanFormat>%s is a {non-disease physiological condition}</humanFormat><populate>1</populate><visible>1</visible><generalizations>physiologicalCondition</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances>&#8220;teething&#8221; &#8220;pregnancy&#8221; &#8220;menopause&#8221; &#8220;puberty&#8221; &#8220;menstruation&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate>2011-02-08</editDate><author>Bryan</author><curator /><description>Those physiologicalConditions that normal and expected parts of life (such as pregnancy or teething) that are not diseases but which do affect the normal functioning of the body.</description><freebaseID /><comment>Adder per February 2011 BLITZ to expand our disease category to the desired physiologicalCondition category</comment></Category><Category id="165"><categoryName>nonGovOrganization</categoryName><englishName>political organizations</englishName><humanFormat>%s is a {political organization} that is not part of the government</humanFormat><populate>1</populate><visible>1</visible><generalizations>politicsGroup</generalizations><mutexExceptions>tradeUnion</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances>"American Bankers Association" "ACLU" "AFL-CIO" "International Brotherhood of Teamsters" "NRA" "RAND corporation" "Federal Advisory Committees" "Cato Institute" "Planned Parenthood" "Barack Obama 's presidential campaign" "Greenpeace"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>non governmental organization</queryString><editDate>2010-08-31</editDate><author>Tae (via Bryan)</author><curator /><description>Politically-active or governmentally-active organizations that are not part of the government, including but not limited to some NGOs</description><freebaseID /><comment>Political organizations that are not part of the government.  Not meant to capture NGOs in particular.</comment></Category><Category id="166"><categoryName>nonNegInteger</categoryName><englishName>integers</englishName><humanFormat>%s is a {non-negative integer}</humanFormat><populate>0</populate><visible>0</visible><generalizations>abstractThing</generalizations><mutexExceptions>zipCode time</mutexExceptions><knownNegatives /><instanceType>regexp:\A\d+\z</instanceType><seedInstances>0 1 2 3 4 10 20 24 44 72 700</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>non negative integer</queryString><editDate>2010-07-05</editDate><author>Bryan</author><curator /><description /><freebaseID /><comment>These are some of the most common positive integers from all-pairs-2010-04-10, other than obvious 4-digit years</comment></Category><Category id="167"><categoryName>nonProfitOrganization</categoryName><englishName>non-profit organizations</englishName><humanFormat>%s is a {non-profit organization}</humanFormat><populate>1</populate><visible>1</visible><generalizations>organization</generalizations><mutexExceptions>tradeUnion geopoliticalOrganization hospital school</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Apache Software Foundation" "Greenpeace" "ICANN" "American Red Cross" "KDE" "Mars Society" "Doctors Without Borders" "Revolutionary Association of the Women of Afghanistan" "Society for Creative Anachronism" "Special Olympics" "Friends of the Earth" "Transnational Radical Party"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>non profit organization</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"A non-profit organization is a legally-constituted organization that does not make a profit from its operations."</description><freebaseID>/organization/non_profit_organization</freebaseID><comment /></Category><Category id="168"><categoryName>nut</categoryName><englishName>nuts</englishName><humanFormat>%s is a {nut}</humanFormat><populate>1</populate><visible>1</visible><generalizations>fruit</generalizations><mutexExceptions>legume grain agriculturalProduct</mutexExceptions><knownNegatives /><instanceType>common</instanceType><seedInstances>&#8220;walnut&#8221; &#8220;pecan&#8221; &#8220;almond&#8221; &#8220;acorn&#8221; &#8220;macadamia&#8221; &#8220;filbert&#8221; &#8220;pine nut&#8221; &#8220;horse chestnut&#8221; &#8220;sesame seeds&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>nut</queryString><editDate>2010-06-07</editDate><author>Bryan</author><curator /><description>hard-shelled fruit of some plants having an indehiscent seed.</description><freebaseID>none</freebaseID><comment>Let's see how NELL does with the blurry boundaries of nut, legume, and grain.  At least they're not quite as catch-all as newspaper, blog, publication, mediaCompany, et al. edited on 2010-10-30 by Estevam</comment></Category><Category id="169"><categoryName>officeBuildingRoom</categoryName><englishName>office building room</englishName><humanFormat>%s is an {office building room}</humanFormat><populate>1</populate><visible>1</visible><generalizations>room</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate>2014-04-25</editDate><author>Aasish (via Bryan)</author><curator /><description>A room designation such as would be used for rooms in an office building</description><freebaseID /><comment /></Category><Category id="170"><categoryName>officeItem</categoryName><englishName>office supplies</englishName><humanFormat>%s is an {office supply}</humanFormat><populate>1</populate><visible>1</visible><generalizations>item</generalizations><mutexExceptions>floorItem tableItem wallItem</mutexExceptions><knownNegatives /><instanceType>common</instanceType><seedInstances>staplers scissors binders pens envelopes "index cards" paperclips "file folders" pencils notepads</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>office item</queryString><editDate /><author /><curator /><description>Items usually found in an office that are used for clerical or intellectual work.</description><freebaseID /><comment /></Category><Category id="171"><categoryName>olympics</categoryName><englishName>olympics</englishName><humanFormat>%s is an instance of the {olympics}</humanFormat><populate>1</populate><visible>1</visible><generalizations>sportsEvent</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "2002 Winter Olympics" "1936 Summer Olympics" "1948 Summer Olympics" "1948 Winter Olympics" "1896 Summer Olympics" "1928 Winter Olympics" "1924 Winter Olympics" "2000 Summer Olympics" "1996 Summer Olympics" "1976 Summer Olympics" "2006 Winter Olympics" "2008 Summer Olympics"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>olympics</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>are a major international event featuring summer and winter sports, in which thousands of athletes participate in a variety of competitions. The Games are currently held every two years, with Summer and Winter Olympic Games alternating, although they occur every four years within their respective seasonal games.</description><freebaseID>none</freebaseID><comment /></Category><Category id="172"><categoryName>organization</categoryName><englishName>organizations</englishName><humanFormat>%s is an {organization}</humanFormat><populate>0</populate><visible>0</visible><generalizations>humanAgent</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>organization</queryString><editDate /><author /><curator /><description>An organization is an organized body of members or people with a particular purpose; in the Freebase context, a organization doesn't have a business association, like a company. &#160;Companies have their own type in the business domain, located here. &#160;In addition, many types of organizations have their own, more specialized co-types that give them additional properties.</description><freebaseID>/organization/organization</freebaseID><comment>In Freebase, organization does not include company. In NELL, it does. Shouldn't transportation, port be under organization instead of attraction? And website should be taken out of organization category.</comment></Category><Category id="173"><categoryName>park</categoryName><englishName>parks</englishName><humanFormat>%s is a {park}</humanFormat><populate>1</populate><visible>1</visible><generalizations>attraction geolocatableThing</generalizations><mutexExceptions>zoo aquarium beach island</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances>"Central Park" "Schenley Park" "Millenium Park" "Golden Gate Park" "Boston Common" "Belle Isle Park" "Balboa Park" "Luxembourg Gardens" "Oosterpark" "Piedmont Park" "Stanley Park"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>park</queryString><editDate /><author>Burr</author><curator /><description>Public local/state/national parks, as well as amusement parks and other privately-run attractions.</description><freebaseID>/protected_sites/protected_site</freebaseID><comment /></Category><Category id="174"><categoryName>parlourGame</categoryName><englishName>parlour games</englishName><humanFormat>%s is a {parlour game}</humanFormat><populate>1</populate><visible>1</visible><generalizations>traditionalGame</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances>&#8220;Blind Man ' s Bluff&#8221; &#8220;Charades&#8221; &#8220;Twister&#8221; &#8220;Tiddlywinks&#8221; &#8220;Six Degrees of Kevin Bacon&#8221; &#8220;Punch Buggy&#8221; &#8220;Pin the Tail on the Donkey&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>parlour game</queryString><editDate>2010-12-09</editDate><author>Bryan</author><curator /><description>Parlour games, drawing room games, car games, and similar passtimes that are not card games, dice games, board games, etc.</description><freebaseID /><comment /></Category><Category id="175"><categoryName>perceptionAction</categoryName><englishName>perceptual actions</englishName><humanFormat>%s is a {perception action}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances>listening seeing hearing smelling observing watching reading peeking staring beholding</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>perception action</queryString><editDate /><author /><curator /><description>An event that involves someone perceiving something</description><freebaseID /><comment>I suggest we get rid of this category and instead represent it as a relation</comment></Category><Category id="176"><categoryName>perceptionEvent</categoryName><englishName>perceptual events</englishName><humanFormat>%s is a {perception event}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances>sound light flash cacophony blare beam glint roar clamor wail </seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>perception event</queryString><editDate /><author /><curator /><description>Something that can be perceived by someone.</description><freebaseID /><comment>I suggest we get rid of this category... too vague</comment></Category><Category id="177"><categoryName>person</categoryName><englishName>people</englishName><humanFormat>%s is a {person}</humanFormat><populate>1</populate><visible>1</visible><generalizations>humanAgent</generalizations><mutexExceptions>visualizableThing</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>person</queryString><editDate /><author>Burr</author><curator /><description>A person is a human being (man, woman or child) known to have actually existed. Living persons, celebrities and politicians are persons, as are deceased persons.</description><freebaseID>/people/person</freebaseID><comment /></Category><Category id="178"><categoryName>personAfrica</categoryName><englishName>Africans</englishName><humanFormat>%s is an {African person}</humanFormat><populate>1</populate><visible>1</visible><generalizations>personByLocation</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>&#8220;Nelson Mandela&#8221; &#8220;Paul Kruger&#8221; &#8220;Jimmy Kruger&#8221; &#8220;Max Theiler&#8221; &#8220;Ernest Kombo&#8221; &#8220;Omar Sharif&#8221; &#8220;Boutros Boutros Ghali&#8221; &#8220;Cleopatra&#8221; &#8220;Gigi&#8221; &#8220;Menelek II&#8221; &#8220;Kofi Annan&#8221; &#8220;Steve Tikolo&#8221; &#8220;Jeff Koinange&#8221; &#8220;Sultan Tucker&#8221; &#8220;Daif Al-Ghazal&#8221; &#8220;Mordechai Vanunu&#8221; &#8220;Agbani Darego&#8221; &#8220;Bernard Ntuyahaga&#8221; &#8220;Hawo Tako&#8221; &#8220;Josephine Bakhita&#8221; &#8220;Jeje Odongo&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>african</queryString><editDate>2010-08-31</editDate><author>Bryan (to support Tae)</author><curator /><description>citizens of countries in Africa</description><freebaseID>/en/african_people</freebaseID><comment /></Category><Category id="179"><categoryName>personalCareItem</categoryName><englishName>personal care products</englishName><humanFormat>%s is a {personal care product}</humanFormat><populate>1</populate><visible>1</visible><generalizations>product visualizableObject</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "toothpaste" "deodorant" "dental floss" "hair brush" "nail clippers" "soap" "shampoo" "lotion" "hand sanitizer" "lip balm" "cotton swab"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>personal care item</queryString><editDate /><author /><curator /><description>Items used by people to care for their bodies or to maintain a certain appearance. Could also be called toiletries.</description><freebaseID /><comment /></Category><Category id="180"><categoryName>personAntarctica</categoryName><englishName>Antarcticans</englishName><humanFormat>%s is an {Antarctican person}</humanFormat><populate>1</populate><visible>1</visible><generalizations>personByLocation</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>arctic people</queryString><editDate>2010-08-31</editDate><author>Bryan (to support Tae)</author><curator /><description>Placeholder in case we change the definition of personByLocation categories such that there would be anyone to put here (there are no countries in Antarctica of which to be a citizen).</description><freebaseID /><comment>I suppose we can seed this if one of its siblings picks up somebody that we think really ought to be classified as belonging to Antarctica.</comment></Category><Category id="181"><categoryName>personAsia</categoryName><englishName>Asians</englishName><humanFormat>%s is an {Asian person}</humanFormat><populate>1</populate><visible>1</visible><generalizations>personByLocation</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>&#8220;Hamid Karzai&#8221; &#8220;Abdul Hakim&#8221; &#8220;Geeta Dutt&#8221; &#8220;Son Sen&#8221; &#8220;Jackie Chan&#8221; &#8220;William Hung&#8221; &#8220;Confuscius&#8221; &#8220;Mohandas Karamchand Gandhi&#8221; &#8220;Geet Sethi&#8221; &#8220;Kareena Kapoor&#8221; &#8220;Reza Pahlavi&#8221; &#8220;Nebudchadrezzar II&#8221; &#8220;Yitzhak Yamin&#8221; &#8220;Tojo Hideki&#8221; &#8220;Fujita Tetsuya&#8221; &#8220;Kim Yong-ok&#8221; &#8220;Zed Al Refai&#8221; &#8220;Khun Lo&#8221; &#8220;Kublai Khan&#8221; &#8220;Abdus Salam&#8221; &#8220;Chew Choon Seng&#8221; &#8220;Mu-Yen Chu&#8221; &#8220;Lor Tok&#8221; &#8220;Tsarong&#8221; &#8220;Ngo Dinh Diem&#8221; </seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>asian</queryString><editDate>2010-08-31</editDate><author>Bryan (to support Tae)</author><curator /><description>citizens of countries in Asia</description><freebaseID>/en/asian</freebaseID><comment /></Category><Category id="182"><categoryName>personAustralia</categoryName><englishName>Australians</englishName><humanFormat>%s is an {Australian person}</humanFormat><populate>1</populate><visible>1</visible><generalizations>personByLocation</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>&#8220;Colin Coates&#8221; &#8220;Julia Gillard&#8221; &#8220;Caroline Millar&#8221; &#8220;David Bartlett&#8221; &#8220;Stephen Henry Parker&#8221; &#8220;Casey Donovan&#8221; &#8220;Djalu Gurruwiwi&#8221; &#8220;Mandawuy Yunupingu&#8221; &#8220;Chrisopher Willcock&#8221; &#8220;Arthur Allen&#8221; &#8220;Barry James Hickey&#8221; &#8220;Peter Goldsworthy&#8221; &#8220;Rupert Murdoch&#8221; &#8220;William Henry Bragg&#8221; &#8220;Alan Jones&#8221; &#8220;Steve Irwin&#8221; &#8220;Richard Tognetti&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>australian</queryString><editDate>2010-08-31</editDate><author>Bryan (to support Tae)</author><curator /><description>citizens of Australia</description><freebaseID>/en/australian_people</freebaseID><comment /></Category><Category id="183"><categoryName>personByLocation</categoryName><englishName /><humanFormat>%s is a {person}</humanFormat><populate>0</populate><visible>0</visible><generalizations>person</generalizations><mutexExceptions>male female actor athlete celebrity ceo coach journalist politician scientist musician writer chef visualArtist mlAuthor celebrity astronaut model comedian criminal director judge architect monarch professor</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>person by location</queryString><editDate>2010-08-31</editDate><author>Bryan (to support Tae)</author><curator /><description>Parent category to break up people by regional/national location, which exists as a way to constrain some of the political predicates to the U.S.  For simplicity of decision-making, we use &#8220;citizenship&#8221; as the rule for belongingness in these categories; this is probably &#8220;good enough&#8221; for what we want to do with the political predicates.</description><freebaseID /><comment>Umbrella category for people broken up by location.  These are for Tae's political predicates (which she wants to restrict to US politics), and represent our above approach of dividing people simultaneously by role and by gender taken to a bit of an extreme.  More generally, we see here an example of a kind of extra constraint we might like to palce on relations' arguments that isn't so easy to shoehorn into the structure of the category ontology.</comment></Category><Category id="184"><categoryName>personCanada</categoryName><englishName>Canadians</englishName><humanFormat>%s is a {Canadian person}</humanFormat><populate>1</populate><visible>1</visible><generalizations>personNorthAmerica</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>"William Shatner" "Stephen Harper" "Avril Lavigne" "Monty Hall" "Peter Jennings" "Michael J . Fox" "Dan Aykroyd" "Bryan Adams" "Pamela Anderson" "Glenn Gould" "Jim Carrey"  "Celine Dion" "Keanu Reeves"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>canadian</queryString><editDate>2010-08-31</editDate><author>Tae (via Bryan)</author><curator /><description>citizens of Canada</description><freebaseID>/m/044038p</freebaseID><comment /></Category><Category id="185"><categoryName>personEurope</categoryName><englishName>Europeans</englishName><humanFormat>%s is a {European person}</humanFormat><populate>1</populate><visible>1</visible><generalizations>personByLocation</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>&#8220;Joseph Haydn&#8221; &#8220;Pavel Sukhoi&#8221; &#8220;Charles de Coster&#8221; &#8220;Howard Hodgkin&#8221; &#8220;William Paterson&#8221; &#8220;David Lloyd George&#8221; &#8220;Rudolf II&#8221; &#8220;Mads Mikkelsen&#8221; &#8220;Edsger Dijkstra&#8221; &#8220;Otto Tief&#8221; &#8220;Anne Marie Pohtamo&#8221; &#8220;Ior Bock&#8221; &#8220;Louis Braille&#8221; &#8220;Johann Gutenberg&#8221; &#8220;Archimedes&#8221; &#8220;John von Neumann&#8221; &#8220;Arthur Wellesley&#8221; &#8220;Leonardo da Vinci&#8221; &#8220;Aaron Nimzowitsch&#8221; &#8220;Franz Joseph II&#8221; &#8220;Jonas Kubilius&#8221; &#8220;Gaston Thorn&#8221; &#8220;Eugen Doga&#8221; &#8220;Tryggve Gran&#8221; &#8220;Stefan Kopec&#8221; &#8220;Nicolae Paulescu&#8221; &#8220;Anatoly Solovyev&#8221; &#8220;Vincenzo Bellini&#8221; &#8220;Aurel Stodola&#8221; &#8220;Danilo Dolci&#8221; &#8220;Juan Carlos I&#8221; &#8220;Ingvar Kamprad&#8221; &#8220;Werner Reinhart&#8221; &#8220;Ali Fethi Okyar&#8221; &#8220;Viktor Yuschenko&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>european</queryString><editDate>2010-08-31</editDate><author>Bryan (to support Tae)</author><curator /><description>citizens of countries in Europe</description><freebaseID>/m/043_yvy</freebaseID><comment /></Category><Category id="186"><categoryName>personMexico</categoryName><englishName>Mexicans</englishName><humanFormat>%s is a {Mexican person}</humanFormat><populate>1</populate><visible>1</visible><generalizations>personNorthAmerica</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>&#8220;Diego Rivera&#8221; &#8220;Pita Amor&#8221; &#8220;Lorenzo Zambrano&#8221; &#8220;Manuel Ponce&#8221; &#8220;Silvio Zavala&#8221; &#8220;Octavio Paz&#8221; &#8220;Isidro Fabela&#8221; &#8220;Vicente Guerrero&#8221; &#8220;Enrique Jackson&#8221; &#8220;Juan Diego&#8221; &#8220;Nabor Carrillo Flores&#8221; &#8220;Eloy Cavazos&#8221; &#8220;Francisco Palencia&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>mexican</queryString><editDate>2010-08-31</editDate><author>Bryan (to support Tae)</author><curator /><description>citizens of Mexico</description><freebaseID>/m/05z14zp</freebaseID><comment /></Category><Category id="187"><categoryName>personNorthAmerica</categoryName><englishName>North Americans</englishName><humanFormat>%s is a {North American person}</humanFormat><populate>1</populate><visible>1</visible><generalizations>personByLocation</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>&#8220;Fidel Castro&#8221; &#8220;Stokely Carmichael&#8221; &#8220;Pierre Charles&#8221; &#8220;Cynthia Pratt&#8221; &#8220;Georges Biassou&#8221; &#8220;Farabundo Marti&#8221; &#8220;Manuel Chong Neto&#8221; &#8220;Bianca Jagger&#8221; &#8220;Cristiana Frixione&#8221; &#8220;Luis Guzman&#8221; &#8220;Rodrigo Asturias&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>north american</queryString><editDate>2010-08-31</editDate><author>Bryan (to support Tae)</author><curator /><description>citizens of countries in North America</description><freebaseID /><comment>Seeds here are some people that don't fall into one of the children.  Will this work, or do we need an &#8220;other&#8221; kind of child?</comment></Category><Category id="188"><categoryName>personSouthAmerica</categoryName><englishName>South Americans</englishName><humanFormat>%s is a {South American person}</humanFormat><populate>1</populate><visible>1</visible><generalizations>personByLocation</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>&#8220;Jorge Luis Borges&#8221; &#8220;Beatriz Guido&#8221; &#8220;Carlos Marighella&#8221; &#8220;Princess Isabel&#8221; &#8220;Leonardo Boff&#8221; &#8220;Bernardo O'Higgins&#8221; &#8220;Violeta Parra&#8221; &#8220;Andres Escobar&#8221; &#8220;Juan Manuel Santos&#8221; &#8220;Eugenio Espejo&#8221; &#8220;Lino Oviedo&#8221; &#8220;Mateo Pumacahua&#8221; &#8220;Roberto Canessa&#8221; &#8220;Oscar Yanes&#8221; &#8220;Juan Manuel Sucre Figarella&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>south american</queryString><editDate>2010-08-31</editDate><author>Bryan (to support Tae)</author><curator /><description>citizens of countries in South America</description><freebaseID /><comment /></Category><Category id="189"><categoryName>personUs</categoryName><englishName>Americans</englishName><humanFormat>%s is {american}</humanFormat><populate>1</populate><visible>1</visible><generalizations>personNorthAmerica</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>"Barack Obama"  "Barbara Boxer" "Barney Frank" "Harry Reid" "Hillary Clinton" "Tom Cruise" "Andy Warhol" "Bill Gates" "Tom Mitchell" "William Cohen" "Joshua Bell" "Bob Dylan" "Aretha Franklin"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>american</queryString><editDate>2010-08-31</editDate><author>Tae (via Bryan)</author><curator /><description>citizens of the U.S.A.</description><freebaseID /><comment /></Category><Category id="190"><categoryName>physicalAction</categoryName><englishName>physical actions</englishName><humanFormat>%s is a {physical action}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances>hitting touching poking grasping sitting standing running jumping licking punching</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>physical action</queryString><editDate /><author /><curator /><description>An event that involves someone doing something with their physical body.</description><freebaseID /><comment>I suggest we get rid of this category and instead represent it as a relation</comment></Category><Category id="191"><categoryName>physicalCharacteristic</categoryName><englishName>physical characteristics</englishName><humanFormat>%s is a {physical characteristic}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances>hardness heaviness fluffiness smallness bigness floppiness tallness shortness lankiness swiftness</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>physical characteristic</queryString><editDate /><author /><curator /><description>Features of a substance that are primarily sensory (physical) and generally measurable (businessdictionary.com)</description><freebaseID /><comment>should we rename to physical_characteristic?</comment></Category><Category id="192"><categoryName>physicsTerm</categoryName><englishName>physics terms</englishName><humanFormat>%s is a {term used by physicists}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions>scientificTerm</mutexExceptions><knownNegatives /><instanceType>common</instanceType><seedInstances> "acceleration" "direction" "force" "gravity" "velocity" "speed" "mass" "displacement" "momentum" "weight" "motion" "distance" "vector" "friction" "inertia"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>physics term</queryString><editDate /><author /><curator /><description>Any word with a specific meaning in the physics domain </description><freebaseID /><comment>I suggest we get rid of this category because it seems to be more like a topic model: a loose collection of related terms rather than a precise conceptual category, which is not very amenable to pattern-based learning and just introduces noise.</comment></Category><Category id="193"><categoryName>physiologicalCondition</categoryName><englishName>conditions</englishName><humanFormat>%s is a {physiological condition}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate>2011-02-08</editDate><author>Bryan</author><curator /><description>Most instances will be diseases or other abnormalities.  However, this category also includes conditions such as pregnancy or teething that are entirely normal and expected, but which are nevertheless exception and can require extra care.</description><freebaseID /><comment>Added per February 2011 BLITZ run</comment></Category><Category id="194"><categoryName>placeOfWorship</categoryName><englishName>places of worship</englishName><humanFormat>%s is a {place of worship}</humanFormat><populate>1</populate><visible>1</visible><generalizations>building</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Kuopio Cathedral" "Westminster Abbey" "Hagia Sophia" "Htilominlo Temple" "Muktinath" "San Francisco Zen Center" "Ganden Monastery" "Banteay Srei" "East Ham Baptist Church" "Sleepy Hollow Presbyterian Church" "The Great Mosque of Taza" "The Hurva Synagogue"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate>2010-11-10</editDate><author>Burr</author><curator /><description>A place of worship is a building which is used by members of a religion for worship.</description><freebaseID>/religion/place_of_worship</freebaseID><comment>useful for disambiguating with religions.</comment></Category><Category id="195"><categoryName>planet</categoryName><englishName>planets</englishName><humanFormat>%s is a {planet}</humanFormat><populate>1</populate><visible>1</visible><generalizations>location</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Adrastea " "Carme " "Earth" "Lysithea " "Moon" "Mercury " "Miranda " "Nereid " "Telesto " "Umbriel " "Venus" "433 Eros"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>planet</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>is a celestial body orbiting a star or stellar remnant that is massive enough to be rounded by its own gravity, is not massive enough to cause thermonuclear fusion, and has cleared its neighbouring region of planetesimals</description><freebaseID>none</freebaseID><comment>edited on 2010-10-30 by Estevam</comment></Category><Category id="196"><categoryName>plant</categoryName><englishName>plants</englishName><humanFormat>%s is a {plant}</humanFormat><populate>1</populate><visible>1</visible><generalizations>item species</generalizations><mutexExceptions>vegetable fruit</mutexExceptions><knownNegatives /><instanceType>common</instanceType><seedInstances> "flowers" "grass" "moss" "shrubs" "trees" "algae" "roses" "sunflowers" "pines" "lilypads" "cattails" "walnuts" "bamboo" "rhubarb" "orchids"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>plant</queryString><editDate /><author /><curator /><description>Member of kingdom plantae.  A seed is considered to be a plant because it has been fertilized, although the larger structure of a fruit which merely contains a seed is not itself a plant.  A picked flower, such as a product sold as such, is not a plant because it is something that has a new name as a result of a mortal action on a plant.</description><freebaseID>none</freebaseID><comment /></Category><Category id="197"><categoryName>poem</categoryName><englishName>peoms</englishName><humanFormat>%s is a {poem}</humanFormat><populate>1</populate><visible>1</visible><generalizations>creativeWork</generalizations><mutexExceptions>lyrics musicSong</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>poem</queryString><editDate>2010-12-09</editDate><author>Bryan</author><curator /><description>This type is for all kinds of poems, from epics to doggerel.</description><freebaseID>/book/poem</freebaseID><comment /></Category><Category id="198"><categoryName>politicalOffice</categoryName><englishName>political offices</englishName><humanFormat>%s is a kind of {office held by a politician}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions>profession</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances>"President" "Vice President" "Judge" "Governor" "senator" "mayor" "representative" "assemblyman" "congressman" "congresswoman" "lieutenant governor" "attorney general" &#8220;United States President&#8221; &#8220;Supreme Court Chief Justice&#8221; &#8220;New York City Mayor&#8221; &#8220;California Governor&#8221; &#8220;United States Senator&#8221; &#8220;Federal Reserve Chair&#8221; &#8220;State Secretary&#8221; &#8220;House Representative&#8221; &#8220;U.S. Senate Majority Leader&#8221; &#8220;U.S. Supreme Court Justice&#8221; &#8220;House Speaker&#8221; &#8220;White House Chief of Staff&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>political office</queryString><editDate>2010-08-31</editDate><author>Burr</author><curator /><description>This type is for the office, title, or position within a government. &#160;It includes both single-person offices (prime minister, emperor, mayor), titles of members of a governing body (representative, sentator, MP), and titles of additional positions within a governing body (leader of the opposition, speaker of the house).</description><freebaseID>/government/government_office_or_title</freebaseID><comment>Merged in seeds from Tae</comment></Category><Category id="199"><categoryName>politicalParty</categoryName><englishName>political parties</englishName><humanFormat>%s is a {political party}</humanFormat><populate>1</populate><visible>1</visible><generalizations>nonGovOrganization</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>"Democratic Party" "Republican Party" "Green Party" "Libertarian Party" "Indian National Congress" "BJP" "Left Party" "Labour Party" "RJD" "Socialist Democratic Party"  "BSP" "Liberal Party"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>political party</queryString><editDate>2010-08-31</editDate><author>Tom Mitchell</author><curator /><description>organized political group that primarily aims for the attainment of political power and public office for its designated members.</description><freebaseID>/government/political_party</freebaseID><comment>Bryan merged the political parties from Tae's nonGovOrganization here and made this category a specialization of that one</comment></Category><Category id="200"><categoryName>politician</categoryName><englishName>politicians</englishName><humanFormat>%s is a {politician}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>male female personByLocation professor monarch celebrity astronaut</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Barack Obama" "Barbara Boxer" "Barney Frank" "Dmitry Medvedev" "Felipe Calderon" "Harry Reid" "Hillary Clinton" "Jimmy Carter" "Joe Biden" "Luke Ravenstahl" "Nicolas Sarkozy" "Richard Daley" "Roger Sherman" "John McCain" "Stephen Harper"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>politician</queryString><editDate /><author /><curator /><description>Any person who has held or sought a position in a government.  The term "politician" may not be strictly accurate for some positions such as kings, but we have to call it something!</description><freebaseID>/government/politician</freebaseID><comment /></Category><Category id="201"><categoryName>politicianUs</categoryName><englishName>American politicians</englishName><humanFormat>%s is a {U.S. politician}</humanFormat><populate>1</populate><visible>1</visible><generalizations>personUs politician</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>"Barack Obama"  "Barbara Boxer" "Barney Frank" "Harry Reid" "Hillary Clinton" "Jimmy Carter" "John McCain" "Joe Biden" "Luke Ravenstahl" "Ed Rendell" "George W . Bush"  "Mitt Romney"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>US politician</queryString><editDate>2010-08-31</editDate><author>Tae (via Bryan)</author><curator /><description>Politicians of the U.S.A</description><freebaseID /><comment /></Category><Category id="202"><categoryName>politicsBill</categoryName><englishName>legislations</englishName><humanFormat>%s is a {legislative bill}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>"Climate Stewardship Act" "1964 Civil Rights Act" "American With Disabilities Act" "Health Insurance Portability and Accountability Act" "Social Security Act" "Sarbanes-Oxley Act" "Genetic Information Nondiscrimination Act" "Homeland Security Act" "PATRIOT Act" "Patient Safety and Quality Improvement Act" "Public Health Security and Bioterrorism Preparedness and Response Act" "Educational Rights and Privacy Act"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>political bill</queryString><editDate>2010-08-31</editDate><author>Tae (via Bryan)</author><curator /><description>A legislative bill, passed, enacted, or otherwise.</description><freebaseID>none</freebaseID><comment>This was moved from event to abstractThing because this represents the existence of a bill, not of its possible passage or enactment.</comment></Category><Category id="203"><categoryName>politicsBlog</categoryName><englishName>political blogs</englishName><humanFormat>%s is a {political blog}</humanFormat><populate>1</populate><visible>1</visible><generalizations>blog</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances>"Daily Kos" "RedState" "Talking Points Memo" "Power Line" "Andrew Sullivan" "Matthew Yglesias" "Hot Air" "Instapundit" "Think Progress" "The Corner" "American Thinker" "Digby"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>political blog</queryString><editDate>2010-08-31</editDate><author>Tae (via Bryan)</author><curator /><description>A blog substantially and charactarizably, but not exclusively, devoted to politics or political issues.  A general current-events blog such as might be equated with a general newspaper should not be classified as a politicsBlog, although an identifyable subsection or the blog of a particular staff member could be.</description><freebaseID /><comment>Description is unfortunately subjective.  Maybe we should make this a mixin kind of thing to identify blogs with any significant political content?</comment></Category><Category id="204"><categoryName>politicsGroup</categoryName><englishName>political groups</englishName><humanFormat>%s is a {political group}</humanFormat><populate>0</populate><visible>0</visible><generalizations>geopoliticalOrganization</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>political group</queryString><editDate>2010-08-31</editDate><author>Tae (via Bryan)</author><curator /><description>Organizations, which may or may not be part of the government, that act in the arenas of politics or government.</description><freebaseID /><comment>Umbrella caetgory used by relations</comment></Category><Category id="205"><categoryName>politicsIssue</categoryName><englishName>Issues</englishName><humanFormat>%s is a {political issue}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions>religion socioPolitical ethnicGroup economicSector currency buildingMaterial book academicField</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances>"energy" "environment" "military" "labor" "race" "religion" "health care" "civil rights" "gender discrimination" "abortion" "taxes" "gun control" "foreign policy" "immigration" "education" "gay rights" "fiscal policy"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>political issue</queryString><editDate>2010-08-31</editDate><author>Tae (via Bryan)</author><curator /><description>An issue of political concern</description><freebaseID /><comment /></Category><Category id="206"><categoryName>port</categoryName><englishName>ports</englishName><humanFormat>%s is a transportation {port}</humanFormat><populate>1</populate><visible>1</visible><generalizations>attraction</generalizations><mutexExceptions>transportation</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances>"Port Metro Vancouver","Cruise Port","Port Hardy","Toronto port","&#160;Great British&#160;Port","Port&#160;of Dover","Portland port","Port&#160;Douglas","Port&#160;Kembla","Port of Charleston","Port of Memphis"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>port</queryString><editDate>2010-09-06</editDate><author>M.Samadi</author><curator /><description>a location on a coast or shore containing one or more harbors where ships can dock and transfer people or cargo to or from land. Port locations are selected to optimize access to land and navigable water, for commercial demand, and for shelter from wind and waves. Ports with deeper water are rarer, but can handle larger, more economical ships. Since ports throughout history handled every kind of traffic, support and storage facilities vary widely, may extend for miles, and dominate the local economy. Some ports have an important, perhaps exclusively military role.</description><freebaseID>/en/port</freebaseID><comment /></Category><Category id="207"><categoryName>product</categoryName><englishName>products</englishName><humanFormat>%s is a {product}</humanFormat><populate>1</populate><visible>1</visible><generalizations>item</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Accord" "Bounce" "Cascade" "Cheer" "Colgate" "Coolpix P6000" "D40" "EOS 40D" "Escalade" "Cherokee" "Honda Fit" "iPod" "Jeep Cherokee" "Jetta" "Malibu" "Nintendo Wii" "PowerShot" "Prius" "Razr" "Xbox 360" "Zune"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>product</queryString><editDate /><author /><curator /><description /><freebaseID>none</freebaseID><comment>/business/product is too restrictive &#8211; only specific products, and not things like automobile models.</comment></Category><Category id="208"><categoryName>profession</categoryName><englishName>professions</englishName><humanFormat>%s is a {profession}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions>politicalOffice</mutexExceptions><knownNegatives /><instanceType>common</instanceType><seedInstances> "cooks" "doctors" "lawyers" "teachers" "athletes" "CEOs" "presidents" "vice presidents" "accountants" "professors" "managers" "janitors" "biologists" "chemists" "pilots"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>profession</queryString><editDate /><author /><curator /><description>The career or job which a person performs for most of their working life, or for which they are best known (FreeBase)</description><freebaseID>/people/profession</freebaseID><comment /></Category><Category id="209"><categoryName>professionalOrganization</categoryName><englishName>professional organizations</englishName><humanFormat>%s is a {professional organization}</humanFormat><populate>1</populate><visible>1</visible><generalizations>organization </generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "ACM" "IEEE" "AAAI" "AAAS" "NAS" "OHBM" "AMA" "SIAM" "Association for Computing Machinery" "Institute of Electrical and Electronics Engineers" "American Academy of Arts and Sciences" "Society for Industrial and Applied Mathematics"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>professional organization</queryString><editDate /><author /><curator /><description>A professional organization is an organization of people who work in a particular field.</description><freebaseID /><comment /></Category><Category id="210"><categoryName>professor</categoryName><englishName>professor</englishName><humanFormat>%s is a {professor}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>director personByLocation architect astronaut writer visualArtist scientist politician musician mlAuthor male journalist female coach ceo celebrity actor</mutexExceptions><knownNegatives>"Paris Hilton" "Vladimir Putin" "Jerry Garcia" "Bill Gates" "Mickey Mantel"</knownNegatives><instanceType>proper</instanceType><seedInstances>"Don Knuth" "Marvin Minsky" "Manuel Blum" "Herb Simon" "Takeo Kanade" "Daphne Koller" "Steven Pinker" "Stephen Hawking" "Noam Chomsky" "Milton Friedman" "John Tufts" "Umberto Eco" "Jonathan Kellerman" "Shelly Kagan"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>professor</queryString><editDate>2010-12-13</editDate><author>Tom</author><curator /><description>"A faculty member at a university or college"</description><freebaseID>none</freebaseID><comment /></Category><Category id="211"><categoryName>programmingLanguage</categoryName><englishName>programming languages</englishName><humanFormat>%s is a {programming language}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "C++" "java" "Python" "perl" "LISP" "PHP" "erlang" "scheme" "FORTRAN" "javascript" "Turbo Pascal" "COBOL"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>programming language</queryString><editDate>2010-06-28</editDate><author>Burr</author><curator /><description>A language used to give instructions to a computer</description><freebaseID>/computer/programming_language</freebaseID><comment /></Category><Category id="212"><categoryName>protein</categoryName><englishName>proteins</englishName><humanFormat>%s is a {protein}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "ATP-binding cassette" "interleukin-2" "epidermal growth factor" "EGF receptor" "c-jun" "phoP" "RET proto-oncogene" "e-mycin" "chloramphenicol acetyltransferase" "NF kappa B" "aldosterone receptor" "RNA polymerase" "cyclophilin" "sirtuin" "tumor necrosis factor alpha"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>protein</queryString><editDate /><author>Burr</author><curator /><description>Proteins are any complex organic compounds that consist of one or more chains of amino acids. Proteins are typically essential components of any living cell and indispensable to the proper functioning of all organisms.</description><freebaseID>/biology/protein</freebaseID><comment /></Category><Category id="213"><categoryName>publication</categoryName><englishName>publications</englishName><humanFormat>%s is a {publication}</humanFormat><populate>1</populate><visible>1</visible><generalizations>mediaCompany</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Readers Digest" "National Geographic" "Rolling Stone" "People" "Time" "New York Times" "Pittsburgh Post-Gazette" "New York Post" "Chicago Tribune" "Houston Chronicle" "Huffington Post" "TechCruch" "Mashable" "Gizmodo" "Engadget"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>publication</queryString><editDate /><author /><curator /><description /><freebaseID /><comment /></Category><Category id="214"><categoryName>race</categoryName><englishName>races</englishName><humanFormat>%s is a {sports race}</humanFormat><populate>1</populate><visible>1</visible><generalizations>sportsEvent</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Kentucky Derby" "Preakness" "Belmont Stakes" "Indy 500" "Tour de France" "Tour of Flanders" "UCI Road World Championships" "Giro d'Italia" "Paris&#8211;Roubaix" "Tour Down Under" "Paris&#8211;Nice" "Tour DuPont" "Tour of Britain"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>race</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>A sport race is a competition of speed, against an objective criterion, usually a clock or to a specific point. The competitors in a race try to complete a given task in the shortest amount of time. Typically this involves traversing some distance, but it can be any other task involving speed to reach a specific goal. </description><freebaseID>none</freebaseID><comment>edited on 2010-10-30 by Estevam</comment></Category><Category id="215"><categoryName>radioStation</categoryName><englishName>radio stations</englishName><humanFormat>%s is a {radio station}</humanFormat><populate>1</populate><visible>1</visible><generalizations>mediaCompany geolocatableThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "WBUR" "WGBH" "WGN" "WBEZ" "93.9 Lite FM" "106.9 The Point" "KSBJ" "WFYI" "WIBC" "WORD-FM" "KDKA" "WDVE" "KEXP" "KUBE-FM" "KMPS-FM"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>radio station</queryString><editDate /><author /><curator /><description>A radio station is a broadcaster which transmits audio. This category includes broadcast radio, satellite radio and internet radio stations.</description><freebaseID>/broadcast/radio_station</freebaseID><comment /></Category><Category id="216"><categoryName>recipe</categoryName><englishName>recipes</englishName><humanFormat>%s is  a {recipe}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>recipe</queryString><editDate>2010-11-01</editDate><author>Bryan</author><curator /><description>A recipe is a method of preparing a dish.  Dishes may have multiple recipes.  For instance, there may be many different recipes for chocolate chip cookies.</description><freebaseID>/food/recipe</freebaseID><comment>Created during feedback @ 160 because food categories were picking up recipes</comment></Category><Category id="217"><categoryName>recordLabel</categoryName><englishName>record labels</englishName><humanFormat>%s is a {record label}</humanFormat><populate>1</populate><visible>1</visible><generalizations>mediaCompany</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Atlantic Records" "Capitol Records" "Sony Epic" "DGC" "Geffen" "EMI" "Sub Pop" "Apple Records" "Asthmatic Kitty" "Sire Records" "Secretly Canadian" "Interscope" "Jive Records" "Elektra" "Tooth and Nail"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>record label</queryString><editDate /><author /><curator /><description>A record label is a company that releases music albums.</description><freebaseID>/music/record_label</freebaseID><comment /></Category><Category id="218"><categoryName>religion</categoryName><englishName>religions</englishName><humanFormat>%s is a {religion}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions>politicsIssue</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances>Catholicism Islam Sikhism Jainism Shinto Taoism Protestantism Christianity Hinduism Buddhism</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>religion</queryString><editDate /><author>Burr</author><curator /><description>Religious sects, denominations, and (meta-)organizations. NOT church buildings or individual chapters/institutions.</description><freebaseID>/religion/religion</freebaseID><comment /></Category><Category id="219"><categoryName>reptile</categoryName><englishName>reptiles</englishName><humanFormat>%s is a {reptile}</humanFormat><populate>1</populate><visible>1</visible><generalizations>vertebrate</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "alligators" "bearded dragons" "chameleons" "snakes" "tortoises" "turtles" "crocodiles" "rattlesnakes" "iguanas" "lizards" "pythons" "boas" "vipers" "mud turtles" "geckoes"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>reptile</queryString><editDate /><author>Burr</author><curator /><description>Reptiles are animals in the (Linnaean) class Reptilia. They are characterized by breathing air, laying tough-shelled amniotic eggs, and having skin covered in scales and/or scutes.</description><freebaseID>none</freebaseID><comment /></Category><Category id="220"><categoryName>researchProject</categoryName><englishName>research project</englishName><humanFormat>%s is a {research project}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractthing</generalizations><mutexExceptions>mlAlgorithm mlSoftware mlDataset</mutexExceptions><knownNegatives>"baseball game"</knownNegatives><instanceType>proper</instanceType><seedInstances>"GWAP" "Autonomous Robots" "WebKB" "Pittsburgh Science of Learning Center" "CYC" "Mars Rover Project" "Autonomous Driving Project" "Mobility Research Center" "Intelligent Transportation Research Center" "cancer research" "machine learning research" "computer science research" "psychology research" "genetics research" "biology research" "economics research"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>research project</queryString><editDate>2010-12-13</editDate><author>Tom</author><curator /><description>"A specific research effort or a research center"</description><freebaseID>none</freebaseID><comment /></Category><Category id="221"><categoryName>restaurant</categoryName><englishName>restaurants</englishName><humanFormat>%s is a {restaurant}</humanFormat><populate>1</populate><visible>1</visible><generalizations>building</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>"French Laundry" "La Grenouille" "Le Cirque" "Commander 's Palace" "Spago" "Olympia Cafe" "Versailles Restaurant" "The Fat Duck" "Chez Panisse" "Gramercy Tavern"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>restaurant</queryString><editDate /><author>Burr</author><curator /><description>The restaurant type represents single restaurants as well as restaurant chains.</description><freebaseID>/dining/restaurant</freebaseID><comment /></Category><Category id="222"><categoryName>retailStore</categoryName><englishName>retail stores</englishName><humanFormat>%s is a {retail store}</humanFormat><populate>1</populate><visible>1</visible><generalizations>building</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>retail store</queryString><editDate>2010-11-01</editDate><author>Bryan</author><curator /><description>Brick &amp; mortar retail stores and franchises.  Retail means selling goods, not services (e.g. prepared food)</description><freebaseID /><comment>Added during feedback @ 160 because magazine, restaurant, etc. were picking up retail stores</comment></Category><Category id="223"><categoryName>river</categoryName><englishName>rivers</englishName><humanFormat>%s is a {river}</humanFormat><populate>1</populate><visible>1</visible><generalizations>location geolocatableThing</generalizations><mutexExceptions>attraction</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances>"Nile River" "Thames" "Chicago River" "Mississippi River" "Colorado River" "Tigris River" "Euphrates" "Yangtze" "Yellow River" "Amazon River"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>river</queryString><editDate /><author /><curator /><description>A river is a natural waterway usually formed by water derived from either precipitation or glacial meltwater, and flows from higher ground to lower ground. Most commonly rivers flow on the surface but there are many examples of underground rivers. In some areas of highly variable rainfall, some rivers carry water only occasionally and may be dry for several years at a time. Such waterways of all sizes, including streams and creeks, can be listed under this type.</description><freebaseID>/geography/river</freebaseID><comment /></Category><Category id="224"><categoryName>room</categoryName><englishName>rooms</englishName><humanFormat>%s is a kind of {room}</humanFormat><populate>1</populate><visible>1</visible><generalizations>location</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "kitchens" "bedrooms" "closets" "living rooms" "hallways" "lobbies" "offices" "attics" "basements" "foyers" "dining rooms" "pantries" "bathrooms" "mud rooms" "family rooms"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>room</queryString><editDate /><author /><curator /><description>A conceptually-distinct subspace within a building.  The entire space within a building could be considered to be a room in the case of, say, a one-room schoolhouse.</description><freebaseID>none</freebaseID><comment /></Category><Category id="225"><categoryName>school</categoryName><englishName>schools</englishName><humanFormat>%s is a {school}</humanFormat><populate>0</populate><visible>0</visible><generalizations>organization </generalizations><mutexExceptions>nonProfitOrganization</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>school</queryString><editDate>2010-08-30</editDate><author>Bryan</author><curator /><description>A school is an organization whose primary function is education. This category includes universities, K-12 schools and trade schools.</description><freebaseID>/education/educational_institution</freebaseID><comment>Placeholder &#8211; needs to have other children (esp. capturing primary, elementary, preschool, maybe colleges within universities, teaching hospitals, etc.) and maybe seeds and populate=true</comment></Category><Category id="226"><categoryName>scientist</categoryName><englishName>scientists</englishName><humanFormat>%s is a {scientist}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>male female mlAuthor personByLocation writer architect professor</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Albert Einstein" "Blaise Pascal" "Charles Darwin" "Edward Teller" "Enrico Fermi" "Ernest Rutherford" "Francis Crick" "Freeman Dyson" "Galileo Galilei" "Isaac Newton" "Max Planck" "Niels Bohr" "Richard Feynman" "Robert Oppenheimer" "Stephen Hawking" &#8220;Talley&#8221; &#8220;NZ scientists&#8221; &#8220;Scientists&#8221; &#8220;Judah Folkman&#8221; &#8220;Matti Viitanen&#8221; &#8220;Dr . Denis A . Evans&#8221; &#8220;Dr . Creighton Phelps&#8221; &#8220;University of Southern California researchers&#8221; &#8220;Samir Khleif&#8221; &#8220;a US researcher&#8221; &#8220;Dr Henri Joyeux&#8221; &#8220;Michael Leitzmann&#8221; &#8220;Maria Hedelin&#8221; &#8220;Rui&#8221; &#8220;a researcher&#8221; &#8220;Leon Schwartzenberg&#8221; &#8220;Zhang Hongfei&#8221; &#8220;researchers at the Veterans Affairs Medical Center in New Mexico&#8221; &#8220;Dr . Thierry Poynard&#8221; &#8220;Charles M . Rice&#8221; &#8220;John Schiller&#8221; &#8220;Rui Zheng&#8221; &#8220;Savio Woo&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>scientist</queryString><editDate /><author /><curator /><description>A scientist is a professional who performs research to discover the rules which govern the natural world. This category includes mathematicians, even though math isn't really a science.</description><freebaseID /><comment /></Category><Category id="227"><categoryName>shoppingMall</categoryName><englishName>shopping malls</englishName><humanFormat>%s is a {shopping mall}</humanFormat><populate>1</populate><visible>1</visible><generalizations>building</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Mall of America" "Braehead" "Bull Ring, Birmingham" "Pantip Plaza" "West Edmonton Mall" "Plaza Las Am&#233;ricas" "Meadowhall Centre" "The Galleria " "Toronto Eaton Centre" "Highcross Leicester" "Bucure&#351;ti Mall" "Rideau Centre"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>shopping mall</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"A shopping mall is a building or group of buildings containing many stores, restaurants, and businesses."</description><freebaseID>/business/shopping_center</freebaseID><comment /></Category><Category id="228"><categoryName>skiArea</categoryName><englishName>ski areas</englishName><humanFormat>%s is a {place to ski}</humanFormat><populate>1</populate><visible>1</visible><generalizations>attraction</generalizations><mutexExceptions>mountain mountainRange</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Whistler Blackcomb" "Arapahoe Basin" "Marquette Mountain" "Fernie Alpine Resort" "Heavenly Mountain Resort" "Mammoth Mountain Ski Area" "Falls Creek" "Val Thorens" "Portes du Soleil" "La Plagne" "Whakapapa skifield" "Bear Valley "</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>ski area</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>A place to ski"</description><freebaseID>none</freebaseID><comment /></Category><Category id="229"><categoryName>skyscraper</categoryName><englishName>skyscrapers</englishName><humanFormat>%s is a {skyscraper}</humanFormat><populate>1</populate><visible>1</visible><generalizations>building</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Bank of China Tower" "CN Tower" "Chrysler Building" "Eiffel Tower" "Hopewell Centre, Hong Kong" "Willis Tower" "London Eye" "Sears Tower" "Palace of Culture and Science" "John Hancock Center" "Aon Center "</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>skyscrape</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"A very tall building"</description><freebaseID>/architecture/skyscraper</freebaseID><comment /></Category><Category id="230"><categoryName>socioPolitical</categoryName><englishName>sociopolitical words</englishName><humanFormat>%s is a {socio-political term}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions>politicsIssue</mutexExceptions><knownNegatives /><instanceType>common</instanceType><seedInstances> "democracy" "freedom" "innocence" "justice" "tyranny" "anarchy" "resistance" "revolution" "progress" "dictatorship" "propaganda" "war" "independence" "terrorism"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>sociopolitical</queryString><editDate /><author /><curator /><description>Any socio-political word (?!)</description><freebaseID /><comment>I suggest we get rid of this category because it seems to be more like a topic model: a loose collection of related terms rather than a precise conceptual category, which is not very amenable to pattern-based learning and just introduces noise.</comment></Category><Category id="231"><categoryName>software</categoryName><englishName>software</englishName><humanFormat>%s is {software}</humanFormat><populate>1</populate><visible>1</visible><generalizations>product</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Asteroids " "Sid Meier's Alpha Centauri" "Apache HTTP Server" "AutoCAD" "AbiWord" "Active Server Pages" "ArgoUML" "AOL Instant Messenger" "BearShare" "Puzzle Bobble" "Bash " "Bugzilla"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>software</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"software that runs on a computer."</description><freebaseID>none</freebaseID><comment>Freebase's /computer/software excludes video games, which is of dubious utility</comment></Category><Category id="232"><categoryName>species</categoryName><englishName>species</englishName><humanFormat>%s is a {species} of animal</humanFormat><populate>0</populate><visible>0</visible><generalizations>abstractThing</generalizations><mutexExceptions>visualizableThing</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>species</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>is one of the basic units of biological classification and a taxonomic rank. A species is often defined as a group of organisms capable of interbreeding and producing fertile offspring.</description><freebaseID>none</freebaseID><comment>edited on 2010-10-30 by Estevam</comment></Category><Category id="233"><categoryName>sport</categoryName><englishName>sports</englishName><humanFormat>%s is a {sport}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions>hobby</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances> "badminton" "baseball" "basketball" "boxing" "curling" "football" "hockey" "polo" "skiing" "soccer" "swimming" "tennis" "volleyball" "water polo" "wrestling"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>sport</queryString><editDate /><author /><curator /><description>A game which involves some form of physical prowess (i.e. athleticism, as opposed to the physical prowess needed for a parlour game like Pin the Tail on the Donkey).  Note that this does not include non-game sports; those may be hobbies instead.</description><freebaseID>/sports/sport</freebaseID><comment /></Category><Category id="234"><categoryName>sportsEquipment</categoryName><englishName>sports equipment</englishName><humanFormat>%s is {sports equipment}</humanFormat><populate>1</populate><visible>1</visible><generalizations>item visualizableObject</generalizations><mutexExceptions>tool</mutexExceptions><knownNegatives /><instanceType>common</instanceType><seedInstances> "bats" "balls" "hockey pucks" "pucks" "hockey sticks" "soccer nets" "basketball nets" "football helmets" "shoulder pads" "goal posts" "skis" "skateboards" "footballs" "baseballs" "soccer balls" "rackets"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>sports equipment</queryString><editDate /><author /><curator /><description>Anything which is used to play a sport</description><freebaseID>/sports/sports_equipment</freebaseID><comment /></Category><Category id="235"><categoryName>sportsEvent</categoryName><englishName>sports events</englishName><humanFormat>%s is a {sporting event}</humanFormat><populate>1</populate><visible>1</visible><generalizations>event</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Tour de France" "2002 Winter Olympics" "1936 Summer Olympics" "1948 Summer Olympics" "1948 Winter Olympics" "1896 Summer Olympics" "1928 Winter Olympics" "1924 Winter Olympics" "2000 Summer Olympics" "1996 Summer Olympics" "1976 Summer Olympics" "2006 Winter Olympics"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>sports event</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>is when a sport is played or otherwise engaged in, including but not limited to what would be termed a &#8220;sports game&#8221;.  See child categories for examples.</description><freebaseID>none</freebaseID><comment>edited on 2010-10-30 by Estevam</comment></Category><Category id="236"><categoryName>sportsGame</categoryName><englishName>sports games</englishName><humanFormat>%s is a {sports game}</humanFormat><populate>1</populate><visible>1</visible><generalizations>sportsEvent game</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "2001 Super Bowl" "2002 Stanley Cup" "1999 World Series" "last Sunday 's match"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>sports game</queryString><editDate /><author /><curator /><description>A sports game is a particular instance of a sporting event where teams or athletes compete. This could be a series of matches if the competitors remain the same, but this does not extend to something like a tournament or season where the series of matches draws on different combinations from a set of teams.</description><freebaseID /><comment /></Category><Category id="237"><categoryName>sportsLeague</categoryName><englishName>sports leagues</englishName><humanFormat>%s is a {sports league}</humanFormat><populate>1</populate><visible>1</visible><generalizations>organization </generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "NFL" "National Football League" "AFL" "American Football League" "Big East" "NBA" "National Basketball Association" "PGA" "NHL" "ACC" "Minor League Baseball" "Eurocup" "Canadian Football League" "WNBA" "NASCAR"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>sports league</queryString><editDate /><author /><curator /><description>A sports league is an association of teams that compete with each other in a sport. Sports leagues include conferences and divisions of other sports leagues.</description><freebaseID>/sports/sports_league</freebaseID><comment>Conferences and divisions are included in the definition because they are in the Freebase topic and NELL has already learned some. </comment></Category><Category id="238"><categoryName>sportsTeam</categoryName><englishName>sports teams</englishName><humanFormat>%s is a {sports team}</humanFormat><populate>1</populate><visible>1</visible><generalizations>organization geolocatableThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Boston Celtics" "Bulls" "Chicago White Sox" "Cleveland Cavaliers" "Cubs" "Derby County" "Los Angeles Lakers" "Manchester United" "New York Giants" "Pittsburgh Penguins" "Pittsburgh Steelers" "San Antonio Spurs" "Seattle Seahawks" "Tampa Bay Lightning" "Yankees"</seedInstances><seedExtractionPatterns /><conceptSynonyms>{&#8220;Boston Celtics&#8221;, &#8220;Celtics&#8221;} {&#8220;Los Angeles Lakers&#8221;, &#8220;Lakers&#8221;} {&#8220;Yankees&#8221;, &#8220;New York Yankees&#8221;} {&#8220;Red Wings&#8221;, &#8220;Detroit Red Wings&#8221;} {&#8220;Steelers&#8221;, &#8220;Pittsburgh Steelers&#8221;} {&#8220;Phoenix Suns&#8221;, &#8220;Suns&#8221;} {&#8220;Jags&#8221;, &#8220;Jaguars&#8221;} {&#8220;USC Trojans&#8221;, &#8220;Trojans&#8221;} {&#8220;Rays&#8221;, &#8220;Tampa Bay Devil Rays&#8221;} {&#8220;Oakland A's&#8221;, &#8220;Oakland Athletics&#8221;}</conceptSynonyms><queryString>sports team</queryString><editDate /><author /><curator /><description>A sports team is a group of athletes who play a sport together competitively</description><freebaseID>/sports/sports_team</freebaseID><comment>Do non-competative teams exist that we have to worry about putting anywhere?</comment></Category><Category id="239"><categoryName>sportsTeamPosition</categoryName><englishName>sports team positions</englishName><humanFormat>%s is a {sports team position}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives>"ceo","umpire"</knownNegatives><instanceType>all</instanceType><seedInstances>"pitcher" "catcher" "quarterback" "halfback" "nose guard" "lineman" "goalie" "outfielder" "linebacker" "fullback" "running back" "shortstop" "first baseman" "server" "punter"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>sports team position</queryString><editDate>2011-05-17</editDate><author>Tom</author><curator /><description>The name of a position on a sports team (e.g., quarterback)</description><freebaseID /><comment>Freebase has more specific categories, like baseball position</comment></Category><Category id="240"><categoryName>stadiumOrEventVenue</categoryName><englishName>stadiums</englishName><humanFormat>%s is a {stadium or event venue}</humanFormat><populate>1</populate><visible>1</visible><generalizations>building attraction</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "PNC Park" "Yankee Stadium" "Wrigley Field" "Wembley Stadium" "Morumbi Stadium" "Stade de France" "Stadium Australia" "Azadi Stadium" "Camp Nou" "Georgia Dome" "Qwest Field" "Memorial Stadium" "Fenway Park" "Heinz Field" "Mellon Arena"</seedInstances><seedExtractionPatterns /><conceptSynonyms>{&#8220;Navasota Rattler Stadium&#8221;, &#8220;Rattler Stadium&#8221;} {&#8220;TD Waterhouse Center&#8221;, &#8220;TD Waterhouse Centre&#8221;} {&#8220;Lake Charles Civic Center Arena&#8221;, &#8220;Lake Charles Civic Center&#8221;} {&#8220;Meadowlands Complex&#8221;, &#8220;Meadowlands Sports Complex&#8221;} {&#8220;Mile High Stadium&#8221;, &#8220;Invesco Field at Mile High&#8221;} {&#8220;Classic Center Theatre&#8221;, &#8220;Classic Center&#8221;} {&#8220;Kimbrough Memorial Stadium&#8221;, &#8220;Kimbrough Stadium&#8221;} {&#8220;Shubert Theatre&#8221;, &#8220;Shubert Theater&#8221;} {&#8220;Dodger Stadium&#8221;, &#8220;Dodgers Stadium&#8221;} {&#8220;Brown Stadium&#8221;, &#8220;Browns Stadium&#8221;}</conceptSynonyms><queryString>(stadium OR event) venue</queryString><editDate /><author>Burr</author><curator /><description>A building where large spectator events (usually sporting events) take place.</description><freebaseID>/sports/sports_facility</freebaseID><comment /></Category><Category id="241"><categoryName>stateOrProvince</categoryName><englishName>states</englishName><humanFormat>%s is a {state or a province}</humanFormat><populate>1</populate><visible>1</visible><generalizations>geopoliticalLocation, geopoliticalOrganization geolocatableThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Florida" "Georgia" "Massachusetts" "Michigan" "New Jersey" "New York" "Ohio" "Texas" "Virginia" "British Columbia" "Manitoba" "Goa" "Karnataka" "Baja California" "Quintana Roo"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>(state OR province)</queryString><editDate /><author /><curator /><description>In general, the top-level administrative or political subdivision within a country.</description><freebaseID>none</freebaseID><comment /></Category><Category id="242"><categoryName>street</categoryName><englishName>streets</englishName><humanFormat>%s is a {street}</humanFormat><populate>1</populate><visible>1</visible><generalizations>location geolocatableThing</generalizations><mutexExceptions>highway</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances> "Forbes Avenue" "First Street" "Pennsylvania Avenue" "Hollywood Blvd" "Canal Street" "Wacker Drive" "M Street" "Western Avenue" "Sixteenth Street" "Meridian Road"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>street</queryString><editDate /><author /><curator /><description>A route of travel that has a single name indicating its entirety, and that could have a street address (as distinct from trail, which may not feature addresses)</description><freebaseID>none</freebaseID><comment /></Category><Category id="243"><categoryName>tableItem</categoryName><englishName>tabletop items</englishName><humanFormat>%s is an {item found on a table}</humanFormat><populate>1</populate><visible>1</visible><generalizations>householdItem</generalizations><mutexExceptions>kitchenItem hallwayItem bathroomItem officeItem bedroomItem</mutexExceptions><knownNegatives>"table","sofa","chair","refrigerator","door"</knownNegatives><instanceType>all</instanceType><seedInstances>"plate" "fork" "spoon" "cup" "glass" "knife" "napkin" "vase" "tablecloth" "phone" "computer" "book" "placemat" "dish" "silverware" "lamp"</seedInstances><seedExtractionPatterns>&#8220;_ are found on tables&#8221;</seedExtractionPatterns><conceptSynonyms /><queryString>table item</queryString><editDate>2011-05-17</editDate><author>Tom</author><curator /><description>Any item that is commonly found on a table. </description><freebaseID /><comment>introduced for vision and robotic systems</comment></Category><Category id="244"><categoryName>televisionNetwork</categoryName><englishName /><humanFormat>%s is a {TV network}</humanFormat><populate>0</populate><visible>0</visible><generalizations>mediaCompany</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "ABC" "NBC" "CBS" "Fox" "PBS" "CW" "Independent"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>television network</queryString><editDate /><author>Burr</author><curator /><description>Category for different types of TV networks (currently closed-world, limited to major American networks)</description><freebaseID>/tv/tv_network</freebaseID><comment /></Category><Category id="245"><categoryName>televisionShow</categoryName><englishName>television shows</englishName><humanFormat>%s is a {TV show}</humanFormat><populate>1</populate><visible>1</visible><generalizations>creativeWork</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Ally McBeal" "ALF Tales" "The Beverly Hillbillies" "Beavis and Butt-head" "Blackadder" "Babylon 5" "Bagpuss" "Banacek" "Cheers" "Coronation Street" "Doctor Who" "Do Not Adjust Your Set"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>television show</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"Television shows, or a television series that includes multiple episodes"</description><freebaseID>/tv/tv_program</freebaseID><comment /></Category><Category id="246"><categoryName>televisionStation</categoryName><englishName>television stations</englishName><humanFormat>%s is a {TV station}</humanFormat><populate>1</populate><visible>1</visible><generalizations>mediaCompany geolocatableThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "WHDH" "WGBH" "WBZ-TV" "WLS" "WFLD-TV" "WGN-TV" "WNET" "WWOR" "KONG" "KCPQ" "KVOS" "KDKA" "WXPI" "WTHR" "WISH TV" "KTRK"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>television station</queryString><editDate /><author /><curator /><description>A television station is a broadcaster which transmits television (audio &amp; video). </description><freebaseID>/broadcast/tv_station</freebaseID><comment /></Category><Category id="247"><categoryName>terroristOrganization</categoryName><englishName>terrorist organizations</englishName><humanFormat>%s is a {terrorist organization}</humanFormat><populate>1</populate><visible>1</visible><generalizations>organization </generalizations><mutexExceptions>geopoliticalOrganization</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances>"Al Qaeda" "Hamas" "Ansar al-Islam" "Hezbollah" "Irish Republican Army" "Palestinian Islamic Jihad"  "People's Liberation Army of Manipur"  "al-Qaida in Iraq"  "Ansar al-Islam"  "Egyptian Islamic Jihad" "Asbat al-Ansar" "Lashkar-e-Toiba" &#8220;Al-Muqawama al-Islamiyya&#8221; &#8220;Babbar Khalsa&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>terrorist organization</queryString><editDate>2010-06-29</editDate><author>Tom Mitchell</author><curator /><description>an organization that is involved in terrorist activities.</description><freebaseID>/base/terrorism/terrorist_organization</freebaseID><comment /></Category><Category id="248"><categoryName>tool</categoryName><englishName>tools</englishName><humanFormat>%s is a {tool}</humanFormat><populate>1</populate><visible>1</visible><generalizations>item</generalizations><mutexExceptions>sportsEquipment</mutexExceptions><knownNegatives /><instanceType>common</instanceType><seedInstances> "chisels" "hammers" "pliers" "saws" "screwdrivers" "shovels" "axes" "pickaxes" "chainsaws" "jackhammers" "table saws" "mitre saws" "awls" "planers" "drills" "sanders"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>tool</queryString><editDate /><author /><curator /><description /><freebaseID>none</freebaseID><comment /></Category><Category id="249"><categoryName>tradeUnion</categoryName><englishName>trade unions</englishName><humanFormat>%s is a {trade union}</humanFormat><populate>1</populate><visible>1</visible><generalizations>organization</generalizations><mutexExceptions>nonProfitOrganization nonGovOrganization</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Solidarity " "International Confederation of Free Trade Unions" "Industrial Workers of the World" "World Federation of Trade Unions" "Actors' Equity Association" "Screen Actors Guild" "Equity " "AFL-CIO" "Transport Salaried Staffs' Association" "American Federation of Musicians" "United Mine Workers" "UNISON"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>trade union</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>A trade union (aka labor union) is an organization which represents workers in a certain industry or profession.</description><freebaseID>/business/trade_union</freebaseID><comment /></Category><Category id="250"><categoryName>traditionalGame</categoryName><englishName>games</englishName><humanFormat>%s is a non-sports, non-electronic {game}</humanFormat><populate>1</populate><visible>1</visible><generalizations>game</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>traditional game</queryString><editDate>2010-12-09</editDate><author>Bryan</author><curator /><description>Includes all non-sports, non-electronic games including board games, parlor games and card games. &#160;</description><freebaseID>/games/game</freebaseID><comment>Created to match with freebase category.  We can add more children as necessary</comment></Category><Category id="251"><categoryName>trail</categoryName><englishName>trails</englishName><humanFormat>%s is a {trail}</humanFormat><populate>1</populate><visible>1</visible><generalizations>location</generalizations><mutexExceptions>attraction</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>trail</queryString><editDate>2010-11-01</editDate><author>Bryan</author><curator /><description>Trails for hiking, walking, biking, or even driving.  Routes with street addresses cannot be trails.</description><freebaseID>none</freebaseID><comment>Added during feedback @ 160 because lake was picking up trails</comment></Category><Category id="252"><categoryName>trainStation</categoryName><englishName>train stations</englishName><humanFormat>%s is a {train station}</humanFormat><populate>1</populate><visible>1</visible><generalizations>building</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>"Grand Central Terminal","Toronto Union Station",&#8221;Glenmont&#8221;,&#8221;New Carrollton&#8221;,&#8221;Largo Town Center&#8221;,&#8221;Greenbelt&#8221;,&#8221;Armory&#8221;,&#8221;Anacostia&#8221;,&#8221;Arlington Cemetery&#8221;,&#8221;Benning Road&#8221;,&#8221;Braddock Road&#8221;,&#8221;Capitol Heights&#8221;,&#8221;Capitol South&#8221;,&#8221;Cheverly&#8221;,&#8221;Clarendon&#8221;,&#8221;Congress Heights&#8221;,&#8221;Court House&#8221;,&#8221;Crystal City&#8221;,&#8221;Deanwood&#8221;,&#8221;Dupont Circle&#8221;,&#8221;Eastern Market&#8221;,&#8221;Federal Triangle&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>train station</queryString><editDate>2010-09-06</editDate><author>M.Samadi</author><curator /><description>railway station (mainly British Commonwealth) or railroad station (mainly US)) is a railway facility where trains regularly stop to load or unload passengers or freight (goods). It generally consists of a platform next to the tracks and a building (depot) providing related services such as ticket sales and waiting rooms.</description><freebaseID>/en/train_station</freebaseID><comment>Are all train stations buildings?  I guess we could make building a mutexException if not.</comment></Category><Category id="253"><categoryName>transportation</categoryName><englishName>transportation systems</englishName><humanFormat>%s is a {transportation system}</humanFormat><populate>1</populate><visible>1</visible><generalizations>attraction</generalizations><mutexExceptions>vehicle building port</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances>&#8220;MTA New york city&#8221;, &#8220;John F. Kennedy International Airport&#8221;,&#8221;LaGuardia Airport&#8221;,&#8221;seabus&#8221;,&#8221;Newark International Airport&#8221;,&#8221;City Lights Cruises&#8221;,&#8221;Spirit Cruises&#8221;,&#8221;The New York Waterway&#8221;,&#8221;subways&#8221;,&#8221;city buses&#8221;,&#8221;air port&#8221;,&#8221;Trains&#8221;,&#8221;Los Angeles Public Transit&#8221;,&#8221;Metro Red Line&#8221;,&#8221;Metro Vancouver&#8221;,&#8221;BC transportation&#8221;,&#8221;King County Metro Transit&#8221;,&#8221;King County Metro&#8221;,&#8221;Commuter rail&#8221;,&#8221;Metropolitan Rail&#8221;,&#8221;commuter rail&#8221;,&#8221;light rail&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>transportation</queryString><editDate>2010-09-06</editDate><author>M.Samadi</author><curator /><description>a mode of travel, such as rail transport or automobile. It is a category defining a means of moving from one location to another.</description><freebaseID>/travel/transportation_mode</freebaseID><comment>Making this generalize to attraction is good for the attraction-based relations, but it is less than perfect to say as a byproduct that a seed like "light rail" is therefore a location.  BTW, making this an attraction impiles mutexException with things like airport and trainStation!</comment></Category><Category id="254"><categoryName>university</categoryName><englishName>universities</englishName><humanFormat>%s is a {university}</humanFormat><populate>1</populate><visible>1</visible><generalizations>school geolocatableThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "California Institute of Technology" "Carnegie Mellon University" "CMU" "Colorado State University" "Federal University of Sao Carlos" "Harvard University" "Imperial College London" "Massachusetts Institute of Technology" "Princeton University" "Stanford University" "University of Oxford" "University of Paris Sorbonne" "University of Pittsburgh" "University of Tokyo" "USC"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>university</queryString><editDate /><author /><curator /><description>A university is a post-high school educational institution. This category includes colleges and technical schools.</description><freebaseID>/education/university</freebaseID><comment /></Category><Category id="255"><categoryName>url</categoryName><englishName>URLs</englishName><humanFormat>%s is a {URL}</humanFormat><populate>1</populate><visible>1</visible><generalizations>website</generalizations><mutexExceptions /><knownNegatives /><instanceType>url</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>URL</queryString><editDate>2012-07-09</editDate><author>Bryan</author><curator /><description>A URL</description><freebaseID /><comment /></Category><Category id="256"><categoryName>vegetable</categoryName><englishName>vegetables</englishName><humanFormat>%s is a {vegetable}</humanFormat><populate>1</populate><visible>1</visible><generalizations>food</generalizations><mutexExceptions>plant agriculturalProduct</mutexExceptions><knownNegatives /><instanceType>common</instanceType><seedInstances> "carrots" "celery" "corn" "lettuce" "tomatoes" "potatoes" "spinach" "arugola" "rhubarb" "chard" "amaranth" "peppers" "mushrooms" "peas" "green beans"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>vegetable</queryString><editDate /><author /><curator /><description>An edible plant or part of a plant other than a sweet fruit or seed. This usually means the leaf, stem, or root of a plant.  This is meant to dovetail with the more botanical definition we have of fruit, and to not allow cullinary / colloquial vegetables that qualify for membership in our fruit category.  Mushrooms are not vegetables.</description><freebaseID>none</freebaseID><comment /></Category><Category id="257"><categoryName>vehicle</categoryName><englishName>vehicles</englishName><humanFormat>%s is a kind of {vehicle}</humanFormat><populate>1</populate><visible>1</visible><generalizations>product visualizableObject</generalizations><mutexExceptions>transportation weapon</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances> "airplanes" "bicycles" "cars" "trains" "trucks" "tanks" "boats" "tricycles" "unicycles" "scooters" "motorcycles" "Harley Davidsons" "sports cars" "coupes" "sedans"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>vehicle</queryString><editDate /><author /><curator /><description>Any vessel or other conveyance machine used for purposes of travel.  Apparel and other personal affects, e.g. shoes or walking sticks, do not count.</description><freebaseID>none</freebaseID><comment>/travel/transportation_mode looks good by its instances, but its description would include things like &#8220;by foot&#8221; or other modes of transportation not involving a vehicle.</comment></Category><Category id="258"><categoryName>vein</categoryName><englishName>veins</englishName><humanFormat>%s is a {vein}</humanFormat><populate>1</populate><visible>1</visible><generalizations>bodyPart</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "hepatic portal vein" "venae cavae" "great saphenous vein" "brachiocephalic vein" "superior vena cava" "inferior vena cava" "umbilical vein" "pulmonary vein" "venule" "azygos vein" "great cerebral vein" "jugular vein"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>vein</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"A vein is a blood vessel that carries blood toward the heart."</description><freebaseID>/medicine/vein</freebaseID><comment /></Category><Category id="259"><categoryName>vertebrate</categoryName><englishName>vertebrates</englishName><humanFormat>%s is a {vertebrate}</humanFormat><populate>1</populate><visible>1</visible><generalizations>animal</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString>vertebrate</queryString><editDate /><author /><curator /><description>An animal which has a back bone</description><freebaseID /><comment /></Category><Category id="260"><categoryName>videoGame</categoryName><englishName>video games</englishName><humanFormat>%s is a {video game}</humanFormat><populate>1</populate><visible>1</visible><generalizations>software game</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances> "Super Mario Brothers" "Halo 3" "Doom" "Call of Duty" "Mario Kart Wii" "Gran Turismo" "Super Mario 64" "Grand Theft Auto" "Tetris" "Guitar Hero III"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>video game</queryString><editDate /><author /><curator /><description>A video game is a piece of interactive software used primarily for entertainment, including computer games, console games, arcade games, and hand-held games. However, this category excludes video game consoles.</description><freebaseID>/cvg/computer_videogame</freebaseID><comment /></Category><Category id="261"><categoryName>videoGameSystem</categoryName><englishName>video game systems</englishName><humanFormat>%s is a {video game system}</humanFormat><populate>1</populate><visible>1</visible><generalizations>consumerElectronicItem</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances>&#8220;Nintendo Entertainment System&#8221; &#8220;Atari 2600&#8221; &#8220;GameCube&#8221; &#8220;nds&#8221; &#8220;Magnavox Odyssey&#8221; &#8220;neo geo&#8221; &#8220;Sega Game Gear&#8221; &#8220;PS3&#8221; "Wii" "Super Nintendo" "Sega Genesis" "PSP"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>video game</queryString><editDate>2010-06-07</editDate><author>Bryan</author><curator /><description>includes any form of electronic game device, from handheld units as small as a phone to large powerful computer systems and even arcade coin-operated systems.</description><freebaseID>/cvg/cvg_platform</freebaseID><comment /></Category><Category id="262"><categoryName>virus</categoryName><englishName>virus</englishName><humanFormat>%s is a {virus}</humanFormat><populate>1</populate><visible>1</visible><generalizations>species</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances>&#8220;echovirus&#8221; &#8220;Hepatitis F&#8221; &#8220;granuloviruses&#8221; &#8220;CpGV&#8221; &#8220;Marburg virus&#8221; &#8220;hepatitis delta virus&#8221; &#8220;cowpea mosaic virus&#8221; &#8220;rotavirus&#8221; &#8220;HHV6&#8221; &#8220;Talimogene laherparepvec&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>virus</queryString><editDate>2015-06-12</editDate><author>Bryan</author><curator /><description>A small infectious agent that replicates only inside the living cells of other organisms</description><freebaseID>none</freebaseID><comment>edited on 2010-10-30 by Estevam</comment></Category><Category id="263"><categoryName>visualArtForm</categoryName><englishName>visual art forms</englishName><humanFormat>%s is form of {visual art}</humanFormat><populate>1</populate><visible>1</visible><generalizations>creativeWork</generalizations><mutexExceptions>hobby</mutexExceptions><knownNegatives /><instanceType>common</instanceType><seedInstances> "painting" "etching" "printmaking" "photography" "sculpture" "installation art" "drawing" "ceramics" "lithography" "screen printing" "collage" "mixed media" "mosaic" "comics" "performance art"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>visual art form</queryString><editDate /><author /><curator /><description>A categorization of the visual arts. An art form is a specific form for artistic expression to take.An art form more or less corresponds to the tools or materials used to create an art work (FreeBase)</description><freebaseID>/visual_art/visual_art_form</freebaseID><comment>should we rename to visual_art_form?</comment></Category><Category id="264"><categoryName>visualArtist</categoryName><englishName>visual artists</englishName><humanFormat>%s is a {visual artist}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>musician celebrity male female architect personByLocation professor</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Leonardo da Vinci" "Pablo Picasso" "Auguste Rodin" "Vincent van Gogh" "Robert Rauschenberg" "Frida Kahlo" "Claude Monet" "Andy Warhol" "Rene Magritte" "Robert Morris" "Nancy Graves" "Cindy Sherman" "Edward Hopper" "Alexander Calder" "Sam Taylor-Wood"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>visual artist</queryString><editDate /><author /><curator /><description>A visual artist creates artistic works which are mainly experienced by sight. This category includes painters, sculptors and architects, but excludes authors.</description><freebaseID>/visual_art/visual_artist</freebaseID><comment /></Category><Category id="265"><categoryName>visualArtMovement</categoryName><englishName>visual art movements</englishName><humanFormat>%s is a {visual art movement}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Italian Renaissance" "Cubism" "Impressionism" "Expressionism" "Postmodernism" "Neo-Dada" "Pop Art" "Surrealism" "Conceptual Art" "Realism" "Minimalism" "Romanticism" "Baroque" "Neoclassicism" "Fauvism"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>visual art movement</queryString><editDate /><author /><curator /><description>A tendency or style in art with a specific common philosophy or goal, followed by a group of artists during a restricted period of time, or, at least, with the heyday of the movement more or less strictly so restricted (usually a few months, years or decades) (FreeBase).  This does not include things that are merly genres, such as &#8220;fantasy art&#8221; or &#8220;oceanic art&#8221;.</description><freebaseID>/visual_art/art_period_movement</freebaseID><comment>should we rename to visual_art_movement?</comment></Category><Category id="266"><categoryName>wallItem</categoryName><englishName>wall items</englishName><humanFormat>%s is an {item found on a wall}</humanFormat><populate>1</populate><visible>1</visible><generalizations>householdItem</generalizations><mutexExceptions>kitchenItem hallwayItem bathroomItem officeItem bedroomItem</mutexExceptions><knownNegatives>"table","sofa","chair","refrigerator","roof"</knownNegatives><instanceType>all</instanceType><seedInstances>"clock" "blackboard" "painting" "whiteboard" "light switch" "shelf" "coat hook" "window sill" "wall outlet" "faceplate" "thermostat" "electrical outlet" "mirror" "poster"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>wall item</queryString><editDate>2011-05-17</editDate><author>Tom</author><curator /><description>Any item that is commonly found on a wall </description><freebaseID /><comment>introduced for vision and robotic systems</comment></Category><Category id="267"><categoryName>weapon</categoryName><englishName>weapons</englishName><humanFormat>%s is a {weapon}</humanFormat><populate>1</populate><visible>1</visible><generalizations>item visualizableObject</generalizations><mutexExceptions>vehicle</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances> "katanas" "swords" "nunchucks" "AK-47" "Colt 45" "guns" "knives" "Blue Steel missile" "high mobility multipurpose wheeled vehicle" "rocket launchers"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>weapon</queryString><editDate>2010-05-06</editDate><author>Burr</author><curator /><description>"A weapon is any tool used for fighting"</description><freebaseID>none</freebaseID><comment /></Category><Category id="268"><categoryName>weatherPhenomenon</categoryName><englishName>weather phenomena</englishName><humanFormat>%s is a {weather phenomenon}</humanFormat><populate>1</populate><visible>1</visible><generalizations>event</generalizations><mutexExceptions /><knownNegatives /><instanceType>common</instanceType><seedInstances> "fog" "lightning" "rain" "snow" "wind" "hail" "tornado" "clouds" "storms" "thunder" "thunderstorms" "sleet" "droughts"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>weather phenomenon</queryString><editDate /><author /><curator /><description>Anything that happens naturally in the atmosphere</description><freebaseID /><comment>I suggest that we refine this into the following: natural_phenomenon, meteorological_phenomenon, weather_condition, form_of_precipitation</comment></Category><Category id="269"><categoryName>website</categoryName><englishName>websites</englishName><humanFormat>%s is a {website}</humanFormat><populate>1</populate><visible>1</visible><generalizations>location</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances> "google.com" "facebook.com" "yahoo.com" "youtube.com" "wikipedia.com" "blogger.com" "msn.com" "twitter.com" "wordpress.com" "bing.com" "amazon.com" "fawm.org" "active-learning.net" "www.cs.cmu.edu" "www.whitehouse.gov"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>website</queryString><editDate /><author>Burr</author><curator /><description>A Website or (Web site) is a collection of web pages, typically common to a particular domain name or subdomain on the World Wide Web on the Internet. A web page is a document, typically written in HTML,&#160;that is almost always accessible via HTTP, a protocol that transfers information from the website's server to display in the user's Web browser.</description><freebaseID>/internet/website</freebaseID><comment>This is distinct from the URL category for ad hoc reasons, but probably is worth keeping in order to capture more casual ways to refer to websites.</comment></Category><Category id="270"><categoryName>wine</categoryName><englishName>wines</englishName><humanFormat>%s is a {wine}</humanFormat><populate>1</populate><visible>1</visible><generalizations>beverage</generalizations><mutexExceptions /><knownNegatives>"tea","coffee","beer","whiskey"</knownNegatives><instanceType>all</instanceType><seedInstances>"cabernet" "bordeaux" "pinot noir" "sauvignon blanc" "chianti" "burgundy" "chablis" "Heitz Cabernet Sauvignon" "merlot" "zinfandel" "white zinfandel" "red zinfandel" "claret" "champagne" "riesling"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>wine</queryString><editDate>2011-05-17</editDate><author>Tom</author><curator /><description>Types of wines or specific vintanges of particular wineries</description><freebaseID>/wine/wine_type</freebaseID><comment /></Category><Category id="271"><categoryName>winery</categoryName><englishName>wineries</englishName><humanFormat>%s is a {winery}</humanFormat><populate>1</populate><visible>1</visible><generalizations>company</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances>"Duckhorn" "Beringer Vineyards" "Arrowleaf Cellars" "au bon climat" "Benziger family winery" "calstar cellars" "Chateau Latour" "covenant wines" "eyrie vineyards" "far niente winery" "fiddlehead cellars" "girard winery" "hayman hill" "markham vineyards" "palmaz vineyards" "ravenswood winery" "rodney strong vineyards" "stonehedge winery" "Chateau Figeac" "Cos d'Estournel"</seedInstances><seedExtractionPatterns>&#8220;_ produce wines&#8221;</seedExtractionPatterns><conceptSynonyms /><queryString>winery</queryString><editDate>2011-05-24</editDate><author>Tom</author><curator /><description>Companies that produce and sell wines</description><freebaseID>/wine/wine_producer</freebaseID><comment /></Category><Category id="272"><categoryName>writer</categoryName><englishName>writers</englishName><humanFormat>%s is a {writer}</humanFormat><populate>1</populate><visible>1</visible><generalizations>person</generalizations><mutexExceptions>celebrity female male personByLocation journalist scientist mlAuthor comedian professor</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances> "Stephen Dubner" "Robert Kiyosaki" "Arthur Agatston" "Dan Brown" "J.K. Rowling" "Rick Warren" "James Joyce" "F . Scott Fitzgerald" "Aldous Huxley" "John Steinbeck"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>writer</queryString><editDate /><author /><curator /><description>A writer is a person who produces written work. This category includes book authors, poets and playwrights.</description><freebaseID>/book/author</freebaseID><comment /></Category><Category id="273"><categoryName>year</categoryName><englishName>years</englishName><humanFormat>%s is a {year}</humanFormat><populate>1</populate><visible>1</visible><generalizations>date</generalizations><mutexExceptions>dateLiteral</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances /><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate>2011-03-28</editDate><author>Bryan</author><curator /><description>Four-digit years</description><freebaseID /><comment>For BLITZ2.  Not defined by regexp so that we can furnish a list of them.  There might be a bug to do with inheritance and regexp anyway.</comment></Category><Category id="274"><categoryName>zipCode</categoryName><englishName>ZIP codes</englishName><humanFormat>%s is a {ZIP code}</humanFormat><populate>1</populate><visible>1</visible><generalizations>location</generalizations><mutexExceptions>nonNegInteger</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances> "60611" "30324" "90046" "55057" "92130" "32801" "10650" "12401" "30309" "21701"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>zip code</queryString><editDate /><author /><curator /><description>US ZIP codes.  Other postal codes are not allowed</description><freebaseID>none</freebaseID><comment>Parent category could map to /location/postal_code</comment></Category><Category id="275"><categoryName>zoo</categoryName><englishName>zoos</englishName><humanFormat>%s is a {zoo}</humanFormat><populate>1</populate><visible>1</visible><generalizations>attraction</generalizations><mutexExceptions>park aquarium</mutexExceptions><knownNegatives /><instanceType>proper</instanceType><seedInstances>&#8220;San Diego Zoo&#8221;,&#8221;Disney's Animal Kingdom&#8221;,&#8221;San Diego Wild Animal Park&#8221;,&#8221;Maryland Zoo&#8221;,&#8221;Bronx Zoo&#8221;,&#8221;Columbus Zoo&#8221;,&#8221;San Antonio Zoo&#8221;,&#8221;Henry Doorly Zoo&#8221;,&#8221;Phoenix Zoo&#8221;,&#8221;St. Louis Zoo&#8221;,&#8221;Birmingham Zoo&#8221;,&#8221;Dublin Zoo&#8221;,&#8221;Bristol Zoo&#8221;,&#8221;Wilhelma Zoo&#8221;,&#8221;Edinburgh Zoo&#8221;,&#8221;Zoo of Azadiana&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>zoo</queryString><editDate>2010-06-18</editDate><author>Medhi (via Bryan)</author><curator /><description>facility in which animals are confined within enclosures, displayed to the public, and in which they may also be bred.</description><freebaseID /><comment>Freebase /zoos/zoo explicitly includes aquariums</comment></Category><Category id="276"><categoryName>visualizableThing</categoryName><englishName>visualizable thing</englishName><humanFormat>%s is a {visualizable object}</humanFormat><populate>1</populate><visible>1</visible><generalizations>everyPromotedThing</generalizations><mutexExceptions>location species person</mutexExceptions><knownNegatives>"happyness", "greed", "quality", "price", "100", "internet", "computer program"</knownNegatives><instanceType>all</instanceType><seedInstances>"car", "tree", "painting", "clock", "cathedral", "desktop computer", "savanna", "corolla", "field", "lake", "magenta", "round", "snowy", "silver", "vertical"</seedInstances><seedExtractionPatterns>"picture of a _"</seedExtractionPatterns><conceptSynonyms /><queryString /><editDate>2013-09-19</editDate><author>Alan</author><curator /><description>something which can be recognized visually</description><freebaseID /><comment /></Category><Category id="277"><categoryName>visualizableScene</categoryName><englishName>visualizable scene</englishName><humanFormat>%s is a {visualizable scene}</humanFormat><populate>1</populate><visible>1</visible><generalizations>visualizableThing</generalizations><mutexExceptions>item</mutexExceptions><knownNegatives>"ball", "cup", "chair", "bike", "coat"</knownNegatives><instanceType>all</instanceType><seedInstances>"airport", "alley", "savanna", "beer garden", "campus", "harbor", "pig farm", "slum", "wharf", "apple store", "bamboo forest", "barbershop", "bedroom", "cafeteria", "casino", "church", "office", "hospital", "highway"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate>2013-09-19</editDate><author>Alan</author><curator /><description>a visual scene (for NEIL's scene classifiers)</description><freebaseID /><comment /></Category><Category id="278"><categoryName>visualizableAttribute</categoryName><englishName>visualizable attribute</englishName><humanFormat>%s is a {visualizable attribute}</humanFormat><populate>1</populate><visible>1</visible><generalizations>visualizableThing</generalizations><mutexExceptions /><knownNegatives>"ball", "chair", "farm", "campus", "car"</knownNegatives><instanceType>all</instanceType><seedInstances>"amber", "crooked", "circle", "stripe", "modern", "gold", "narrow", "shiny", "symmetrical", "sunny", "cloud", "fog", "dry", "natural"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate>2013-09-19</editDate><author>Alan</author><curator /><description>a visual attribute (for NEIL)</description><freebaseID /><comment /></Category><Category id="279"><categoryName>visualizableObject</categoryName><englishName>visualizable object</englishName><humanFormat>%s is a {visualizable thing}</humanFormat><populate>1</populate><visible>1</visible><generalizations>visualizableThing</generalizations><mutexExceptions>item</mutexExceptions><knownNegatives>"ocean", "city", "green", "blue"</knownNegatives><instanceType>all</instanceType><seedInstances>"car", "bird", "chain", "cellphone", "flag", "fish", "rabbit", "violin", "piano", "pizza", "pistol", "rockets", "sailboat", "sheep", "shoe", "TV", "basketball", "chair", "sofa", "shirt", "coat", "corolla", "ak 47", "michael jordan", "leaning tower", "sphinx"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate>2013-09-19</editDate><author>Alan</author><curator /><description>a visual object (for NEIL)</description><freebaseID /><comment /></Category><Category id="280"><categoryName>scientificTerm</categoryName><englishName>scientific term</englishName><humanFormat>%s is a {scientific term}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions>mlArea physicsTerm</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances>AdaBoost, "Akaike information criterion", "Baum-Welch algorithm", "Bayes Ball", "Bayes net parameter learning", "Bayes net structure learning", "Bayes' rule", "Bayesian PCA", "Bayesian decision theory", "Bayesian estimation of Bayes net parameters", "Bayesian information criterion", "Bayesian linear regression", "Bayesian logistic regression", "Bayesian model averaging", "Bayesian model comparison", "Bayesian naive Bayes", "Bayesian networks", "Bayesian parameter estimation in exponential families", "Bayesian parameter estimation", "Bayesian parameter estimation: Gaussian distribution", "Bayesian parameter estimation: multinomial distribution", "Bayesian parameter estimation: multivariate Gaussians", "Bellman equations", "Boltzmann machines", "CRP clustering", "Central Limit Theorem", "Chain Rule", "Chernoff bounds", "Chinese restaurant franchise", "Chinese restaurant process", "Cholesky decomposition", "Chow-Liu trees", "Cramer's rule", "Cramer-Rao bound", "Dirichlet diffusion trees", "Dirichlet distribution", "Dirichlet process", "Divergence Theorem", "EM algorithm for PCA", "Euler's formula", "Expectation-Maximization algorithm", "F measure", "Fisher information matrix", "Fisher information", "Fisher kernel", "Fisher's linear discriminant", "GP classification with the Laplace approximation", "Gaussian BP on trees", "Gaussian MRFs", "Gaussian discriminant analysis", "Gaussian distribution", "Gaussian elimination", "Gaussian process classification", "Gaussian process regression", "Gaussian processes", "Gaussian variable elimination as Gaussian elimination", "Gaussian variable elimination", "Gibbs sampling as a special case of Metropolis-Hastings", "Gibbs sampling", "Green's Theorem", "HMM inference as belief propagation", "Hamiltonian Monte Carlo", "Hopfield networks", "IBP linear-Gaussian model", "Indian buffet process", "Isomap", "Jeffreys prior", "Jensen's inequality", "K nearest neighbors", "KKT conditions", "KL divergence", "Kalman filter derivation", "Kalman filter", "Kalman smoother", "Kalman smoothing as forward-backward", "LASSO", "LU factorization", "Lagrange multipliers", "Langrange duality", "MAP parameter estimation", "MCMC convergence", "MRF parameter learning", "Markov and Chebyshev inequalities", "Markov chain Monte Carlo", "Markov chains", "Markov decision process MDP", "Markov models", "Markov random fields", "Metropolis-Hastings algorithm", "Monte Carlo estimation", "PAC learning", "PDFs of functions of random variables", "Pitman-Yor process", "Poisson distribution", "QR decomposition", "Riemann integral", "SVM optimality conditions", "SVM vs. logistic regression", "Schur product theorem", "Stokes' Theorem three dimensions", "Student-t distribution", "Swedsen-Wang algorithm", "Taylor approximations", "Tikhonov regularization", "VC dimension", "Viterbi algorithm", "Wishart distribution", "adaptive rejection sampling", "agglomerative clustering", "annealed importance sampling", "asymptotics of maximum likelihood", "backpropagation for second-order methods", "backpropagation", "bagging", "bases", "basis function expansions", "beta distribution", "beta process", "bias-variance decomposition", "binary linear classifiers", "binomial distribution", "boosting as optimization", "change of basis", "collapsed Gibbs sampling", "column space and nullspace", "comparing Gaussian mixtures and k-means", "comparing normal populations", "complex numbers", "complex vectors and matrices", "computational complexity of graphical model inference", "computations on multivariate Gaussians", "computing matrix inverses", "computing probabilities by counting", "computing the nullspace", "conditional distributions", "conditional expectation", "conditional independence", "conditional probability", "conditional random fields", "conservative vector fields", "constructing kernels", "converting between graphical models", "convex functions", "convex optimization", "convex sets", "convolutional neural nets", "covariance matrices", "covariance", "cross product", "cross validation", "cumulative distribution function", "d-separation", "decision trees", "deep belief networks", "determinant and volume", "determinant", "diagonalization", "differential entropy", "differential forms", "dot product", "early stopping", "eigenvalues and eigenvectors", "entropy", "evaluating multiple integrals: change of variables", "evaluating multiple integrals: polar coordinates", "expectation and variance", "expectation propagation", "expectimax search", "exponential distribution", "exponential families", "exterior derivative", "factor analysis", "factor graphs", "feed-forward neural nets", "fitting logistic regression with iterative reweighted least squares", "forward-backward algorithm", "four fundamental subspaces", "functions of several variables", "gamma distribution", "gamma function", "generalization", "generalized linear models", "generative vs. discriminative models", "gradient descent", "gradient", "heavy-tailed distributions", "hidden Markov models", "hierarchical Dirichlet process", "higher-order partial derivatives", "importance sampling", "independent component analysis", "independent events", "independent random variables", "inference in MRFs", "information form for multivariate Gaussians", "inner product", "junction trees", "k-means", "k-means++", "kernel PCA", "kernel SVM", "kernel ridge regression", "latent Dirichlet allocation", "latent semantic analysis", "learning Bayes net parameters with missing data", "learning GP hyperparameters", "learning invariances in neural nets", "learning linear dynamical systems", "limits and continuity in R^n", "line integrals", "linear approximation", "linear dynamical systems", "linear least squares", "linear regression as maximum likelihood", "linear regression with multiple outputs", "linear regression", "linear regression: closed-form solution", "linear systems as matrices", "linear transformations as matrices", "linear-Gaussian models", "log-linear MRFs", "logistic regression", "loopy BP as variational inference", "loopy belief propagation", "loss function", "matrix inverse", "matrix multiplication", "matrix transpose", "max-product on trees", "maximum likelihood in exponential families", "maximum likelihood", "maximum likelihood: multivariate Gaussians", "mean field approximation", "method of moments", "mixture of Bernoullis", "mixture of Gaussians models", "moment generating functions", "multidimensional scaling", "multinomial coefficients", "multinomial distribution", "multinomial logistic regression", "multiple integrals", "multiplicity of eigenvalues", "multivariate CDF", "multivariate Gaussian distribution", "multivariate distributions", "mutual information", "naive Bayes", "nonnegative matrix factorization", "nonparametric density estimation", "optimization problems", "orthogonal subspaces", "orthonormal bases", "parameterizing lines and planes", "parametric curves", "parametric surfaces", "partial derivatives", "particle filter", "perceptron algorithm", "policy iteration", "positive definite matrices", "principal component analysis proof", "principal component analysis", "probabilistic Latent Semantic Analysis", "probabilistic PCA", "probabilistic matrix factorization", "probability", "probit function", "probit regression", "projection onto a subspace", "pullback", "random forests", "random variables", "recurrent neural networks", "regularization", "rejection sampling", "restricted Boltzmann machines", "reversible jump MCMC", "ridge regression as SVD", "ridge regression", "roots of polynomials", "sampling from a Gaussian", "second derivative test", "sequential Monte Carlo", "sequential minimal optimization", "singular value decomposition", "slice sampling", "soft margin SVM", "soft weight sharing in neural nets", "solution sets of linear systems", "solving difference equations with matrices", "sparse coding", "spectral decomposition", "statistical hypothesis testing", "stochastic gradient descent", "strong law of large numbers", "structural risk minimization", "structured mean field", "subspaces", "sufficient statistics", "sum-product on trees", "support vector regression", "surface integrals", "tangent propagation", "the Laplace approximation", "the bootstrap", "the curse of dimensionality", "the evidence approximation", "the kernel trick", "the support vector machine", "topology of R^n", "transformation method", "uninformative priors", "unions of events", "unitary matrices", "unsupervised pre-training", "value iteration", "variable elimination", "variational Bayes EM", "variational Bayes", "variational characterization of eigenvalues", "variational inference and convex duality", "variational inference and exponential families", "variational inference", "variational interpretation of EM", "variational linear regression", "variational logistic regression", "variational mixture of Gaussians", "vector fields", "vector spaces", "vectors", "von Mises distribution", "weak law of large numbers", "weight decay in neural networks", "AdaBoost", "Bayes net parameter learning", "Bayes net structure learning", "Bayes' rule", "Bayesian decision theory", "Bayesian estimation of Bayes net parameters", "Bayesian linear regression", "Bayesian logistic regression", "Bayesian model averaging", "Bayesian model comparison", "Bayesian networks", "Bayesian parameter estimation", "Bayesian parameter estimation: multinomial distribution", "Bayesian parameter estimation: multivariate Gaussians", "Bellman equations", "CRP clustering", "Central Limit Theorem", "Chain Rule", "Chernoff bounds", "Chinese restaurant franchise", "Chinese restaurant process", "Cholesky decomposition", "Dirichlet distribution", "Dirichlet process", "Expectation-Maximization algorithm", "Fisher information", "Fisher information matrix", "Gaussian MRFs", "Gaussian discriminant analysis", "Gaussian distribution", "Gaussian elimination", "Gaussian process classification", "Gaussian process regression", "Gaussian processes", "Gaussian variable elimination", "Gibbs sampling", "Green's Theorem", "Hopfield networks", "Indian buffet process", "Jensen's inequality", "K nearest neighbors", "KKT conditions", "KL divergence", "Kalman filter", "Kalman smoother", "LASSO", "LU factorization", "Lagrange multipliers", "Langrange duality", "MAP parameter estimation", "MCMC convergence", "MRF parameter learning", "Markov and Chebyshev inequalities", "Markov chain Monte Carlo", "Markov chains", "Markov decision process MDP", "Markov random fields", "Metropolis-Hastings algorithm", "Monte Carlo estimation", "PDFs of functions of random variables", "Poisson distribution", "SVM optimality conditions", "Student-t distribution", "Taylor approximations", "VC dimension", "Viterbi algorithm", "Wishart distribution", "agglomerative clustering", "backpropagation", "bagging", "bases", "basis function expansions", "beta distribution", "binary linear classifiers", "binomial distribution", "change of basis", "collapsed Gibbs sampling", "column space and nullspace", "complex numbers", "complex vectors and matrices", "computations on multivariate Gaussians", "conditional distributions", "conditional independence", "conditional probability", "conservative vector fields", "constructing kernels", "convex functions", "convex optimization", "convex sets", "covariance", "covariance matrices", "cross product", "cumulative distribution function", "d-separation", "decision trees", "deep belief networks", "determinant", "diagonalization", "differential forms", "dot product", "eigenvalues and eigenvectors", "entropy", "evaluating multiple integrals: change of variables", "evaluating multiple integrals: polar coordinates", "expectation and variance", "exponential distribution", "exponential families", "exterior derivative", "factor analysis", "factor graphs", "feed-forward neural nets", "fitting logistic regression with iterative reweighted least squares", "forward-backward algorithm", "four fundamental subspaces", "functions of several variables", "gamma distribution", "gamma function", "generalization", "gradient", "gradient descent", "heavy-tailed distributions", "hidden Markov models", "higher-order partial derivatives", "importance sampling", "independent events", "independent random variables", "inference in MRFs", "information form for multivariate Gaussians", "k-means", "latent Dirichlet allocation", "latent semantic analysis", "learning GP hyperparameters", "learning invariances in neural nets", "limits and continuity in R^n", "line integrals", "linear approximation", "linear dynamical systems", "linear least squares", "linear regression", "linear regression as maximum likelihood", "linear regression: closed-form solution", "linear systems as matrices", "linear transformations as matrices", "logistic regression", "loopy belief propagation", "loss function", "matrix inverse", "matrix multiplication", "matrix transpose", "max-product on trees", "maximum likelihood", "maximum likelihood: multivariate Gaussians", "mean field approximation", "mixture of Gaussians models", "moment generating functions", "multidimensional scaling", "multinomial coefficients", "multinomial distribution", "multiple integrals", "multivariate Gaussian distribution", "multivariate distributions", "mutual information", "naive Bayes", "optimization problems", "orthogonal subspaces", "orthonormal bases", "parameterizing lines and planes", "parametric curves", "partial derivatives", "particle filter", "positive definite matrices", "precision and recall", "principal component analysis", "principal component analysis proof", "probabilistic Latent Semantic Analysis", "probabilistic PCA", "probability", "probit function", "probit regression", "projection onto a subspace", "random variables", "rejection sampling", "restricted Boltzmann machines", "ridge regression", "roots of polynomials", "singular value decomposition", "spectral decomposition", "statistical hypothesis testing", "stochastic gradient descent", "subspaces", "sum-product on trees", "surface integrals", "the Laplace approximation", "the evidence approximation", "the kernel trick", "the support vector machine", "transformation method", "uninformative priors", "unions of events", "value iteration", "variable elimination", "variational Bayes", "variational characterization of eigenvalues", "variational inference", "variational interpretation of EM", "vector fields", "vector spaces", "vectors", "weak law of large numbers", "weight decay in neural networks"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>scientific term</queryString><editDate>2014-03-24</editDate><author>Partha</author><curator /><description>a scientific term for prerequisite detection (currently ML and AI focused)</description><freebaseID /><comment /></Category><Category id="281"><categoryName>time</categoryName><englishName>time</englishName><humanFormat>%s is a {time}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions>nonNegInteger</mutexExceptions><knownNegatives /><instanceType>all</instanceType><seedInstances>3pm,"12:00", "noon", "midnight", "8am", "9:00", "10:00 am", "3:15 pm", "20:30", "5:20 pm", "6:30 am", "11:00 pm", "1:05 pm"</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString /><editDate>2015-04-20</editDate><author>Estevam</author><curator /><description>a specific time</description><freebaseID /><comment /></Category><Category id="282"><categoryName>bombingEvent</categoryName><englishName>bombing event</englishName><humanFormat>%s is a {bombing event}</humanFormat><populate>1</populate><visible>1</visible><generalizations>event</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances>&#8221;Boston Marathon bombings&#8221; &#8221;2014 Peshawar School Massacre&#8221; &#8221;2007 Zahedan bombings&#8221; &#8221;Aleppo University bombings&#8221; &#8220;Bombing of Plaza de Mayo&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>bombing atack</queryString><editDate>2015-04-20</editDate><author>Estevam</author><curator /><description /><freebaseID /><comment /></Category><Category id="283"><categoryName>productLaunchEvent</categoryName><englishName>product launch event</englishName><humanFormat>%s is a {product launch event}</humanFormat><populate>1</populate><visible>1</visible><generalizations>event</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances>&#8220;Rolls Royce Launches Ghost Series II&#8221; &#8220;Launch of xbox360&#8221; &#8220;Launch of ps3&#8221; &#8220;Launch of galaxy s5&#8221; &#8220;Launch of iphone6&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>product launch</queryString><editDate>2015-04-20</editDate><author>Estevam</author><curator /><description /><freebaseID /><comment /></Category><Category id="284"><categoryName>protestEvent</categoryName><englishName>protest event</englishName><humanFormat>%s is a {protest event}</humanFormat><populate>1</populate><visible>1</visible><generalizations>event</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances>&#8221;Indonesian invasion of East Timor&#8221; &#8221;2009 Malagasy political crisis&#8221; &#8221;Anti-austerity movement&#8221; &#8221;Stuha&#8221; &#8221;Velvet Revolution&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>protest</queryString><editDate>2015-04-20</editDate><author>Estevam</author><curator /><description /><freebaseID /><comment /></Category><Category id="285"><categoryName>roadAccidentEvent</categoryName><englishName>road accident event</englishName><humanFormat>%s is a {road accident event}</humanFormat><populate>1</populate><visible>1</visible><generalizations>event</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances>&#8220;2009 Taconic State Parkway crash&#8221; &#8221;2006 Huntsville, Alabama bus accident&#8221; &#8221;1995 Fox River Grove bus&#8211;train collision&#8221; &#8221;Chappaquiddick incident&#8221; &#8221;1999 Bourbonnais, Illinois, train accident&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>road accident</queryString><editDate>2015-04-20</editDate><author>Estevam</author><curator /><description /><freebaseID /><comment /></Category><Category id="286"><categoryName>victim</categoryName><englishName>victim</englishName><humanFormat>%s is a {victim}</humanFormat><populate>1</populate><visible>1</visible><generalizations>abstractThing</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances>&#8220;Students&#8221; &#8220;Civilians&#8221; &#8220;Guards&#8221; &#8220;Soldiers&#8221; &#8220;Childrens&#8221; &#8220;Diane Schuler&#8221; &#8220;Mary Jo Kopechne&#8221; &#8220;Krystle Marie Campbell&#8221; &#8220;Lu Lingzi&#8221; &#8220;Martin William Richard&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>victim</queryString><editDate>2015-04-20</editDate><author>Estevam</author><curator /><description>a victim of an event, could be a person, or a group of person, like childrens, students, soldiers, drivers, etc</description><freebaseID /><comment /></Category><Category id="287"><categoryName>earthquakeEvent</categoryName><englishName>earthquakeEvent</englishName><humanFormat>%s is a {earthquake event}</humanFormat><populate>1</populate><visible>1</visible><generalizations>event</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances>&#8221;2011 Christchurch earthquake&#8221; &#8221;2011 T&#333;hoku earthquake and tsunami&#8221; &#8221;2000 Nicaragua earthquake&#8221; &#8221;1906 San Francisco earthquake&#8221; &#8221;2008 Lake Kivu earthquake&#8221;</seedInstances><seedExtractionPatterns /><conceptSynonyms /><queryString>earthquake event</queryString><editDate>2015-04-20</editDate><author>Estevam</author><curator /><description /><freebaseID /><comment /></Category><Category id="288"><categoryName>oilGasField</categoryName><englishName>oil or gas field</englishName><humanFormat>%s is an {oil or gas field}</humanFormat><populate>1</populate><visible>1</visible><generalizations>geolocatablething visualizablescene</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>"Agbami Field" "Sarir Field" "Samotlor Field" "Upper Zakum Field" "Burgan Field" "Rumaila Field" "Marun Field" "Athabasca Oil Sands" "Ghawar Field" "Bolivar Coastal Field" "Eagleville Field" "Spraberry Field" "Wattenberg Field" "Marcellus Shale" "Eagle Ford Shale"</seedInstances><seedExtractionPatterns>"oil fields such as _" "gas fields such as _"</seedExtractionPatterns><conceptSynonyms /><queryString>"oil or gas fields"</queryString><editDate>2015-07-16</editDate><author>Tom</author><curator /><description>"An field from which oil or natural gas are extracted."</description><freebaseID /><comment /></Category><Category id="289"><categoryName>refineryProduct</categoryName><englishName>refinery product</englishName><humanFormat>%s is a {refinery product}</humanFormat><populate>1</populate><visible>1</visible><generalizations>item</generalizations><mutexExceptions /><knownNegatives /><instanceType>all</instanceType><seedInstances>"aviation gasoline" "diesel fuel" "fuel oil" "gasoline" "graphite" "heating oil" "jet fuel" "kerosene" "LPG" "NGL" "naphtha" "petroleum coke" "slurry oil" "benzene" "methanol" "toluene"</seedInstances><seedExtractionPatterns>"refinery products such as _" "_ and other refinery products"</seedExtractionPatterns><conceptSynonyms /><queryString>"refinery products"</queryString><editDate>2015-07-16</editDate><author>Tom</author><curator /><description>"a product derived from a petroleum refinery"</description><freebaseID /><comment /></Category><Category id="290"><categoryName>petroleumRefiningCompany</categoryName><englishName>petroleum company</englishName><humanFormat>%s is a {pertroleum company}</humanFormat><populate>1</populate><visible>1</visible><generalizations>company</generalizations><mutexExceptions /><knownNegatives /><instanceType>proper</instanceType><seedInstances>"Mobile" "Exxon" "CITGO" "Volero" "Chevron" "BP" "Tesoro" "HollyFrontier" "LyondellBasell" "Marathon Petroleum" "Phillips 66" "Motiva" "Shell" "Suncor" "ExxonMobil" </seedInstances><seedExtractionPatterns>"petroleum companies such as _" "petroleum refining companies such as _" "oil companies such as _" "natural gas companies such as _"</seedExtractionPatterns><conceptSynonyms /><queryString>"petroleum companies"</queryString><editDate>2015-07-16</editDate><author>Tom</author><curator /><description>"a company in the petroleum sector"</description><freebaseID /><comment /></Category></Categories></Ontology>